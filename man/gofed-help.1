.TH GO2FED 1  2015-04-01
.SH NAME
gofed-apidiff,
gofed-bbo,
gofed-bitbucket2spec,
gofed-build,
gofed-check-commit,
gofed-check-deps,
gofed-gcpmaster,
gofed-ggi,
gofed-github2spec,
gofed-googlecode2spec,
gofed-help,
gofed-inspect,
gofed-lint,
gofed-pull,
gofed-push,
gofed-repo2spec,
gofed-review,
gofed-scan-deps,
gofed-scan-imports,
gofed-scan-symbols,
gofed-scratch-build,
gofed-scan-packages,
gofed-update,
gofed-version,
gofed-wizard
\- tools to automize packaging of golang devel source codes
.SH SYNOPSIS
\fBgofed\fR COMMANDS [\fIARGUMENTS\fR]
.SH DESCPRIPTION
.B gofed
is a tool providing ...
.SH COMMANDS

.PP
.B gofed apidiff
.RS 4
Compare two commits of the same upstream project/package.
.RE

.PP
.B gofed bbo
.RS 4
Buildroot override build for branches (all implicitly).
.RE

.PP
.B gofed bitbucket2spec PROJECT REPO COMMIT
.RS 4
Generate spec file from bitbucket.org repository.
.RE

.PP
.B gofed build
.RS 4
Build fedora branches (all implicitly).
.RE

.PP
.B gofed check-commit
.RS 4
For given package name (or import path) and upstream commit check
if the package is up2date with the commit.
.RE

.PP
.B gofed check-deps
.RS 4
For given list of project dependencies in JSON format (i.e. Godeps.json),
check if all dependencies are up2date in PkgDB.
.RE

.PP
.B gofed gcpmaster
.RS 4
All branches git cherry-pick master branch.
.RE

.PP
.B gofed ggi
.RS 4
Get golang imports (imported packages)
.RE

.PP
.B gofed github2spec PROJECT REPO COMMIT
.RS 4
Generate spec file from github.com repository.
.RE

.PP
.B gofed googlecode2spec REPO REVISION
.RS 4
Generate spec file from code.google.com repository.
.RE

.PP
.B gofed help
.RS 4
Prints help.
.RE

.PP
.B gofed inspect
.RS 4
Inspect decompressed tarball/directory for test files, list direct
directories (containing definition of golang packages),
list provided packages (import paths).
.RE

.PP
.B gofed lint
.RS 4
Run checks on golang spec file. Archive with source codes is needed.
.RE

.PP
.B gofed pull
.RS 4
Pull from branches (all implicitly).
.RE

.PP
.B gofed push
.RS 4
push to branches (all implicitly).
.RE

.PP
.B gofed repo2spec
.RS 4
Generate a spec file for general provider.
.RE

.PP
.B gofed review SPEC [--user] [--skip-koji]
.RS 4
Creates review request for Bugzilla.
.B SPEC
is a name of a spec file (with .spec extension)
First it builds the spec file.
Then scratch builds the resulting srpm in koji.
After successfull build,
the srpm and spec file are uploaded to user's fedora acount under
public_html/reviews/spec_without_extension folder.
Srpm and spec file are copied via scp so use ssh-copy-id to copy your key
to fedarapeople.org.
If the folder does not exist, it is created.
User is read from configuration file.
It can be specified by \fI\-\-user\fP option.
If all steps are succesfull, Preview Summary and Preview Description
are printed to stdout.
Followed by a link to Review Request template.
.RE

.PP
.B gofed scan-imports
.RS 4
Command to search for available used and provided import paths
across golang devel packages.
.RE

.PP
.B gofed scan-deps
.RS 4
Scan dependencies among golang packages.
.RE

.PP
.B gofed scan-symbols
.RS 4
Scan directory for go symbols.
.RE

.PP
.B gofed scratch-build
.RS 4
Scratch build fedora branches (all implicitly).
.RE

.PP
.B gofed update
.RS 4
Update fedora branches (all implicitly).
.RE

.PP
.B gofed scan-packages
.RS 4
Scan PkgDB for possible golang packages.
.RE

.PP
.B gofed version
.RS 4
Prints version.
.RE

.PP
.B gofed wizard
.RS 4
Run phases of building, updating, ... at once.
.RE

.SH EXAMPLES

.SS Example 1: Comparison of two releases of a golang project

Golang project can be download as a tarball.
In order to compare two releases, unpack corresponding tarballs to two
directories and run 'gofed apidiff DIR1 DIR2'.

E.g. to compare etcd-2.0.5 and etcd-2.0.7 (assuming their tarballs are already
unpacked), run:

.nf
	$ \fBgofed apidiff\fP etcd-2.0.5 etcd-2.0.7
.fi

The command implicitly outputs a list of packages (import paths) and all
symbols that has been changed and break back-compatibility.

.nf
	$ \fBgofed apidiff\fP etcd-2.0.5 etcd-2.0.7
	Package: etcdserver
		-VerifyBootstrapConfig func removed
	Package: wal
		-WALv2_0_1 variable/constant removed
		-WALUnknown variable/constant removed
		-WALv0_4 variable/constant removed
		-WALNotExist variable/constant removed
		-WALv2_0Proxy variable/constant removed
		-WALv2_0 variable/constant removed
		-WalVersion type removed
		-DetectVersion func removed
.fi

Running with \fI--prefix\fP option, all import paths are prefixed:

.nf
	$ \fBgofed apidiff\fP etcd-2.0.5 etcd-2.0.7 --prefix=github.com/coreos
	Package: github.com/coreos/etcdserver
		...
	Package: github.com/coreos/wal
		...
.fi

.SS Example 2: List all symbols for a golang project

To display all exported symbols of all packages of a golang project in DIR
directory, run 'gofed scansymbols -l DIR'. E.g. for etcd-2.0.5:

.nf
	$ \fBgofed apidiff\fP -l etcd-2.0.5
.fi

.SH COLOPHON

Any bug reports send to jchaloup@redhat.com or
https://github.com/ingvagabund/gofed

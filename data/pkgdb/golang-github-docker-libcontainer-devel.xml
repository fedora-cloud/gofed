<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="golang-github-docker-libcontainer-1.4.0-3.gitbada39c.fc23">
  <packages>
    <package importpath="github.com/docker/libcontainer/utils">
      <types/>
      <functions>
        <function name="GenerateRandomName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResolveRootfs">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CloseExecFrom">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExitStatus">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="syscall"/>
              <item value="WaitStatus"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/libcontainer/apparmor">
      <types/>
      <functions>
        <function name="InstallDefaultProfile">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsEnabled">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ApplyProfile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsEnabled">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ApplyProfile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="DefaultProfilePath"/>
      </names>
    </package>
    <package importpath="github.com/docker/libcontainer/selinux">
      <types>
        <type name="SELinuxContext" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="SetDisabled">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="SelinuxEnabled">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Setfilecon">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Getfilecon">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Setfscreatecon">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Getfscreatecon">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Getcon">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Getpidcon">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Getexeccon">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Setexeccon">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="ident" def="SELinuxContext"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewContext">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="SELinuxContext"/>
          </resultsList>
        </function>
        <function name="ReserveLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SelinuxGetEnforce">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="SelinuxGetEnforceMode">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="IntToMcs">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="FreeLxcContexts">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetLxcContexts">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SecurityCheckContext">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CopyLevel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Chcon">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DupSecOpt">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="DisableSecOpt">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Enforcing"/>
        <name value="Permissive"/>
        <name value="Disabled"/>
      </names>
    </package>
    <package importpath="github.com/docker/libcontainer/xattr">
      <types/>
      <functions>
        <function name="Listxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Getxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Setxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="XattrEnabled">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Listxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Getxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Setxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrNotSupportedPlatform"/>
      </names>
    </package>
    <package importpath="github.com/docker/libcontainer">
      <types>
        <type type="struct" name="Stats">
          <field type="slice" name="Interfaces">
            <elmtype type="pointer">
              <type type="ident" def="NetworkInterface"/>
            </elmtype>
          </field>
          <field type="pointer" name="CgroupStats">
            <type type="selector">
              <prefix value="cgroups"/>
              <item value="Stats"/>
            </type>
          </field>
        </type>
        <type type="struct" name="NetworkInterface">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="uint64" name="RxBytes"/>
          <field type="ident" def="uint64" name="RxPackets"/>
          <field type="ident" def="uint64" name="RxErrors"/>
          <field type="ident" def="uint64" name="RxDropped"/>
          <field type="ident" def="uint64" name="TxBytes"/>
          <field type="ident" def="uint64" name="TxPackets"/>
          <field type="ident" def="uint64" name="TxErrors"/>
          <field type="ident" def="uint64" name="TxDropped"/>
        </type>
        <type type="struct" name="Process">
          <field type="slice" name="Args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Env">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="Cwd"/>
          <field type="selector" name="Stdin">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="selector" name="Stdout">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="selector" name="Stderr">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="slice" name="ExtraFiles">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </elmtype>
          </field>
          <field type="ident" def="string" name="consolePath"/>
          <field type="slice" name="Capabilities">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="processOperations" name="ops"/>
        </type>
        <type type="struct" name="LinuxFactory">
          <field type="ident" def="string" name="Root"/>
          <field type="ident" def="string" name="InitPath"/>
          <field type="slice" name="InitArgs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="selector" name="Validator">
            <prefix value="validate"/>
            <item value="Validator"/>
          </field>
          <field type="func" name="NewCgroupsManager">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="configs"/>
                  <item value="Cgroup"/>
                </type>
              </type>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Manager"/>
              </type>
            </resultsList>
          </field>
        </type>
        <type name="Factory" type="interface">
          <method name="Create">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="configs"/>
                  <item value="Config"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Container"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Load">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Container"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="StartInitialization">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Type">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="ErrorCode" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="Error" type="interface">
          <method name="Detail">
            <paramsList>
              <type type="selector">
                <prefix value="io"/>
                <item value="Writer"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Code">
            <paramsList/>
            <resultsList>
              <type type="ident" def="ErrorCode"/>
            </resultsList>
          </method>
        </type>
        <type name="Status" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="State">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="int" name="InitProcessPid"/>
          <field type="ident" def="string" name="InitProcessStartTime"/>
          <field type="map" name="CgroupPaths">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="NamespacePaths">
            <keytype type="selector">
              <prefix value="configs"/>
              <item value="NamespaceType"/>
            </keytype>
            <valtype type="ident" def="string"/>
          </field>
          <field type="selector" name="Config">
            <prefix value="configs"/>
            <item value="Config"/>
          </field>
        </type>
        <type name="Container" type="interface">
          <method name="ID">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Status">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Status"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="State">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="State"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Config">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="configs"/>
                <item value="Config"/>
              </type>
            </resultsList>
          </method>
          <method name="Processes">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="int"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Stats">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Stats"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Set">
            <paramsList>
              <type type="selector">
                <prefix value="configs"/>
                <item value="Config"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Start">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Process"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Destroy">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Pause">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Resume">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="NotifyOOM">
            <paramsList/>
            <resultsList>
              <type type="channel" dir="2">
                <type type="struct" name=""/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Console" type="interface">
          <method name="Path">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Fd">
            <paramsList/>
            <resultsList>
              <type type="ident" def="uintptr"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxStandardInit"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxSetnsInit"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Wait">
          <recvList>
            <type type="ident" def="Process"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="ProcessState"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Pid">
          <recvList>
            <type type="ident" def="Process"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Signal">
          <recvList>
            <type type="ident" def="Process"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="Signal"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewConsole">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Process"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Console"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Code">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ErrorCode"/>
          </resultsList>
        </function>
        <function name="Detail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericError"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InitArgs">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="ident" def="LinuxFactory"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </resultsList>
        </function>
        <function name="InitPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="ident" def="LinuxFactory"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </resultsList>
        </function>
        <function name="SystemdCgroups">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="LinuxFactory"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Cgroupfs">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="LinuxFactory"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TmpfsRoot">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="LinuxFactory"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="func">
                <paramsList>
                  <type type="pointer">
                    <type type="ident" def="LinuxFactory"/>
                  </type>
                </paramsList>
                <resultsList>
                  <type type="ident" def="error"/>
                </resultsList>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Factory"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LinuxFactory"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Container"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LinuxFactory"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Container"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LinuxFactory"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="StartInitialization">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LinuxFactory"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxContainer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Config">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxContainer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="configs"/>
              <item value="Config"/>
            </type>
          </resultsList>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxContainer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Status"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="State">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxContainer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="State"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Processes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxContainer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxContainer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Stats"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxContainer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="configs"/>
              <item value="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxContainer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Process"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Destroy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxContainer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Pause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxContainer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Resume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxContainer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NotifyOOM">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxContainer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Fd">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxConsole"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uintptr"/>
          </resultsList>
        </function>
        <function name="Path">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxConsole"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxConsole"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxConsole"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="linuxConsole"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="IdInUse"/>
        <name value="InvalidIdFormat"/>
        <name value="ContainerNotExists"/>
        <name value="ContainerPaused"/>
        <name value="ContainerNotStopped"/>
        <name value="ContainerNotRunning"/>
        <name value="ProcessNotExecuted"/>
        <name value="ConfigInvalid"/>
        <name value="SystemError"/>
        <name value="Running"/>
        <name value="Pausing"/>
        <name value="Paused"/>
        <name value="Destroyed"/>
      </names>
    </package>
    <package importpath="github.com/docker/libcontainer/system">
      <types>
        <type name="ParentDeathSignal" type="ident">
          <type type="ident" def="int"/>
        </type>
      </types>
      <functions>
        <function name="Llistxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lgetxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lsetxattr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetClockTicks">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="GetClockTicks">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Setuid">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Setgid">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Setuid">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Setgid">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Setuid">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Setgid">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Setns">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetProcessStartTime">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Restore">
          <recvList>
            <type type="ident" def="ParentDeathSignal"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="ident" def="ParentDeathSignal"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Execv">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetParentDeathSignal">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetParentDeathSignal">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ParentDeathSignal"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetKeepCaps">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ClearKeepCaps">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Setctty">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/libcontainer/label">
      <types/>
      <functions>
        <function name="InitLabels">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GenLabels">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FormatMountLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetProcessLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetProcessLabel">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetFileLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetFileCreateLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Relabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPidLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ReserveLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnreserveLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DupSecOpt">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="DisableSecOpt">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="InitLabels">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GenLabels">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FormatMountLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetProcessLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetFileLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetFileCreateLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Relabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPidLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ReserveLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnreserveLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DupSecOpt">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="DisableSecOpt">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/libcontainer/configs">
      <types>
        <type type="struct" name="Network">
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Bridge"/>
          <field type="ident" def="string" name="MacAddress"/>
          <field type="ident" def="string" name="Address"/>
          <field type="ident" def="string" name="Gateway"/>
          <field type="ident" def="string" name="IPv6Address"/>
          <field type="ident" def="string" name="IPv6Gateway"/>
          <field type="ident" def="int" name="Mtu"/>
          <field type="ident" def="int" name="TxQueueLen"/>
          <field type="ident" def="string" name="HostInterfaceName"/>
          <field type="ident" def="bool" name="HairpinMode"/>
        </type>
        <type type="struct" name="Route">
          <field type="ident" def="string" name="Destination"/>
          <field type="ident" def="string" name="Source"/>
          <field type="ident" def="string" name="Gateway"/>
          <field type="ident" def="string" name="InterfaceName"/>
        </type>
        <type name="NamespaceType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Namespace">
          <field type="ident" def="NamespaceType" name="Type"/>
          <field type="ident" def="string" name="Path"/>
        </type>
        <type name="Namespaces" type="slice">
          <elmtype type="ident" def="Namespace"/>
        </type>
        <type type="struct" name="Mount">
          <field type="ident" def="string" name="Source"/>
          <field type="ident" def="string" name="Destination"/>
          <field type="ident" def="string" name="Device"/>
          <field type="ident" def="int" name="Flags"/>
          <field type="ident" def="string" name="Data"/>
          <field type="ident" def="string" name="Relabel"/>
          <field type="slice" name="PremountCmds">
            <elmtype type="ident" def="Command"/>
          </field>
          <field type="slice" name="PostmountCmds">
            <elmtype type="ident" def="Command"/>
          </field>
        </type>
        <type type="struct" name="Command">
          <field type="ident" def="string" name="Path"/>
          <field type="slice" name="Args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Env">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Dir"/>
        </type>
        <type type="struct" name="Device">
          <field type="ident" def="rune" name="Type"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="int64" name="Major"/>
          <field type="ident" def="int64" name="Minor"/>
          <field type="ident" def="string" name="Permissions"/>
          <field type="selector" name="FileMode">
            <prefix value="os"/>
            <item value="FileMode"/>
          </field>
          <field type="ident" def="uint32" name="Uid"/>
          <field type="ident" def="uint32" name="Gid"/>
        </type>
        <type type="struct" name="Rlimit">
          <field type="ident" def="int" name="Type"/>
          <field type="ident" def="uint64" name="Hard"/>
          <field type="ident" def="uint64" name="Soft"/>
        </type>
        <type type="struct" name="IDMap">
          <field type="ident" def="int" name="ContainerID"/>
          <field type="ident" def="int" name="HostID"/>
          <field type="ident" def="int" name="Size"/>
        </type>
        <type type="struct" name="Config">
          <field type="ident" def="bool" name="NoPivotRoot"/>
          <field type="ident" def="int" name="ParentDeathSignal"/>
          <field type="ident" def="string" name="PivotDir"/>
          <field type="ident" def="string" name="Rootfs"/>
          <field type="ident" def="bool" name="Readonlyfs"/>
          <field type="ident" def="bool" name="Privatefs"/>
          <field type="slice" name="Mounts">
            <elmtype type="pointer">
              <type type="ident" def="Mount"/>
            </elmtype>
          </field>
          <field type="slice" name="Devices">
            <elmtype type="pointer">
              <type type="ident" def="Device"/>
            </elmtype>
          </field>
          <field type="ident" def="string" name="MountLabel"/>
          <field type="ident" def="string" name="Hostname"/>
          <field type="ident" def="Namespaces" name="Namespaces"/>
          <field type="slice" name="Capabilities">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Networks">
            <elmtype type="pointer">
              <type type="ident" def="Network"/>
            </elmtype>
          </field>
          <field type="slice" name="Routes">
            <elmtype type="pointer">
              <type type="ident" def="Route"/>
            </elmtype>
          </field>
          <field type="pointer" name="Cgroups">
            <type type="ident" def="Cgroup"/>
          </field>
          <field type="ident" def="string" name="AppArmorProfile"/>
          <field type="ident" def="string" name="ProcessLabel"/>
          <field type="slice" name="Rlimits">
            <elmtype type="ident" def="Rlimit"/>
          </field>
          <field type="slice" name="AdditionalGroups">
            <elmtype type="ident" def="int"/>
          </field>
          <field type="slice" name="UidMappings">
            <elmtype type="ident" def="IDMap"/>
          </field>
          <field type="slice" name="GidMappings">
            <elmtype type="ident" def="IDMap"/>
          </field>
          <field type="slice" name="MaskPaths">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="ReadonlyPaths">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type name="FreezerState" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Cgroup">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Parent"/>
          <field type="ident" def="bool" name="AllowAllDevices"/>
          <field type="slice" name="AllowedDevices">
            <elmtype type="pointer">
              <type type="ident" def="Device"/>
            </elmtype>
          </field>
          <field type="ident" def="int64" name="Memory"/>
          <field type="ident" def="int64" name="MemoryReservation"/>
          <field type="ident" def="int64" name="MemorySwap"/>
          <field type="ident" def="int64" name="CpuShares"/>
          <field type="ident" def="int64" name="CpuQuota"/>
          <field type="ident" def="int64" name="CpuPeriod"/>
          <field type="ident" def="string" name="CpusetCpus"/>
          <field type="ident" def="string" name="CpusetMems"/>
          <field type="ident" def="int64" name="BlkioWeight"/>
          <field type="ident" def="string" name="BlkioWeightDevice"/>
          <field type="ident" def="FreezerState" name="Freezer"/>
          <field type="ident" def="string" name="Slice"/>
          <field type="ident" def="bool" name="OomKillDisable"/>
        </type>
      </types>
      <functions>
        <function name="NamespaceTypes">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="NamespaceType"/>
            </type>
          </resultsList>
        </function>
        <function name="Syscall">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Namespace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Namespace"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Namespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="NamespaceType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Namespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="NamespaceType"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Contains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Namespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="NamespaceType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="CloneFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Namespaces"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uintptr"/>
          </resultsList>
        </function>
        <function name="CgroupString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Device"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Mkdev">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Device"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="HostUID">
          <recvList>
            <type type="ident" def="Config"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HostGID">
          <recvList>
            <type type="ident" def="Config"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="NEWNET"/>
        <name value="NEWPID"/>
        <name value="NEWNS"/>
        <name value="NEWUTS"/>
        <name value="NEWIPC"/>
        <name value="NEWUSER"/>
        <name value="DefaultSimpleDevices"/>
        <name value="DefaultAllowedDevices"/>
        <name value="DefaultAutoCreatedDevices"/>
        <name value="Wildcard"/>
        <name value="Undefined"/>
        <name value="Frozen"/>
        <name value="Thawed"/>
      </names>
    </package>
    <package importpath="github.com/docker/libcontainer/integration">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/docker/libcontainer/cgroups/systemd">
      <types>
        <type type="struct" name="Manager">
          <field type="pointer" name="Cgroups">
            <type type="selector">
              <prefix value="configs"/>
              <item value="Cgroup"/>
            </type>
          </field>
          <field type="map" name="Paths">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Manager">
          <field type="pointer" name="Cgroups">
            <type type="selector">
              <prefix value="configs"/>
              <item value="Cgroup"/>
            </type>
          </field>
          <field type="map" name="Paths">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="UseSystemd">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Destroy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPaths">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Freeze">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="configs"/>
              <item value="FreezerState"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPids">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Stats"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ApplyDevices">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UseSystemd">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPids">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Destroy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPaths">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Stats"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Freeze">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="configs"/>
              <item value="FreezerState"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ApplyDevices">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Freeze">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="configs"/>
              <item value="FreezerState"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/libcontainer/configs/validate">
      <types>
        <type name="Validator" type="interface">
          <method name="Validate">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="configs"/>
                  <item value="Config"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="ConfigValidator"/>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Validator"/>
          </resultsList>
        </function>
        <function name="Validate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfigValidator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/libcontainer/nsenter">
      <types/>
      <functions/>
      <names>
        <name value="AlwaysFalse"/>
      </names>
    </package>
    <package importpath="github.com/docker/libcontainer/user">
      <types>
        <type type="struct" name="User">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Pass"/>
          <field type="ident" def="int" name="Uid"/>
          <field type="ident" def="int" name="Gid"/>
          <field type="ident" def="string" name="Gecos"/>
          <field type="ident" def="string" name="Home"/>
          <field type="ident" def="string" name="Shell"/>
        </type>
        <type type="struct" name="Group">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Pass"/>
          <field type="ident" def="int" name="Gid"/>
          <field type="slice" name="List">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="ExecUser">
          <field type="ident" def="int" name="Uid"/>
          <field type="ident" def="int" name="Gid"/>
          <field type="slice" name="Sgids">
            <elmtype type="ident" def="int"/>
          </field>
          <field type="ident" def="string" name="Home"/>
        </type>
      </types>
      <functions>
        <function name="ParsePasswdFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParsePasswd">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParsePasswdFileFilter">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="ident" def="User"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParsePasswdFilter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="ident" def="User"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseGroupFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Group"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseGroup">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Group"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseGroupFileFilter">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="ident" def="Group"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Group"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseGroupFilter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="ident" def="Group"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Group"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetExecUserPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="ExecUser"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ExecUser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetExecUser">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="ExecUser"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ExecUser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPasswdPath">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPasswd">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetGroupPath">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetGroup">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPasswdPath">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPasswd">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetGroupPath">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetGroup">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CurrentUser">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="User"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LookupUser">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="User"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LookupUid">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="User"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CurrentGroup">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Group"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LookupGroup">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Group"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LookupGid">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Group"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrRange"/>
        <name value="ErrUnsupported"/>
      </names>
    </package>
    <package importpath="github.com/docker/libcontainer/stacktrace">
      <types>
        <type type="struct" name="Stacktrace">
          <field type="slice" name="Frames">
            <elmtype type="ident" def="Frame"/>
          </field>
        </type>
        <type type="struct" name="Frame">
          <field type="ident" def="string" name="File"/>
          <field type="ident" def="string" name="Function"/>
          <field type="ident" def="string" name="Package"/>
          <field type="ident" def="int" name="Line"/>
        </type>
      </types>
      <functions>
        <function name="NewFrame">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Frame"/>
          </resultsList>
        </function>
        <function name="Capture">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Stacktrace"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/libcontainer/cgroups/fs">
      <types>
        <type type="struct" name="PerfEventGroup"/>
        <type type="struct" name="MemoryGroup"/>
        <type type="struct" name="HugetlbGroup"/>
        <type type="struct" name="FreezerGroup"/>
        <type type="struct" name="DevicesGroup"/>
        <type type="struct" name="CpusetGroup"/>
        <type type="struct" name="CpuacctGroup"/>
        <type type="struct" name="CpuGroup"/>
        <type type="struct" name="BlkioGroup"/>
        <type type="struct" name="Manager">
          <field type="pointer" name="Cgroups">
            <type type="selector">
              <prefix value="configs"/>
              <item value="Cgroup"/>
            </type>
          </field>
          <field type="map" name="Paths">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PerfEventGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PerfEventGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PerfEventGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PerfEventGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Stats"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Stats"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HugetlbGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HugetlbGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HugetlbGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HugetlbGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Stats"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FreezerGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FreezerGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FreezerGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FreezerGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Stats"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DevicesGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DevicesGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DevicesGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DevicesGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Stats"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpusetGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpusetGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpusetGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpusetGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Stats"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ApplyDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpusetGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpuacctGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpuacctGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpuacctGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpuacctGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Stats"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpuGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpuGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpuGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CpuGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Stats"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BlkioGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BlkioGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BlkioGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="data"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BlkioGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Stats"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Destroy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPaths">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="ApplyDevices">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Cgroup"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cgroups"/>
                <item value="Stats"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Freeze">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="configs"/>
              <item value="FreezerState"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPids">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Manager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckCpushares">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrNotSupportStat"/>
        <name value="ErrNotValidFormat"/>
        <name value="CgroupProcesses"/>
      </names>
    </package>
    <package importpath="github.com/docker/libcontainer/netlink">
      <types>
        <type name="NetlinkRequestData" type="interface">
          <method name="Len">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
          <method name="ToWireFormat">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="IfInfomsg">
          <field type="selector" name="">
            <prefix value="syscall"/>
            <item value="IfInfomsg"/>
          </field>
        </type>
        <type type="struct" name="IfAddrmsg">
          <field type="selector" name="">
            <prefix value="syscall"/>
            <item value="IfAddrmsg"/>
          </field>
        </type>
        <type type="struct" name="RtMsg">
          <field type="selector" name="">
            <prefix value="syscall"/>
            <item value="RtMsg"/>
          </field>
        </type>
        <type type="struct" name="RtAttr">
          <field type="selector" name="">
            <prefix value="syscall"/>
            <item value="RtAttr"/>
          </field>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="children">
            <elmtype type="ident" def="NetlinkRequestData"/>
          </field>
        </type>
        <type type="struct" name="NetlinkRequest">
          <field type="selector" name="">
            <prefix value="syscall"/>
            <item value="NlMsghdr"/>
          </field>
          <field type="slice" name="Data">
            <elmtype type="ident" def="NetlinkRequestData"/>
          </field>
        </type>
        <type type="struct" name="NetlinkSocket">
          <field type="ident" def="int" name="fd"/>
          <field type="selector" name="lsa">
            <prefix value="syscall"/>
            <item value="SockaddrNetlink"/>
          </field>
        </type>
        <type type="struct" name="MacVlanLink">
          <field type="ident" def="string" name="MasterDev"/>
          <field type="ident" def="string" name="SlaveDev"/>
          <field type="ident" def="string" name="mode"/>
        </type>
        <type type="struct" name="Route">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="net"/>
              <item value="IPNet"/>
            </type>
          </field>
          <field type="pointer" name="Iface">
            <type type="selector">
              <prefix value="net"/>
              <item value="Interface"/>
            </type>
          </field>
          <field type="ident" def="bool" name="Default"/>
        </type>
        <type type="struct" name="IfAddr">
          <field type="pointer" name="Iface">
            <type type="selector">
              <prefix value="net"/>
              <item value="Interface"/>
            </type>
          </field>
          <field type="selector" name="IP">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="pointer" name="IPNet">
            <type type="selector">
              <prefix value="net"/>
              <item value="IPNet"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NetworkGetRoutes">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Route"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkAdd">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkDel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkUp">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkAddIp">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkDelIp">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddRoute">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddDefaultGw">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkSetMTU">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkSetTxQueueLen">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkCreateVethPair">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkChangeName">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkSetNsFd">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkSetNsPid">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkSetMaster">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkDown">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateBridge">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteBridge">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddToBridge">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ToWireFormat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IfInfomsg"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IfInfomsg"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="ToWireFormat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IfAddrmsg"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IfAddrmsg"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="ToWireFormat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RtMsg"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RtMsg"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RtAttr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="ToWireFormat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RtAttr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="ToWireFormat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NetlinkRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="AddData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NetlinkRequest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="NetlinkRequestData"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NetlinkSocket"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Send">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NetlinkSocket"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="NetlinkRequest"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Receive">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NetlinkSocket"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="syscall"/>
                <item value="NetlinkMessage"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NetlinkSocket"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NetlinkSocket"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="syscall"/>
              <item value="NetlinkMessage"/>
            </type>
            <type type="ident" def="uint32"/>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HandleAck">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NetlinkSocket"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkAdd">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkDel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkUp">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkDown">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkSetMacAddress">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkSetMTU">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkSetTxQueueLen">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkSetMaster">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkSetNoMaster">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkSetNsPid">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkSetNsFd">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkChangeName">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkCreateVethPair">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkAddVlan">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint16"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Mode">
          <recvList>
            <type type="ident" def="MacVlanLink"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="NetworkLinkAddMacVlan">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkAddMacVtap">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkDelIp">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkLinkAddIp">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NetworkGetRoutes">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Route"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddRoute">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddDefaultGw">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateBridge">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteBridge">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddToBridge">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMacAddress">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetHairpinMode">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ChangeName">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrNotImplemented"/>
        <name value="IFNAMSIZ"/>
        <name value="DEFAULT_CHANGE"/>
        <name value="IFLA_INFO_KIND"/>
        <name value="IFLA_INFO_DATA"/>
        <name value="VETH_INFO_PEER"/>
        <name value="IFLA_MACVLAN_MODE"/>
        <name value="IFLA_VLAN_ID"/>
        <name value="IFLA_NET_NS_FD"/>
        <name value="IFLA_ADDRESS"/>
        <name value="IFLA_BRPORT_MODE"/>
        <name value="SIOC_BRADDBR"/>
        <name value="SIOC_BRDELBR"/>
        <name value="SIOC_BRADDIF"/>
        <name value="MACVLAN_MODE_PRIVATE"/>
        <name value="MACVLAN_MODE_VEPA"/>
        <name value="MACVLAN_MODE_BRIDGE"/>
        <name value="MACVLAN_MODE_PASSTHRU"/>
        <name value="ErrWrongSockType"/>
        <name value="ErrShortResponse"/>
        <name value="ErrInterfaceExists"/>
      </names>
    </package>
    <package importpath="github.com/docker/libcontainer/cgroups">
      <types>
        <type type="struct" name="Mount">
          <field type="ident" def="string" name="Mountpoint"/>
          <field type="slice" name="Subsystems">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="ThrottlingData">
          <field type="ident" def="uint64" name="Periods"/>
          <field type="ident" def="uint64" name="ThrottledPeriods"/>
          <field type="ident" def="uint64" name="ThrottledTime"/>
        </type>
        <type type="struct" name="CpuUsage">
          <field type="ident" def="uint64" name="TotalUsage"/>
          <field type="slice" name="PercpuUsage">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="ident" def="uint64" name="UsageInKernelmode"/>
          <field type="ident" def="uint64" name="UsageInUsermode"/>
        </type>
        <type type="struct" name="CpuStats">
          <field type="ident" def="CpuUsage" name="CpuUsage"/>
          <field type="ident" def="ThrottlingData" name="ThrottlingData"/>
        </type>
        <type type="struct" name="MemoryStats">
          <field type="ident" def="uint64" name="Usage"/>
          <field type="ident" def="uint64" name="Cache"/>
          <field type="ident" def="uint64" name="MaxUsage"/>
          <field type="map" name="Stats">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="uint64"/>
          </field>
          <field type="ident" def="uint64" name="Failcnt"/>
        </type>
        <type type="struct" name="BlkioStatEntry">
          <field type="ident" def="uint64" name="Major"/>
          <field type="ident" def="uint64" name="Minor"/>
          <field type="ident" def="string" name="Op"/>
          <field type="ident" def="uint64" name="Value"/>
        </type>
        <type type="struct" name="BlkioStats">
          <field type="slice" name="IoServiceBytesRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoServicedRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoQueuedRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoServiceTimeRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoWaitTimeRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoMergedRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="IoTimeRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
          <field type="slice" name="SectorsRecursive">
            <elmtype type="ident" def="BlkioStatEntry"/>
          </field>
        </type>
        <type type="struct" name="Stats">
          <field type="ident" def="CpuStats" name="CpuStats"/>
          <field type="ident" def="MemoryStats" name="MemoryStats"/>
          <field type="ident" def="BlkioStats" name="BlkioStats"/>
        </type>
        <type name="Manager" type="interface">
          <method name="Apply">
            <paramsList>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetPids">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="int"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetStats">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Stats"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Freeze">
            <paramsList>
              <type type="selector">
                <prefix value="configs"/>
                <item value="FreezerState"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Destroy">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetPaths">
            <paramsList/>
            <resultsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="Set">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="configs"/>
                  <item value="Config"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="NotFoundError">
          <field type="ident" def="string" name="Subsystem"/>
        </type>
      </types>
      <functions>
        <function name="FindCgroupMountpoint">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FindCgroupMountpointDir">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetThisCgroupDir">
          <recvList>
            <type type="ident" def="Mount"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetCgroupMounts">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Mount"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetAllSubsystems">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetThisCgroupDir">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetInitCgroupDir">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReadProcsFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseCgroupFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PathExists">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="EnterPid">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemovePaths">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewStats">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Stats"/>
            </type>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NotFoundError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewNotFoundError">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsNotFound">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/docker/libcontainer/devices">
      <types/>
      <functions>
        <function name="Major">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Minor">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="DeviceFromPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configs"/>
                <item value="Device"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HostDevices">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="configs"/>
                  <item value="Device"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrNotADevice"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="github.com/docker/libcontainer/cgroups"/>
    <import path="os"/>
    <import path="syscall"/>
    <import path="github.com/docker/libcontainer/apparmor"/>
    <import path="github.com/docker/libcontainer/configs"/>
    <import path="github.com/docker/libcontainer/label"/>
    <import path="github.com/docker/libcontainer/system"/>
    <import path="fmt"/>
    <import path="io/ioutil"/>
    <import path="os/exec"/>
    <import path="path/filepath"/>
    <import path="strings"/>
    <import path="time"/>
    <import path="encoding/json"/>
    <import path="errors"/>
    <import path="io"/>
    <import path="math"/>
    <import path="encoding/binary"/>
    <import path="testing"/>
    <import path="net"/>
    <import path="strconv"/>
    <import path="github.com/docker/libcontainer/netlink"/>
    <import path="github.com/docker/libcontainer/utils"/>
    <import path="github.com/Sirupsen/logrus"/>
    <import path="github.com/docker/libcontainer/user"/>
    <import path="text/template"/>
    <import path="github.com/docker/libcontainer/stacktrace"/>
    <import path="github.com/docker/docker/pkg/mount"/>
    <import path="regexp"/>
    <import path="github.com/docker/libcontainer/cgroups/fs"/>
    <import path="github.com/docker/libcontainer/cgroups/systemd"/>
    <import path="github.com/docker/libcontainer/configs/validate"/>
    <import path="sync"/>
    <import path="unsafe"/>
    <import path="github.com/syndtr/gocapability/capability"/>
    <import path="github.com/docker/libcontainer/xattr"/>
    <import path="runtime"/>
    <import path="crypto/rand"/>
    <import path="encoding/hex"/>
    <import path="reflect"/>
    <import path="bufio"/>
    <import path="C"/>
    <import path="github.com/docker/libcontainer/selinux"/>
    <import path="github.com/codegangsta/cli"/>
    <import path="github.com/docker/libcontainer"/>
    <import path="github.com/docker/docker/pkg/term"/>
    <import path="log"/>
    <import path="github.com/docker/libcontainer/nsenter"/>
    <import path="os/signal"/>
    <import path="bytes"/>
    <import path="math/rand"/>
    <import path="sync/atomic"/>
    <import path="github.com/coreos/go-systemd/dbus"/>
    <import path="github.com/godbus/dbus"/>
    <import path="path"/>
  </imports>
</project>

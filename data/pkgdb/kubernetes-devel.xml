<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="kubernetes-0.16.2-4.fc23">
  <packages>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/namespace/etcd">
      <types>
        <type type="struct" name="REST">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
          <field type="pointer" name="status">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
        <type type="struct" name="StatusREST">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
        <type type="struct" name="FinalizeREST">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
            <type type="pointer">
              <type type="ident" def="FinalizeREST"/>
            </type>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="DeleteOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FinalizeREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FinalizeREST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/persistentvolumeclaim/etcd">
      <types>
        <type type="struct" name="REST">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
        <type type="struct" name="StatusREST">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/ovirt">
      <types>
        <type type="struct" name="OVirtInstance">
          <field type="ident" def="string" name="UUID"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="IPAddress"/>
        </type>
        <type name="OVirtInstanceMap" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="OVirtInstance"/>
        </type>
        <type type="struct" name="OVirtCloud">
          <field type="pointer" name="VmsRequest">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
          <field type="pointer" name="HostsRequest">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
        </type>
        <type type="struct" name="OVirtApiConfig">
          <field type="struct" name="Connection">
            <field type="ident" def="string" name="ApiEntry"/>
            <field type="ident" def="string" name="Username"/>
            <field type="ident" def="string" name="Password"/>
          </field>
          <field type="struct" name="Filters">
            <field type="ident" def="string" name="VmsQuery"/>
          </field>
        </type>
        <type type="struct" name="XmlVmAddress">
          <field type="ident" def="string" name="Address"/>
        </type>
        <type type="struct" name="XmlVmInfo">
          <field type="ident" def="string" name="UUID"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Hostname"/>
          <field type="slice" name="Addresses">
            <elmtype type="ident" def="XmlVmAddress"/>
          </field>
          <field type="ident" def="string" name="State"/>
        </type>
        <type type="struct" name="XmlVmsList">
          <field type="selector" name="XMLName">
            <prefix value="xml"/>
            <item value="Name"/>
          </field>
          <field type="slice" name="Vm">
            <elmtype type="ident" def="XmlVmInfo"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Clusters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OVirtCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Clusters"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="TCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OVirtCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="TCPLoadBalancer"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Instances">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OVirtCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Instances"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Zones">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OVirtCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Zones"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NodeAddresses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OVirtCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="NodeAddress"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExternalID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OVirtCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListSortedNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OVirtInstanceMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OVirtCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNodeResources">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OVirtCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeResources"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Configure">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OVirtCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeSpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OVirtCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/client/clientcmd">
      <types>
        <type type="struct" name="ConfigOverrides">
          <field type="selector" name="AuthInfo">
            <prefix value="clientcmdapi"/>
            <item value="AuthInfo"/>
          </field>
          <field type="selector" name="ClusterInfo">
            <prefix value="clientcmdapi"/>
            <item value="Cluster"/>
          </field>
          <field type="selector" name="Context">
            <prefix value="clientcmdapi"/>
            <item value="Context"/>
          </field>
          <field type="ident" def="string" name="CurrentContext"/>
        </type>
        <type type="struct" name="ConfigOverrideFlags">
          <field type="ident" def="AuthOverrideFlags" name="AuthOverrideFlags"/>
          <field type="ident" def="ClusterOverrideFlags" name="ClusterOverrideFlags"/>
          <field type="ident" def="ContextOverrideFlags" name="ContextOverrideFlags"/>
          <field type="ident" def="FlagInfo" name="CurrentContext"/>
        </type>
        <type type="struct" name="AuthOverrideFlags">
          <field type="ident" def="FlagInfo" name="AuthPath"/>
          <field type="ident" def="FlagInfo" name="ClientCertificate"/>
          <field type="ident" def="FlagInfo" name="ClientKey"/>
          <field type="ident" def="FlagInfo" name="Token"/>
          <field type="ident" def="FlagInfo" name="Username"/>
          <field type="ident" def="FlagInfo" name="Password"/>
        </type>
        <type type="struct" name="ContextOverrideFlags">
          <field type="ident" def="FlagInfo" name="ClusterName"/>
          <field type="ident" def="FlagInfo" name="AuthInfoName"/>
          <field type="ident" def="FlagInfo" name="Namespace"/>
        </type>
        <type type="struct" name="ClusterOverrideFlags">
          <field type="ident" def="FlagInfo" name="APIServer"/>
          <field type="ident" def="FlagInfo" name="APIVersion"/>
          <field type="ident" def="FlagInfo" name="CertificateAuthority"/>
          <field type="ident" def="FlagInfo" name="InsecureSkipTLSVerify"/>
        </type>
        <type type="struct" name="FlagInfo">
          <field type="ident" def="string" name="LongName"/>
          <field type="ident" def="string" name="ShortName"/>
          <field type="ident" def="string" name="Default"/>
          <field type="ident" def="string" name="Description"/>
        </type>
        <type type="struct" name="DeferredLoadingClientConfig">
          <field type="pointer" name="loadingRules">
            <type type="ident" def="ClientConfigLoadingRules"/>
          </field>
          <field type="pointer" name="overrides">
            <type type="ident" def="ConfigOverrides"/>
          </field>
          <field type="selector" name="fallbackReader">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
        </type>
        <type type="struct" name="ClientConfigLoadingRules">
          <field type="ident" def="string" name="ExplicitPath"/>
          <field type="slice" name="Precedence">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="map" name="MigrationRules">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="DoNotResolvePaths"/>
        </type>
        <type name="ClientConfig" type="interface">
          <method name="RawConfig">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="clientcmdapi"/>
                <item value="Config"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ClientConfig">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="client"/>
                  <item value="Config"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Namespace">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="DirectClientConfig">
          <field type="selector" name="config">
            <prefix value="clientcmdapi"/>
            <item value="Config"/>
          </field>
          <field type="ident" def="string" name="contextName"/>
          <field type="pointer" name="overrides">
            <type type="ident" def="ConfigOverrides"/>
          </field>
          <field type="selector" name="fallbackReader">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
        </type>
        <type name="AuthLoader" type="interface">
          <method name="LoadAuth">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="clientauth"/>
                  <item value="Info"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="PromptingAuthLoader">
          <field type="selector" name="reader">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="errContextNotFound"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsContextNotFound">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="errConfigurationInvalid"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Errors">
          <recvList>
            <type type="ident" def="errConfigurationInvalid"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="error"/>
            </type>
          </resultsList>
        </function>
        <function name="IsConfigurationInvalid">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Validate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="clientcmdapi"/>
              <item value="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ConfirmUsable">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="clientcmdapi"/>
              <item value="Config"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RecommendedAuthOverrideFlags">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="AuthOverrideFlags"/>
          </resultsList>
        </function>
        <function name="RecommendedClusterOverrideFlags">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ClusterOverrideFlags"/>
          </resultsList>
        </function>
        <function name="RecommendedConfigOverrideFlags">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ConfigOverrideFlags"/>
          </resultsList>
        </function>
        <function name="RecommendedContextOverrideFlags">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ContextOverrideFlags"/>
          </resultsList>
        </function>
        <function name="BindAuthInfoFlags">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientcmdapi"/>
                <item value="AuthInfo"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="ident" def="AuthOverrideFlags"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="BindClusterFlags">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientcmdapi"/>
                <item value="Cluster"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="ident" def="ClusterOverrideFlags"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="BindOverrideFlags">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ConfigOverrides"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="ident" def="ConfigOverrideFlags"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="BindContextFlags">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientcmdapi"/>
                <item value="Context"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="ident" def="ContextOverrideFlags"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewNonInteractiveDeferredLoadingClientConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ClientConfigLoadingRules"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ConfigOverrides"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ClientConfig"/>
          </resultsList>
        </function>
        <function name="NewInteractiveDeferredLoadingClientConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ClientConfigLoadingRules"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ConfigOverrides"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ClientConfig"/>
          </resultsList>
        </function>
        <function name="RawConfig">
          <recvList>
            <type type="ident" def="DeferredLoadingClientConfig"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="clientcmdapi"/>
              <item value="Config"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ClientConfig">
          <recvList>
            <type type="ident" def="DeferredLoadingClientConfig"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Namespace">
          <recvList>
            <type type="ident" def="DeferredLoadingClientConfig"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewDefaultClientConfigLoadingRules">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ClientConfigLoadingRules"/>
            </type>
          </resultsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClientConfigLoadingRules"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientcmdapi"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Migrate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClientConfigLoadingRules"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResolveLocalPaths">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientcmdapi"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadFromFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientcmdapi"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Load">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientcmdapi"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteToFile">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="clientcmdapi"/>
              <item value="Config"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="clientcmdapi"/>
              <item value="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResolvePaths">
          <recvList>
            <type type="ident" def="ClientConfigLoadingRules"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewDefaultClientConfig">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="clientcmdapi"/>
              <item value="Config"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ConfigOverrides"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ClientConfig"/>
          </resultsList>
        </function>
        <function name="NewNonInteractiveClientConfig">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="clientcmdapi"/>
              <item value="Config"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="ConfigOverrides"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ClientConfig"/>
          </resultsList>
        </function>
        <function name="NewInteractiveClientConfig">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="clientcmdapi"/>
              <item value="Config"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="ConfigOverrides"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ClientConfig"/>
          </resultsList>
        </function>
        <function name="RawConfig">
          <recvList>
            <type type="ident" def="DirectClientConfig"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="clientcmdapi"/>
              <item value="Config"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ClientConfig">
          <recvList>
            <type type="ident" def="DirectClientConfig"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Namespace">
          <recvList>
            <type type="ident" def="DirectClientConfig"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ConfirmUsable">
          <recvList>
            <type type="ident" def="DirectClientConfig"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadAuth">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientauth"/>
                <item value="Info"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadAuth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PromptingAuthLoader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientauth"/>
                <item value="Info"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Prompt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PromptingAuthLoader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientauth"/>
                <item value="Info"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewPromptingAuthLoader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PromptingAuthLoader"/>
            </type>
          </resultsList>
        </function>
        <function name="NewDefaultAuthLoader">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="AuthLoader"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrNoContext"/>
        <name value="FlagClusterName"/>
        <name value="FlagAuthInfoName"/>
        <name value="FlagContext"/>
        <name value="FlagNamespace"/>
        <name value="FlagAPIServer"/>
        <name value="FlagAPIVersion"/>
        <name value="FlagAuthPath"/>
        <name value="FlagInsecure"/>
        <name value="FlagCertFile"/>
        <name value="FlagKeyFile"/>
        <name value="FlagCAFile"/>
        <name value="FlagEmbedCerts"/>
        <name value="FlagBearerToken"/>
        <name value="FlagUsername"/>
        <name value="FlagPassword"/>
        <name value="RecommendedConfigPathFlag"/>
        <name value="RecommendedConfigPathEnvVar"/>
        <name value="RecommendedHomeFileName"/>
        <name value="OldRecommendedHomeFile"/>
        <name value="RecommendedHomeFile"/>
        <name value="DefaultCluster"/>
        <name value="EnvVarCluster"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubectl">
      <types>
        <type name="Reaper" type="interface">
          <method name="Stop">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="DeleteOptions"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="NoSuchReaperError">
          <field type="ident" def="string" name="kind"/>
        </type>
        <type type="struct" name="ReplicationControllerReaper">
          <field type="selector" name="">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
          <field type="selector" name="pollInterval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="PodReaper">
          <field type="selector" name="">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
        </type>
        <type type="struct" name="ServiceReaper">
          <field type="selector" name="">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
        </type>
        <type name="SortableResourceNames" type="slice">
          <elmtype type="selector">
            <prefix value="api"/>
            <item value="ResourceName"/>
          </elmtype>
        </type>
        <type name="SortableEvents" type="slice">
          <elmtype type="selector">
            <prefix value="api"/>
            <item value="Event"/>
          </elmtype>
        </type>
        <type type="struct" name="ServiceGenerator"/>
        <type type="struct" name="BasicReplicationController"/>
        <type type="struct" name="RollingUpdater">
          <field type="ident" def="RollingUpdaterClient" name="c"/>
          <field type="ident" def="string" name="ns"/>
        </type>
        <type type="struct" name="RollingUpdaterConfig">
          <field type="selector" name="Out">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="pointer" name="OldRc">
            <type type="selector">
              <prefix value="api"/>
              <item value="ReplicationController"/>
            </type>
          </field>
          <field type="pointer" name="NewRc">
            <type type="selector">
              <prefix value="api"/>
              <item value="ReplicationController"/>
            </type>
          </field>
          <field type="selector" name="UpdatePeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="Interval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="Timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="RollingUpdaterCleanupPolicy" name="CleanupPolicy"/>
        </type>
        <type name="RollingUpdaterCleanupPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="RollingUpdaterClient" type="interface">
          <method name="GetReplicationController">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateReplicationController">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateReplicationController">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteReplicationController">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ControllerHasDesiredReplicas">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="wait"/>
                <item value="ConditionFunc"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="ResourcePrinter" type="interface">
          <method name="PrintObj">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="Writer"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ResourcePrinterFunc" type="func">
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="VersionedPrinter">
          <field type="ident" def="ResourcePrinter" name="printer"/>
          <field type="selector" name="convertor">
            <prefix value="runtime"/>
            <item value="ObjectConvertor"/>
          </field>
          <field type="slice" name="version">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="JSONPrinter"/>
        <type type="struct" name="YAMLPrinter">
          <field type="ident" def="string" name="version"/>
          <field type="selector" name="convertor">
            <prefix value="runtime"/>
            <item value="ObjectConvertor"/>
          </field>
        </type>
        <type type="struct" name="HumanReadablePrinter">
          <field type="map" name="handlerMap">
            <keytype type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </keytype>
            <valtype type="pointer">
              <type type="ident" def="handlerEntry"/>
            </valtype>
          </field>
          <field type="ident" def="bool" name="noHeaders"/>
          <field type="selector" name="lastType">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
        </type>
        <type type="struct" name="TemplatePrinter">
          <field type="ident" def="string" name="rawTemplate"/>
          <field type="pointer" name="template">
            <type type="selector">
              <prefix value="template"/>
              <item value="Template"/>
            </type>
          </field>
        </type>
        <type type="struct" name="ResizePrecondition">
          <field type="ident" def="int" name="Size"/>
          <field type="ident" def="string" name="ResourceVersion"/>
        </type>
        <type type="struct" name="PreconditionError">
          <field type="ident" def="string" name="Precondition"/>
          <field type="ident" def="string" name="ExpectedValue"/>
          <field type="ident" def="string" name="ActualValue"/>
        </type>
        <type name="ControllerResizeErrorType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="ControllerResizeError">
          <field type="ident" def="ControllerResizeErrorType" name="FailureType"/>
          <field type="ident" def="string" name="ResourceVersion"/>
          <field type="ident" def="error" name="ActualError"/>
        </type>
        <type name="Resizer" type="interface">
          <method name="Resize">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="uint"/>
              <type type="pointer">
                <type type="ident" def="ResizePrecondition"/>
              </type>
              <type type="pointer">
                <type type="ident" def="RetryParams"/>
              </type>
              <type type="pointer">
                <type type="ident" def="RetryParams"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ResizeSimple">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="ResizePrecondition"/>
              </type>
              <type type="ident" def="uint"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="ReplicationControllerResizer">
          <field type="ident" def="ResizerClient" name="c"/>
        </type>
        <type type="struct" name="RetryParams">
          <field type="selector" name="interval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type name="ResizerClient" type="interface">
          <method name="GetReplicationController">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateReplicationController">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ControllerHasDesiredReplicas">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="wait"/>
                <item value="ConditionFunc"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="ProxyServer">
          <field type="selector" name="">
            <prefix value="httputil"/>
            <item value="ReverseProxy"/>
          </field>
        </type>
        <type type="struct" name="NamespaceInfo">
          <field type="ident" def="string" name="Namespace"/>
        </type>
        <type type="struct" name="OutputVersionMapper">
          <field type="selector" name="">
            <prefix value="meta"/>
            <item value="RESTMapper"/>
          </field>
          <field type="ident" def="string" name="OutputVersion"/>
        </type>
        <type type="struct" name="ShortcutExpander">
          <field type="selector" name="">
            <prefix value="meta"/>
            <item value="RESTMapper"/>
          </field>
        </type>
        <type name="RESTClient" type="interface">
          <method name="Get">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="client"/>
                  <item value="Request"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="Post">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="client"/>
                  <item value="Request"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="client"/>
                  <item value="Request"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="Put">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="client"/>
                  <item value="Request"/>
                </type>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="GeneratorParam">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="bool" name="Required"/>
        </type>
        <type name="Generator" type="interface">
          <method name="Generate">
            <paramsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ParamNames">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="GeneratorParam"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="Describer" type="interface">
          <method name="Describe">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ObjectDescriber" type="interface">
          <method name="DescribeObject">
            <paramsList>
              <type type="interface"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="ErrNoDescriber">
          <field type="slice" name="Types">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="LimitRangeDescriber">
          <field type="selector" name="">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
        </type>
        <type type="struct" name="ResourceQuotaDescriber">
          <field type="selector" name="">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
        </type>
        <type type="struct" name="PodDescriber">
          <field type="selector" name="">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeDescriber">
          <field type="selector" name="">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaimDescriber">
          <field type="selector" name="">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
        </type>
        <type type="struct" name="ReplicationControllerDescriber">
          <field type="selector" name="">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
        </type>
        <type type="struct" name="ServiceDescriber">
          <field type="selector" name="">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
        </type>
        <type type="struct" name="NodeDescriber">
          <field type="selector" name="">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
        </type>
        <type type="struct" name="Describers">
          <field type="map" name="searchFns">
            <keytype type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </keytype>
            <valtype type="slice">
              <elmtype type="ident" def="typeFunc"/>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="WatchLoop">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="watch"/>
                  <item value="Event"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetVersion">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetClientVersion">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetApiVersions">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NoSuchReaperError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsNoSuchReaperError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ReaperFor">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Reaper"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReplicationControllerReaper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="DeleteOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodReaper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="DeleteOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceReaper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="DeleteOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="SortableResourceNames"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="SortableResourceNames"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="SortableResourceNames"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="SortableEvents"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="SortableEvents"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="SortableEvents"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ParamNames">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="GeneratorParam"/>
            </type>
          </resultsList>
        </function>
        <function name="Generate">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParamNames">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="GeneratorParam"/>
            </type>
          </resultsList>
        </function>
        <function name="Generate">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewRollingUpdater">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="RollingUpdaterClient"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RollingUpdater"/>
            </type>
          </resultsList>
        </function>
        <function name="GetNextControllerAnnotation">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetNextControllerAnnotation">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RollingUpdater"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="RollingUpdaterConfig"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewRollingUpdaterClient">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="RollingUpdaterClient"/>
          </resultsList>
        </function>
        <function name="GetReplicationController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realRollingUpdaterClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateReplicationController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realRollingUpdaterClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateReplicationController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realRollingUpdaterClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteReplicationController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realRollingUpdaterClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ControllerHasDesiredReplicas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realRollingUpdaterClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="wait"/>
              <item value="ConditionFunc"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPrinter">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ResourcePrinter"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PrintObj">
          <recvList>
            <type type="ident" def="ResourcePrinterFunc"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewVersionedPrinter">
          <recvList/>
          <paramsList>
            <type type="ident" def="ResourcePrinter"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="ObjectConvertor"/>
            </type>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ResourcePrinter"/>
          </resultsList>
        </function>
        <function name="PrintObj">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VersionedPrinter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PrintObj">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JSONPrinter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PrintObj">
          <recvList>
            <type type="pointer">
              <type type="ident" def="YAMLPrinter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewHumanReadablePrinter">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="HumanReadablePrinter"/>
            </type>
          </resultsList>
        </function>
        <function name="Handler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HumanReadablePrinter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HandledResources">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HumanReadablePrinter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="PrintObj">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HumanReadablePrinter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewTemplatePrinter">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TemplatePrinter"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PrintObj">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TemplatePrinter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="PreconditionError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="ControllerResizeError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Validate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResizePrecondition"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResizerFor">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="ResizerClient"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Resizer"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResizeCondition">
          <recvList/>
          <paramsList>
            <type type="ident" def="Resizer"/>
            <type type="pointer">
              <type type="ident" def="ResizePrecondition"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="wait"/>
              <item value="ConditionFunc"/>
            </type>
          </resultsList>
        </function>
        <function name="ResizeSimple">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReplicationControllerResizer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="ResizePrecondition"/>
            </type>
            <type type="ident" def="uint"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Resize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReplicationControllerResizer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint"/>
            <type type="pointer">
              <type type="ident" def="ResizePrecondition"/>
            </type>
            <type type="pointer">
              <type type="ident" def="RetryParams"/>
            </type>
            <type type="pointer">
              <type type="ident" def="RetryParams"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewResizerClient">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ResizerClient"/>
          </resultsList>
        </function>
        <function name="GetReplicationController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realResizerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateReplicationController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realResizerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ControllerHasDesiredReplicas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realResizerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="wait"/>
              <item value="ConditionFunc"/>
            </type>
          </resultsList>
        </function>
        <function name="NewProxyServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ProxyServer"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Serve">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProxyServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RESTMapping">
          <recvList>
            <type type="ident" def="OutputVersionMapper"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapping"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VersionAndKindForResource">
          <recvList>
            <type type="ident" def="ShortcutExpander"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ValidateParams">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="GeneratorParam"/>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MakeParams">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="GeneratorParam"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="MakeLabels">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ParseLabels">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="ErrNoDescriber"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DescribableResources">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="DescriberFor">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Describer"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LimitRangeDescriber"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResourceQuotaDescriber"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodDescriber"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PersistentVolumeDescriber"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PersistentVolumeClaimDescriber"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReplicationControllerDescriber"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriber"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NodeDescriber"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DescribeEvents">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="EventList"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DescribeObject">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Describers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Describers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Matches">
          <recvList>
            <type type="ident" def="typeFunc"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="reflect"/>
                <item value="Type"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="ident" def="typeFunc"/>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddJsonFilenameFlag">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="util"/>
                <item value="StringList"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="DeleteRollingUpdateCleanupPolicy"/>
        <name value="PreserveRollingUpdateCleanupPolicy"/>
        <name value="RenameRollingUpdateCleanupPolicy"/>
        <name value="ControllerResizeGetFailure"/>
        <name value="ControllerResizeUpdateFailure"/>
        <name value="DefaultObjectDescriber"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/componentstatus">
      <types>
        <type type="struct" name="REST">
          <field type="func" name="GetServersToValidate">
            <paramsList/>
            <resultsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="selector">
                  <prefix value="apiserver"/>
                  <item value="Server"/>
                </valtype>
              </type>
            </resultsList>
          </field>
          <field type="selector" name="rt">
            <prefix value="http"/>
            <item value="RoundTripper"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="map">
                  <keytype type="ident" def="string"/>
                  <valtype type="selector">
                    <prefix value="apiserver"/>
                    <item value="Server"/>
                  </valtype>
                </type>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="NewList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ToConditionStatus">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="probe"/>
              <item value="Result"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="ConditionStatus"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1">
      <types>
        <type type="struct" name="TypeMeta">
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="APIVersion"/>
        </type>
        <type type="struct" name="ListMeta">
          <field type="ident" def="string" name="SelfLink"/>
          <field type="ident" def="string" name="ResourceVersion"/>
        </type>
        <type type="struct" name="ObjectMeta">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="GenerateName"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="SelfLink"/>
          <field type="selector" name="UID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="ident" def="string" name="ResourceVersion"/>
          <field type="selector" name="CreationTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="pointer" name="DeletionTimestamp">
            <type type="selector">
              <prefix value="util"/>
              <item value="Time"/>
            </type>
          </field>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Annotations">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Volume">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="VolumeSource" name=""/>
        </type>
        <type type="struct" name="VolumeSource">
          <field type="pointer" name="HostPath">
            <type type="ident" def="HostPathVolumeSource"/>
          </field>
          <field type="pointer" name="EmptyDir">
            <type type="ident" def="EmptyDirVolumeSource"/>
          </field>
          <field type="pointer" name="GCEPersistentDisk">
            <type type="ident" def="GCEPersistentDiskVolumeSource"/>
          </field>
          <field type="pointer" name="AWSElasticBlockStore">
            <type type="ident" def="AWSElasticBlockStoreVolumeSource"/>
          </field>
          <field type="pointer" name="GitRepo">
            <type type="ident" def="GitRepoVolumeSource"/>
          </field>
          <field type="pointer" name="Secret">
            <type type="ident" def="SecretVolumeSource"/>
          </field>
          <field type="pointer" name="NFS">
            <type type="ident" def="NFSVolumeSource"/>
          </field>
          <field type="pointer" name="ISCSI">
            <type type="ident" def="ISCSIVolumeSource"/>
          </field>
          <field type="pointer" name="Glusterfs">
            <type type="ident" def="GlusterfsVolumeSource"/>
          </field>
          <field type="pointer" name="PersistentVolumeClaimVolumeSource">
            <type type="ident" def="PersistentVolumeClaimVolumeSource"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaimVolumeSource">
          <field type="ident" def="string" name="ClaimName"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="PersistentVolumeSource">
          <field type="pointer" name="GCEPersistentDisk">
            <type type="ident" def="GCEPersistentDiskVolumeSource"/>
          </field>
          <field type="pointer" name="AWSElasticBlockStore">
            <type type="ident" def="AWSElasticBlockStoreVolumeSource"/>
          </field>
          <field type="pointer" name="HostPath">
            <type type="ident" def="HostPathVolumeSource"/>
          </field>
          <field type="pointer" name="Glusterfs">
            <type type="ident" def="GlusterfsVolumeSource"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolume">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PersistentVolumeSpec" name="Spec"/>
          <field type="ident" def="PersistentVolumeStatus" name="Status"/>
        </type>
        <type type="struct" name="PersistentVolumeSpec">
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="ident" def="PersistentVolumeSource" name=""/>
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="pointer" name="ClaimRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeStatus">
          <field type="ident" def="PersistentVolumePhase" name="Phase"/>
        </type>
        <type type="struct" name="PersistentVolumeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PersistentVolume"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaim">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PersistentVolumeClaimSpec" name="Spec"/>
          <field type="ident" def="PersistentVolumeClaimStatus" name="Status"/>
        </type>
        <type type="struct" name="PersistentVolumeClaimList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PersistentVolumeClaim"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaimSpec">
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="ident" def="ResourceRequirements" name="Resources"/>
        </type>
        <type type="struct" name="PersistentVolumeClaimStatus">
          <field type="ident" def="PersistentVolumeClaimPhase" name="Phase"/>
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="pointer" name="VolumeRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type name="AccessModeType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PersistentVolumePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PersistentVolumeClaimPhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="HostPathVolumeSource">
          <field type="ident" def="string" name="Path"/>
        </type>
        <type type="struct" name="EmptyDirVolumeSource">
          <field type="ident" def="StorageType" name="Medium"/>
        </type>
        <type type="struct" name="GlusterfsVolumeSource">
          <field type="ident" def="string" name="EndpointsName"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type name="StorageType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="Protocol" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="GCEPersistentDiskVolumeSource">
          <field type="ident" def="string" name="PDName"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="int" name="Partition"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="AWSElasticBlockStoreVolumeSource">
          <field type="ident" def="string" name="VolumeID"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="int" name="Partition"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="GitRepoVolumeSource">
          <field type="ident" def="string" name="Repository"/>
          <field type="ident" def="string" name="Revision"/>
        </type>
        <type type="struct" name="SecretVolumeSource">
          <field type="ident" def="string" name="SecretName"/>
        </type>
        <type type="struct" name="NFSVolumeSource">
          <field type="ident" def="string" name="Server"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="ISCSIVolumeSource">
          <field type="ident" def="string" name="TargetPortal"/>
          <field type="ident" def="string" name="IQN"/>
          <field type="ident" def="int" name="Lun"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="ContainerPort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="HostPort"/>
          <field type="ident" def="int" name="ContainerPort"/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="ident" def="string" name="HostIP"/>
        </type>
        <type type="struct" name="VolumeMount">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="bool" name="ReadOnly"/>
          <field type="ident" def="string" name="MountPath"/>
        </type>
        <type type="struct" name="EnvVar">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Value"/>
          <field type="pointer" name="ValueFrom">
            <type type="ident" def="EnvVarSource"/>
          </field>
        </type>
        <type type="struct" name="EnvVarSource">
          <field type="pointer" name="FieldRef">
            <type type="ident" def="ObjectFieldSelector"/>
          </field>
        </type>
        <type type="struct" name="ObjectFieldSelector">
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="FieldPath"/>
        </type>
        <type type="struct" name="HTTPGetAction">
          <field type="ident" def="string" name="Path"/>
          <field type="selector" name="Port">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
          <field type="ident" def="string" name="Host"/>
        </type>
        <type type="struct" name="TCPSocketAction">
          <field type="selector" name="Port">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
        </type>
        <type type="struct" name="ExecAction">
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Probe">
          <field type="ident" def="Handler" name=""/>
          <field type="ident" def="int64" name="InitialDelaySeconds"/>
          <field type="ident" def="int64" name="TimeoutSeconds"/>
        </type>
        <type name="PullPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="CapabilityType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Capabilities">
          <field type="slice" name="Add">
            <elmtype type="ident" def="CapabilityType"/>
          </field>
          <field type="slice" name="Drop">
            <elmtype type="ident" def="CapabilityType"/>
          </field>
        </type>
        <type type="struct" name="ResourceRequirements">
          <field type="ident" def="ResourceList" name="Limits"/>
          <field type="ident" def="ResourceList" name="Requests"/>
        </type>
        <type type="struct" name="Container">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Image"/>
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="WorkingDir"/>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="ContainerPort"/>
          </field>
          <field type="slice" name="Env">
            <elmtype type="ident" def="EnvVar"/>
          </field>
          <field type="ident" def="ResourceRequirements" name="Resources"/>
          <field type="slice" name="VolumeMounts">
            <elmtype type="ident" def="VolumeMount"/>
          </field>
          <field type="pointer" name="LivenessProbe">
            <type type="ident" def="Probe"/>
          </field>
          <field type="pointer" name="ReadinessProbe">
            <type type="ident" def="Probe"/>
          </field>
          <field type="pointer" name="Lifecycle">
            <type type="ident" def="Lifecycle"/>
          </field>
          <field type="ident" def="string" name="TerminationMessagePath"/>
          <field type="ident" def="bool" name="Privileged"/>
          <field type="ident" def="PullPolicy" name="ImagePullPolicy"/>
          <field type="ident" def="Capabilities" name="Capabilities"/>
          <field type="pointer" name="SecurityContext">
            <type type="ident" def="SecurityContext"/>
          </field>
        </type>
        <type type="struct" name="Handler">
          <field type="pointer" name="Exec">
            <type type="ident" def="ExecAction"/>
          </field>
          <field type="pointer" name="HTTPGet">
            <type type="ident" def="HTTPGetAction"/>
          </field>
          <field type="pointer" name="TCPSocket">
            <type type="ident" def="TCPSocketAction"/>
          </field>
        </type>
        <type type="struct" name="Lifecycle">
          <field type="pointer" name="PostStart">
            <type type="ident" def="Handler"/>
          </field>
          <field type="pointer" name="PreStop">
            <type type="ident" def="Handler"/>
          </field>
        </type>
        <type name="ConditionStatus" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ContainerStateWaiting">
          <field type="ident" def="string" name="Reason"/>
        </type>
        <type type="struct" name="ContainerStateRunning">
          <field type="selector" name="StartedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="ContainerStateTerminated">
          <field type="ident" def="int" name="ExitCode"/>
          <field type="ident" def="int" name="Signal"/>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
          <field type="selector" name="StartedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="FinishedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="ContainerID"/>
        </type>
        <type type="struct" name="ContainerState">
          <field type="pointer" name="Waiting">
            <type type="ident" def="ContainerStateWaiting"/>
          </field>
          <field type="pointer" name="Running">
            <type type="ident" def="ContainerStateRunning"/>
          </field>
          <field type="pointer" name="Termination">
            <type type="ident" def="ContainerStateTerminated"/>
          </field>
        </type>
        <type type="struct" name="ContainerStatus">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="ContainerState" name="State"/>
          <field type="ident" def="ContainerState" name="LastTerminationState"/>
          <field type="ident" def="bool" name="Ready"/>
          <field type="ident" def="int" name="RestartCount"/>
          <field type="ident" def="string" name="Image"/>
          <field type="ident" def="string" name="ImageID"/>
          <field type="ident" def="string" name="ContainerID"/>
        </type>
        <type name="PodPhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PodConditionType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="PodCondition">
          <field type="ident" def="PodConditionType" name="Type"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
        </type>
        <type name="RestartPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="DNSPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="PodSpec">
          <field type="slice" name="Volumes">
            <elmtype type="ident" def="Volume"/>
          </field>
          <field type="slice" name="Containers">
            <elmtype type="ident" def="Container"/>
          </field>
          <field type="ident" def="RestartPolicy" name="RestartPolicy"/>
          <field type="pointer" name="TerminationGracePeriodSeconds">
            <type type="ident" def="int64"/>
          </field>
          <field type="ident" def="DNSPolicy" name="DNSPolicy"/>
          <field type="map" name="NodeSelector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Host"/>
          <field type="ident" def="bool" name="HostNetwork"/>
        </type>
        <type type="struct" name="PodStatus">
          <field type="ident" def="PodPhase" name="Phase"/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="PodCondition"/>
          </field>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="HostIP"/>
          <field type="ident" def="string" name="PodIP"/>
          <field type="slice" name="ContainerStatuses">
            <elmtype type="ident" def="ContainerStatus"/>
          </field>
        </type>
        <type type="struct" name="PodStatusResult">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PodStatus" name="Status"/>
        </type>
        <type type="struct" name="Pod">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PodSpec" name="Spec"/>
          <field type="ident" def="PodStatus" name="Status"/>
        </type>
        <type type="struct" name="PodList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Pod"/>
          </field>
        </type>
        <type type="struct" name="PodTemplateSpec">
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PodSpec" name="Spec"/>
        </type>
        <type type="struct" name="PodTemplate">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PodTemplateSpec" name="Template"/>
        </type>
        <type type="struct" name="PodTemplateList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PodTemplate"/>
          </field>
        </type>
        <type type="struct" name="ReplicationControllerSpec">
          <field type="ident" def="int" name="Replicas"/>
          <field type="map" name="Selector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="TemplateRef">
            <type type="ident" def="ObjectReference"/>
          </field>
          <field type="pointer" name="Template">
            <type type="ident" def="PodTemplateSpec"/>
          </field>
        </type>
        <type type="struct" name="ReplicationControllerStatus">
          <field type="ident" def="int" name="Replicas"/>
        </type>
        <type type="struct" name="ReplicationController">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ReplicationControllerSpec" name="Spec"/>
          <field type="ident" def="ReplicationControllerStatus" name="Status"/>
        </type>
        <type type="struct" name="ReplicationControllerList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ReplicationController"/>
          </field>
        </type>
        <type name="AffinityType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ServiceStatus"/>
        <type type="struct" name="ServiceSpec">
          <field type="slice" name="Ports">
            <elmtype type="ident" def="ServicePort"/>
          </field>
          <field type="map" name="Selector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="PortalIP"/>
          <field type="ident" def="bool" name="CreateExternalLoadBalancer"/>
          <field type="slice" name="PublicIPs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="AffinityType" name="SessionAffinity"/>
        </type>
        <type type="struct" name="ServicePort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="ident" def="int" name="Port"/>
          <field type="selector" name="TargetPort">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
        </type>
        <type type="struct" name="Service">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ServiceSpec" name="Spec"/>
          <field type="ident" def="ServiceStatus" name="Status"/>
        </type>
        <type type="struct" name="ServiceList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Service"/>
          </field>
        </type>
        <type type="struct" name="Endpoints">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="slice" name="Subsets">
            <elmtype type="ident" def="EndpointSubset"/>
          </field>
        </type>
        <type type="struct" name="EndpointSubset">
          <field type="slice" name="Addresses">
            <elmtype type="ident" def="EndpointAddress"/>
          </field>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="EndpointPort"/>
          </field>
        </type>
        <type type="struct" name="EndpointAddress">
          <field type="ident" def="string" name="IP"/>
          <field type="pointer" name="TargetRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type type="struct" name="EndpointPort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="Protocol" name="Protocol"/>
        </type>
        <type type="struct" name="EndpointsList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Endpoints"/>
          </field>
        </type>
        <type type="struct" name="NodeSpec">
          <field type="ident" def="string" name="PodCIDR"/>
          <field type="ident" def="string" name="ExternalID"/>
          <field type="ident" def="bool" name="Unschedulable"/>
        </type>
        <type type="struct" name="NodeSystemInfo">
          <field type="ident" def="string" name="MachineID"/>
          <field type="ident" def="string" name="SystemUUID"/>
          <field type="ident" def="string" name="BootID"/>
          <field type="ident" def="string" name="KernelVersion"/>
          <field type="ident" def="string" name="OsImage"/>
          <field type="ident" def="string" name="ContainerRuntimeVersion"/>
          <field type="ident" def="string" name="KubeletVersion"/>
          <field type="ident" def="string" name="KubeProxyVersion"/>
        </type>
        <type type="struct" name="NodeStatus">
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="ident" def="NodePhase" name="Phase"/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="NodeCondition"/>
          </field>
          <field type="slice" name="Addresses">
            <elmtype type="ident" def="NodeAddress"/>
          </field>
          <field type="ident" def="NodeSystemInfo" name="NodeInfo"/>
        </type>
        <type name="NodePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="NodeConditionType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NodeCondition">
          <field type="ident" def="NodeConditionType" name="Type"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
          <field type="selector" name="LastHeartbeatTime">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="LastTransitionTime">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
        </type>
        <type name="NodeAddressType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NodeAddress">
          <field type="ident" def="NodeAddressType" name="Type"/>
          <field type="ident" def="string" name="Address"/>
        </type>
        <type name="ResourceName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ResourceList" type="map">
          <keytype type="ident" def="ResourceName"/>
          <valtype type="selector">
            <prefix value="resource"/>
            <item value="Quantity"/>
          </valtype>
        </type>
        <type type="struct" name="Node">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="NodeSpec" name="Spec"/>
          <field type="ident" def="NodeStatus" name="Status"/>
        </type>
        <type type="struct" name="NodeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Node"/>
          </field>
        </type>
        <type name="FinalizerName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NamespaceSpec">
          <field type="slice" name="Finalizers">
            <elmtype type="ident" def="FinalizerName"/>
          </field>
        </type>
        <type type="struct" name="NamespaceStatus">
          <field type="ident" def="NamespacePhase" name="Phase"/>
        </type>
        <type name="NamespacePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Namespace">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="NamespaceSpec" name="Spec"/>
          <field type="ident" def="NamespaceStatus" name="Status"/>
        </type>
        <type type="struct" name="NamespaceList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Namespace"/>
          </field>
        </type>
        <type type="struct" name="Binding">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ObjectReference" name="Target"/>
        </type>
        <type type="struct" name="DeleteOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="pointer" name="GracePeriodSeconds">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="ListOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="LabelSelector"/>
          <field type="ident" def="string" name="FieldSelector"/>
          <field type="ident" def="bool" name="Watch"/>
          <field type="ident" def="string" name="ResourceVersion"/>
        </type>
        <type type="struct" name="PodLogOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Container"/>
          <field type="ident" def="bool" name="Follow"/>
        </type>
        <type type="struct" name="PodExecOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="bool" name="Stdin"/>
          <field type="ident" def="bool" name="Stdout"/>
          <field type="ident" def="bool" name="Stderr"/>
          <field type="ident" def="bool" name="TTY"/>
          <field type="ident" def="string" name="Container"/>
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="PodProxyOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Path"/>
        </type>
        <type type="struct" name="Status">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="StatusReason" name="Reason"/>
          <field type="pointer" name="Details">
            <type type="ident" def="StatusDetails"/>
          </field>
          <field type="ident" def="int" name="Code"/>
        </type>
        <type type="struct" name="StatusDetails">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Kind"/>
          <field type="slice" name="Causes">
            <elmtype type="ident" def="StatusCause"/>
          </field>
          <field type="ident" def="int" name="RetryAfterSeconds"/>
        </type>
        <type name="StatusReason" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="StatusCause">
          <field type="ident" def="CauseType" name="Type"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Field"/>
        </type>
        <type name="CauseType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ObjectReference">
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="UID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="ResourceVersion"/>
          <field type="ident" def="string" name="FieldPath"/>
        </type>
        <type type="struct" name="SerializedReference">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectReference" name="Reference"/>
        </type>
        <type type="struct" name="EventSource">
          <field type="ident" def="string" name="Component"/>
          <field type="ident" def="string" name="Host"/>
        </type>
        <type type="struct" name="Event">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ObjectReference" name="InvolvedObject"/>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="EventSource" name="Source"/>
          <field type="selector" name="FirstTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="LastTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="int" name="Count"/>
        </type>
        <type type="struct" name="EventList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Event"/>
          </field>
        </type>
        <type type="struct" name="List">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="selector">
              <prefix value="runtime"/>
              <item value="RawExtension"/>
            </elmtype>
          </field>
        </type>
        <type name="LimitType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="LimitRangeItem">
          <field type="ident" def="LimitType" name="Type"/>
          <field type="ident" def="ResourceList" name="Max"/>
          <field type="ident" def="ResourceList" name="Min"/>
          <field type="ident" def="ResourceList" name="Default"/>
        </type>
        <type type="struct" name="LimitRangeSpec">
          <field type="slice" name="Limits">
            <elmtype type="ident" def="LimitRangeItem"/>
          </field>
        </type>
        <type type="struct" name="LimitRange">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="LimitRangeSpec" name="Spec"/>
        </type>
        <type type="struct" name="LimitRangeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="LimitRange"/>
          </field>
        </type>
        <type type="struct" name="ResourceQuotaSpec">
          <field type="ident" def="ResourceList" name="Hard"/>
        </type>
        <type type="struct" name="ResourceQuotaStatus">
          <field type="ident" def="ResourceList" name="Hard"/>
          <field type="ident" def="ResourceList" name="Used"/>
        </type>
        <type type="struct" name="ResourceQuota">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ResourceQuotaSpec" name="Spec"/>
          <field type="ident" def="ResourceQuotaStatus" name="Status"/>
        </type>
        <type type="struct" name="ResourceQuotaList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ResourceQuota"/>
          </field>
        </type>
        <type type="struct" name="Secret">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="map" name="Data">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="ident" def="byte"/>
            </valtype>
          </field>
          <field type="ident" def="SecretType" name="Type"/>
        </type>
        <type name="SecretType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="SecretList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Secret"/>
          </field>
        </type>
        <type name="ComponentConditionType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ComponentCondition">
          <field type="ident" def="ComponentConditionType" name="Type"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Error"/>
        </type>
        <type type="struct" name="ComponentStatus">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="ComponentCondition"/>
          </field>
        </type>
        <type type="struct" name="ComponentStatusList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ComponentStatus"/>
          </field>
        </type>
        <type type="struct" name="SecurityContext">
          <field type="pointer" name="Capabilities">
            <type type="ident" def="Capabilities"/>
          </field>
          <field type="pointer" name="Privileged">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="SELinuxOptions">
            <type type="ident" def="SELinuxOptions"/>
          </field>
          <field type="pointer" name="RunAsUser">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="SELinuxOptions">
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="Role"/>
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="Level"/>
        </type>
      </types>
      <functions>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="NamespaceDefault"/>
        <name value="NamespaceAll"/>
        <name value="ReadWriteOnce"/>
        <name value="ReadOnlyMany"/>
        <name value="ReadWriteMany"/>
        <name value="VolumePending"/>
        <name value="VolumeAvailable"/>
        <name value="VolumeBound"/>
        <name value="VolumeReleased"/>
        <name value="ClaimPending"/>
        <name value="ClaimBound"/>
        <name value="StorageTypeDefault"/>
        <name value="StorageTypeMemory"/>
        <name value="ProtocolTCP"/>
        <name value="ProtocolUDP"/>
        <name value="PullAlways"/>
        <name value="PullNever"/>
        <name value="PullIfNotPresent"/>
        <name value="TerminationMessagePathDefault"/>
        <name value="ConditionTrue"/>
        <name value="ConditionFalse"/>
        <name value="ConditionUnknown"/>
        <name value="PodPending"/>
        <name value="PodRunning"/>
        <name value="PodSucceeded"/>
        <name value="PodFailed"/>
        <name value="PodUnknown"/>
        <name value="PodReady"/>
        <name value="RestartPolicyAlways"/>
        <name value="RestartPolicyOnFailure"/>
        <name value="RestartPolicyNever"/>
        <name value="DNSClusterFirst"/>
        <name value="DNSDefault"/>
        <name value="AffinityTypeClientIP"/>
        <name value="AffinityTypeNone"/>
        <name value="PortalIPNone"/>
        <name value="NodePending"/>
        <name value="NodeRunning"/>
        <name value="NodeTerminated"/>
        <name value="NodeReady"/>
        <name value="NodeHostName"/>
        <name value="NodeExternalIP"/>
        <name value="NodeInternalIP"/>
        <name value="ResourceCPU"/>
        <name value="ResourceMemory"/>
        <name value="ResourceStorage"/>
        <name value="FinalizerKubernetes"/>
        <name value="NamespaceActive"/>
        <name value="NamespaceTerminating"/>
        <name value="StatusSuccess"/>
        <name value="StatusFailure"/>
        <name value="StatusReasonUnknown"/>
        <name value="StatusReasonNotFound"/>
        <name value="StatusReasonAlreadyExists"/>
        <name value="StatusReasonConflict"/>
        <name value="StatusReasonInvalid"/>
        <name value="StatusReasonServerTimeout"/>
        <name value="CauseTypeFieldValueNotFound"/>
        <name value="CauseTypeFieldValueRequired"/>
        <name value="CauseTypeFieldValueDuplicate"/>
        <name value="CauseTypeFieldValueInvalid"/>
        <name value="CauseTypeFieldValueNotSupported"/>
        <name value="LimitTypePod"/>
        <name value="LimitTypeContainer"/>
        <name value="ResourcePods"/>
        <name value="ResourceServices"/>
        <name value="ResourceReplicationControllers"/>
        <name value="ResourceQuotas"/>
        <name value="ResourceSecrets"/>
        <name value="ResourcePersistentVolumeClaims"/>
        <name value="MaxSecretSize"/>
        <name value="SecretTypeOpaque"/>
        <name value="ComponentHealthy"/>
        <name value="Codec"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/healthz">
      <types>
        <type name="HealthzChecker" type="interface">
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Check">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="DefaultHealthz">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="HealthzChecker"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Check">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NamedCheck">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="Request"/>
                  </type>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="HealthzChecker"/>
          </resultsList>
        </function>
        <function name="InstallHandler">
          <recvList/>
          <paramsList>
            <type type="ident" def="mux"/>
            <type type="ellipsis">
              <type type="ident" def="HealthzChecker"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="healthzCheck"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Check">
          <recvList>
            <type type="pointer">
              <type type="ident" def="healthzCheck"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="PingHealthz"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/generic/rest">
      <types>
        <type type="struct" name="LocationStreamer">
          <field type="pointer" name="Location">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
          <field type="selector" name="Transport">
            <prefix value="http"/>
            <item value="RoundTripper"/>
          </field>
          <field type="ident" def="string" name="ContentType"/>
          <field type="ident" def="bool" name="Flush"/>
        </type>
        <type type="struct" name="UpgradeAwareProxyHandler">
          <field type="ident" def="bool" name="UpgradeRequired"/>
          <field type="pointer" name="Location">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
          <field type="selector" name="Transport">
            <prefix value="http"/>
            <item value="RoundTripper"/>
          </field>
          <field type="selector" name="FlushInterval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="error" name="err"/>
        </type>
      </types>
      <functions>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="InputStream">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LocationStreamer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewUpgradeAwareProxyHandler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="UpgradeAwareProxyHandler"/>
            </type>
          </resultsList>
        </function>
        <function name="RequestError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UpgradeAwareProxyHandler"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UpgradeAwareProxyHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/namespace/exists">
      <types/>
      <functions>
        <function name="Admit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="exists"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Attributes"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewExists">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/limitrange">
      <types>
        <type type="struct" name="REST">
          <field type="selector" name="registry">
            <prefix value="generic"/>
            <item value="Registry"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Registry"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="NewList">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="NewEtcdRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Registry"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/controller/framework">
      <types>
        <type type="struct" name="FakeControllerSource">
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="items">
            <keytype type="ident" def="nnu"/>
            <valtype type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </valtype>
          </field>
          <field type="slice" name="changes">
            <elmtype type="selector">
              <prefix value="watch"/>
              <item value="Event"/>
            </elmtype>
          </field>
          <field type="pointer" name="broadcaster">
            <type type="selector">
              <prefix value="watch"/>
              <item value="Broadcaster"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Config">
          <field type="selector" name="">
            <prefix value="cache"/>
            <item value="Queue"/>
          </field>
          <field type="selector" name="">
            <prefix value="cache"/>
            <item value="ListerWatcher"/>
          </field>
          <field type="ident" def="ProcessFunc" name="Process"/>
          <field type="selector" name="ObjectType">
            <prefix value="runtime"/>
            <item value="Object"/>
          </field>
          <field type="selector" name="FullResyncPeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="bool" name="RetryOnError"/>
        </type>
        <type name="ProcessFunc" type="func">
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="Controller">
          <field type="ident" def="Config" name="config"/>
        </type>
        <type name="ResourceEventHandler" type="interface">
          <method name="OnAdd">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="OnUpdate">
            <paramsList>
              <type type="interface"/>
              <type type="interface"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="OnDelete">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="ResourceEventHandlerFuncs">
          <field type="func" name="AddFunc">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList/>
          </field>
          <field type="func" name="UpdateFunc">
            <paramsList>
              <type type="interface"/>
              <type type="interface"/>
            </paramsList>
            <resultsList/>
          </field>
          <field type="func" name="DeleteFunc">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewFakeControllerSource">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FakeControllerSource"/>
            </type>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeControllerSource"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Modify">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeControllerSource"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeControllerSource"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddDropWatch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeControllerSource"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ModifyDropWatch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeControllerSource"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DeleteDropWatch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeControllerSource"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Change">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeControllerSource"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Event"/>
            </type>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeControllerSource"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeControllerSource"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Controller"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Controller"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="OnAdd">
          <recvList>
            <type type="ident" def="ResourceEventHandlerFuncs"/>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="OnUpdate">
          <recvList>
            <type type="ident" def="ResourceEventHandlerFuncs"/>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="OnDelete">
          <recvList>
            <type type="ident" def="ResourceEventHandlerFuncs"/>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DeletionHandlingMetaNamespaceKeyFunc">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewInformer">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="cache"/>
              <item value="ListerWatcher"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="ResourceEventHandler"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="cache"/>
              <item value="Store"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Controller"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/password/passwordfile">
      <types>
        <type type="struct" name="PasswordAuthenticator">
          <field type="map" name="users">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="userPasswordInfo"/>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewCSV">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PasswordAuthenticator"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AuthenticatePassword">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PasswordAuthenticator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/aws_ebs">
      <types>
        <type type="struct" name="AWSDiskUtil"/>
      </types>
      <functions>
        <function name="AttachAndMountDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSDiskUtil"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStore"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DetachDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSDiskUtil"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStore"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Mount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="awsSafeFormatAndMount"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ProbeVolumePlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStorePlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeHost"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStorePlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CanSupport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStorePlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetAccessModes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStorePlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="AccessModeType"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStorePlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeOptions"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Builder"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStorePlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Cleaner"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStore"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUpAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStore"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TearDown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStore"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDownAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="awsElasticBlockStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/resource">
      <types>
        <type type="struct" name="Quantity">
          <field type="pointer" name="Amount">
            <type type="selector">
              <prefix value="inf"/>
              <item value="Dec"/>
            </type>
          </field>
          <field type="ident" def="Format" name=""/>
        </type>
        <type name="Format" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="MustParse">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Quantity"/>
          </resultsList>
        </function>
        <function name="ParseQuantity">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Canonicalize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="suffix"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Quantity"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewQuantity">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="Format"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </resultsList>
        </function>
        <function name="NewMilliQuantity">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="Format"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="MilliValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetMilli">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Copy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="ident" def="qFlag"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="qFlag"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="ident" def="qFlag"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="QuantityFlag">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </resultsList>
        </function>
        <function name="NewQuantityFlagValue">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Quantity"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="flag"/>
              <item value="Value"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="DecimalExponent"/>
        <name value="BinarySI"/>
        <name value="DecimalSI"/>
        <name value="ErrFormatWrong"/>
        <name value="ErrNumeric"/>
        <name value="ErrSuffix"/>
        <name value="MaxMilliValue"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/probe">
      <types>
        <type name="Result" type="ident">
          <type type="ident" def="int"/>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="Result"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Success"/>
        <name value="Failure"/>
        <name value="Unknown"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/podtemplate/etcd">
      <types>
        <type type="struct" name="REST">
          <field type="selector" name="">
            <prefix value="etcdgeneric"/>
            <item value="Etcd"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewREST">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/apiserver">
      <types>
        <type type="struct" name="WatchServer">
          <field type="selector" name="watching">
            <prefix value="watch"/>
            <item value="Interface"/>
          </field>
          <field type="selector" name="codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="func" name="fixup">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList/>
          </field>
        </type>
        <type type="struct" name="Server">
          <field type="ident" def="string" name="Addr"/>
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="EnableHTTPS"/>
        </type>
        <type type="struct" name="ServerStatus">
          <field type="ident" def="string" name="Component"/>
          <field type="ident" def="string" name="Health"/>
          <field type="selector" name="HealthCode">
            <prefix value="probe"/>
            <item value="Result"/>
          </field>
          <field type="ident" def="string" name="Msg"/>
          <field type="ident" def="string" name="Err"/>
        </type>
        <type name="ContextFunc" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
          </resultsList>
        </type>
        <type name="ScopeNamer" type="interface">
          <method name="Namespace">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="restful"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Name">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="restful"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ObjectName">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetSelfLink">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GenerateLink">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="restful"/>
                  <item value="Request"/>
                </type>
              </type>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GenerateListLink">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="restful"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="RequestScope">
          <field type="ident" def="ScopeNamer" name="Namer"/>
          <field type="ident" def="ContextFunc" name=""/>
          <field type="selector" name="">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="selector" name="Creater">
            <prefix value="runtime"/>
            <item value="ObjectCreater"/>
          </field>
          <field type="selector" name="Convertor">
            <prefix value="runtime"/>
            <item value="ObjectConvertor"/>
          </field>
          <field type="ident" def="string" name="Resource"/>
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="ServerAPIVersion"/>
        </type>
        <type type="struct" name="RedirectHandler">
          <field type="map" name="storage">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="rest"/>
              <item value="Storage"/>
            </valtype>
          </field>
          <field type="selector" name="codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="selector" name="context">
            <prefix value="api"/>
            <item value="RequestContextMapper"/>
          </field>
          <field type="pointer" name="apiRequestInfoResolver">
            <type type="ident" def="APIRequestInfoResolver"/>
          </field>
        </type>
        <type type="struct" name="ProxyHandler">
          <field type="ident" def="string" name="prefix"/>
          <field type="map" name="storage">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="rest"/>
              <item value="Storage"/>
            </valtype>
          </field>
          <field type="selector" name="codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="selector" name="context">
            <prefix value="api"/>
            <item value="RequestContextMapper"/>
          </field>
          <field type="pointer" name="apiRequestInfoResolver">
            <type type="ident" def="APIRequestInfoResolver"/>
          </field>
        </type>
        <type type="struct" name="MuxHelper">
          <field type="ident" def="Mux" name="Mux"/>
          <field type="slice" name="RegisteredPaths">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type name="RequestAttributeGetter" type="interface">
          <method name="GetAttribs">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="authorizer"/>
                <item value="Attributes"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="APIRequestInfo">
          <field type="ident" def="string" name="Verb"/>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="Resource"/>
          <field type="ident" def="string" name="Subresource"/>
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Parts">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Raw">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="APIRequestInfoResolver">
          <field type="selector" name="APIPrefixes">
            <prefix value="util"/>
            <item value="StringSet"/>
          </field>
          <field type="selector" name="RestMapper">
            <prefix value="meta"/>
            <item value="RESTMapper"/>
          </field>
        </type>
        <type type="struct" name="Attributes"/>
        <type name="Mux" type="interface">
          <method name="Handle">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="http"/>
                <item value="Handler"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="HandleFunc">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="func">
                <paramsList>
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="ResponseWriter"/>
                  </type>
                  <type type="pointer">
                    <type type="selector">
                      <prefix value="http"/>
                      <item value="Request"/>
                    </type>
                  </type>
                </paramsList>
                <resultsList/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="APIGroupVersion">
          <field type="map" name="Storage">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="rest"/>
              <item value="Storage"/>
            </valtype>
          </field>
          <field type="ident" def="string" name="Root"/>
          <field type="ident" def="string" name="Version"/>
          <field type="ident" def="string" name="ServerVersion"/>
          <field type="selector" name="Mapper">
            <prefix value="meta"/>
            <item value="RESTMapper"/>
          </field>
          <field type="selector" name="Codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="selector" name="Typer">
            <prefix value="runtime"/>
            <item value="ObjectTyper"/>
          </field>
          <field type="selector" name="Creater">
            <prefix value="runtime"/>
            <item value="ObjectCreater"/>
          </field>
          <field type="selector" name="Convertor">
            <prefix value="runtime"/>
            <item value="ObjectConvertor"/>
          </field>
          <field type="selector" name="Linker">
            <prefix value="runtime"/>
            <item value="SelfLinker"/>
          </field>
          <field type="selector" name="Admit">
            <prefix value="admission"/>
            <item value="Interface"/>
          </field>
          <field type="selector" name="Context">
            <prefix value="api"/>
            <item value="RequestContextMapper"/>
          </field>
        </type>
        <type type="struct" name="APIInstaller">
          <field type="pointer" name="group">
            <type type="ident" def="APIGroupVersion"/>
          </field>
          <field type="pointer" name="info">
            <type type="ident" def="APIRequestInfoResolver"/>
          </field>
          <field type="ident" def="string" name="prefix"/>
        </type>
      </types>
      <functions>
        <function name="HandleWS">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WatchServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="websocket"/>
                <item value="Conn"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WatchServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DoServerCheck">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="probe"/>
              <item value="Result"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="validator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewValidator">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="map">
                  <keytype type="ident" def="string"/>
                  <valtype type="ident" def="Server"/>
                </type>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetResource">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="Getter"/>
            </type>
            <type type="ident" def="RequestScope"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="restful"/>
              <item value="RouteFunction"/>
            </type>
          </resultsList>
        </function>
        <function name="GetResourceWithOptions">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="GetterWithOptions"/>
            </type>
            <type type="ident" def="RequestScope"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="restful"/>
              <item value="RouteFunction"/>
            </type>
          </resultsList>
        </function>
        <function name="ConnectResource">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="Connecter"/>
            </type>
            <type type="ident" def="RequestScope"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="restful"/>
              <item value="RouteFunction"/>
            </type>
          </resultsList>
        </function>
        <function name="ListResource">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="Lister"/>
            </type>
            <type type="selector">
              <prefix value="rest"/>
              <item value="Watcher"/>
            </type>
            <type type="ident" def="RequestScope"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="restful"/>
              <item value="RouteFunction"/>
            </type>
          </resultsList>
        </function>
        <function name="CreateResource">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="Creater"/>
            </type>
            <type type="ident" def="RequestScope"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="ObjectTyper"/>
            </type>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="restful"/>
              <item value="RouteFunction"/>
            </type>
          </resultsList>
        </function>
        <function name="PatchResource">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="Patcher"/>
            </type>
            <type type="ident" def="RequestScope"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="ObjectTyper"/>
            </type>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Interface"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="ObjectConvertor"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="restful"/>
              <item value="RouteFunction"/>
            </type>
          </resultsList>
        </function>
        <function name="UpdateResource">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="Updater"/>
            </type>
            <type type="ident" def="RequestScope"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="ObjectTyper"/>
            </type>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="restful"/>
              <item value="RouteFunction"/>
            </type>
          </resultsList>
        </function>
        <function name="DeleteResource">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="GracefulDeleter"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="RequestScope"/>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="restful"/>
              <item value="RouteFunction"/>
            </type>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RedirectHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProxyHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Handle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MuxHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HandleFunc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MuxHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="http"/>
                  <item value="ResponseWriter"/>
                </type>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="Request"/>
                  </type>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="IndexHandler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="MuxHelper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="http"/>
                  <item value="ResponseWriter"/>
                </type>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="Request"/>
                  </type>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </resultsList>
        </function>
        <function name="IsReadOnlyReq">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Request"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ReadOnly">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="MaxInFlightLimit">
          <recvList/>
          <paramsList>
            <type type="channel" dir="3">
              <type type="ident" def="bool"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="regexp"/>
                <item value="Regexp"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="RateLimit">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="util"/>
              <item value="RateLimiter"/>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="RecoverPanics">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="CORS">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="regexp"/>
                  <item value="Regexp"/>
                </type>
              </elmtype>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRequestAttributeGetter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="RequestContextMapper"/>
            </type>
            <type type="selector">
              <prefix value="meta"/>
              <item value="RESTMapper"/>
            </type>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="RequestAttributeGetter"/>
          </resultsList>
        </function>
        <function name="GetAttribs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="requestAttributeGetter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="authorizer"/>
              <item value="Attributes"/>
            </type>
          </resultsList>
        </function>
        <function name="WithAuthorizationCheck">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
            <type type="ident" def="RequestAttributeGetter"/>
            <type type="selector">
              <prefix value="authorizer"/>
              <item value="Authorizer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="GetAPIRequestInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="APIRequestInfoResolver"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="APIRequestInfo"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Authorize">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="authorizer"/>
              <item value="Attributes"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAlwaysAllowAuthorizer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="authorizer"/>
              <item value="Authorizer"/>
            </type>
          </resultsList>
        </function>
        <function name="Authorize">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="authorizer"/>
              <item value="Attributes"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAlwaysDenyAuthorizer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="authorizer"/>
              <item value="Authorizer"/>
            </type>
          </resultsList>
        </function>
        <function name="NewAuthorizerFromAuthorizationConfig">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="authorizer"/>
              <item value="Authorizer"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAuthenticator">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="authenticator"/>
              <item value="Request"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InstallREST">
          <recvList>
            <type type="pointer">
              <type type="ident" def="APIGroupVersion"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Container"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InstallValidator">
          <recvList/>
          <paramsList>
            <type type="ident" def="Mux"/>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="map">
                  <keytype type="ident" def="string"/>
                  <valtype type="ident" def="Server"/>
                </type>
              </resultsList>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="InstallSupport">
          <recvList/>
          <paramsList>
            <type type="ident" def="Mux"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="WebService"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="InstallLogsSupport">
          <recvList/>
          <paramsList>
            <type type="ident" def="Mux"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="InstallServiceErrorHandler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="APIRequestInfoResolver"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddApiWebService">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="APIVersionHandler">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="restful"/>
              <item value="RouteFunction"/>
            </type>
          </resultsList>
        </function>
        <function name="Install">
          <recvList>
            <type type="pointer">
              <type type="ident" def="APIInstaller"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="WebService"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="error"/>
            </type>
          </resultsList>
        </function>
        <function name="Namespace">
          <recvList>
            <type type="ident" def="rootScopeNaming"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="ident" def="rootScopeNaming"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GenerateLink">
          <recvList>
            <type type="ident" def="rootScopeNaming"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GenerateListLink">
          <recvList>
            <type type="ident" def="rootScopeNaming"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ObjectName">
          <recvList>
            <type type="ident" def="rootScopeNaming"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Namespace">
          <recvList>
            <type type="ident" def="scopeNaming"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="ident" def="scopeNaming"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GenerateLink">
          <recvList>
            <type type="ident" def="scopeNaming"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GenerateListLink">
          <recvList>
            <type type="ident" def="scopeNaming"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ObjectName">
          <recvList>
            <type type="ident" def="scopeNaming"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Namespace">
          <recvList>
            <type type="ident" def="legacyScopeNaming"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="ident" def="legacyScopeNaming"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GenerateLink">
          <recvList>
            <type type="ident" def="legacyScopeNaming"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GenerateListLink">
          <recvList>
            <type type="ident" def="legacyScopeNaming"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ObjectName">
          <recvList>
            <type type="ident" def="legacyScopeNaming"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ProducesMIMETypes">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="RetryAfter"/>
        <name value="ModeAlwaysAllow"/>
        <name value="ModeAlwaysDeny"/>
        <name value="ModeABAC"/>
        <name value="AuthorizationModeChoices"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/auth/user">
      <types>
        <type name="Info" type="interface">
          <method name="GetName">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GetUID">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GetGroups">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="DefaultInfo">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="UID"/>
          <field type="slice" name="Groups">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetUID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetGroups">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/workqueue">
      <types>
        <type type="struct" name="Type">
          <field type="slice" name="queue">
            <elmtype type="ident" def="t"/>
          </field>
          <field type="ident" def="set" name="dirty"/>
          <field type="ident" def="set" name="processing"/>
          <field type="pointer" name="cond">
            <type type="selector">
              <prefix value="sync"/>
              <item value="Cond"/>
            </type>
          </field>
          <field type="ident" def="bool" name="shuttingDown"/>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Type"/>
            </type>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Type"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Type"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Done">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Type"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ShutDown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Type"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/errors">
      <types>
        <type type="struct" name="StatusError">
          <field type="selector" name="ErrStatus">
            <prefix value="api"/>
            <item value="Status"/>
          </field>
        </type>
        <type type="struct" name="UnexpectedObjectError">
          <field type="selector" name="Object">
            <prefix value="runtime"/>
            <item value="Object"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Status"/>
            </type>
          </resultsList>
        </function>
        <function name="DebugError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UnexpectedObjectError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="FromObject">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewNotFound">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAlreadyExists">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewUnauthorized">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewForbidden">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewConflict">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewInvalid">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewBadRequest">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewMethodNotSupported">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewServerTimeout">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewInternalError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewTimeoutError">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewGenericServerResponse">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsNotFound">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsAlreadyExists">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsConflict">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsInvalid">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsMethodNotSupported">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsBadRequest">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsUnauthorized">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsForbidden">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsServerTimeout">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsUnexpectedServerError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsUnexpectedObjectError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SuggestsClientDelay">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="StatusUnprocessableEntity"/>
        <name value="StatusTooManyRequests"/>
        <name value="StatusServerTimeout"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/pod/etcd">
      <types>
        <type type="struct" name="PodStorage">
          <field type="pointer" name="Pod">
            <type type="ident" def="REST"/>
          </field>
          <field type="pointer" name="Binding">
            <type type="ident" def="BindingREST"/>
          </field>
          <field type="pointer" name="Status">
            <type type="ident" def="StatusREST"/>
          </field>
          <field type="pointer" name="Log">
            <type type="ident" def="LogREST"/>
          </field>
          <field type="pointer" name="Proxy">
            <type type="ident" def="ProxyREST"/>
          </field>
          <field type="pointer" name="Exec">
            <type type="ident" def="ExecREST"/>
          </field>
          <field type="pointer" name="PortForward">
            <type type="ident" def="PortForwardREST"/>
          </field>
        </type>
        <type type="struct" name="REST">
          <field type="selector" name="">
            <prefix value="etcdgeneric"/>
            <item value="Etcd"/>
          </field>
        </type>
        <type type="struct" name="BindingREST">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
        <type type="struct" name="StatusREST">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
        <type type="struct" name="LogREST">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
          <field type="selector" name="kubeletConn">
            <prefix value="client"/>
            <item value="ConnectionInfoGetter"/>
          </field>
        </type>
        <type type="struct" name="ProxyREST">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
        <type type="struct" name="ExecREST">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
          <field type="selector" name="kubeletConn">
            <prefix value="client"/>
            <item value="ConnectionInfoGetter"/>
          </field>
        </type>
        <type type="struct" name="PortForwardREST">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
          <field type="selector" name="kubeletConn">
            <prefix value="client"/>
            <item value="ConnectionInfoGetter"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
            <type type="selector">
              <prefix value="client"/>
              <item value="ConnectionInfoGetter"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="PodStorage"/>
          </resultsList>
        </function>
        <function name="ResourceLocation">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BindingREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BindingREST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AfterUpdate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="podLifecycle"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AfterDelete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="podLifecycle"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogREST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewGetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProxyREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="ConnectMethods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProxyREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="NewConnectOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProxyREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Connect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProxyREST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="ConnectHandler"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExecREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Connect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExecREST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="ConnectHandler"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewConnectOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExecREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ConnectMethods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExecREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PortForwardREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="NewConnectOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PortForwardREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ConnectMethods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PortForwardREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Connect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PortForwardREST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="ConnectHandler"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/admission">
      <types>
        <type name="Factory" type="func">
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="Attributes" type="interface">
          <method name="GetNamespace">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GetResource">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GetOperation">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GetObject">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </resultsList>
          </method>
          <method name="GetKind">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="Interface" type="interface">
          <method name="Admit">
            <paramsList>
              <type type="ident" def="Attributes"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="GetPlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="RegisterPlugin">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Factory"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetPlugin">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InitPlugin">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
          </resultsList>
        </function>
        <function name="NewForbidden">
          <recvList/>
          <paramsList>
            <type type="ident" def="Attributes"/>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFromPlugins">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
          </resultsList>
        </function>
        <function name="Admit">
          <recvList>
            <type type="ident" def="chainAdmissionHandler"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Attributes"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAttributesRecord">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Attributes"/>
          </resultsList>
        </function>
        <function name="GetKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="attributesRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="attributesRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetResource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="attributesRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOperation">
          <recvList>
            <type type="pointer">
              <type type="ident" def="attributesRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetObject">
          <recvList>
            <type type="pointer">
              <type type="ident" def="attributesRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/client/metrics">
      <types/>
      <functions>
        <function name="Register">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="SinceInMicroseconds">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="RequestLatency"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/tools/etcdtest">
      <types/>
      <functions>
        <function name="PathPrefix">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="AddPrefix">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/request/x509">
      <types>
        <type name="UserConversion" type="interface">
          <method name="User">
            <paramsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="x509"/>
                    <item value="Certificate"/>
                  </type>
                </elmtype>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="user"/>
                <item value="Info"/>
              </type>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="UserConversionFunc" type="func">
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="x509"/>
                  <item value="Certificate"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="Authenticator">
          <field type="selector" name="opts">
            <prefix value="x509"/>
            <item value="VerifyOptions"/>
          </field>
          <field type="ident" def="UserConversion" name="user"/>
        </type>
      </types>
      <functions>
        <function name="User">
          <recvList>
            <type type="ident" def="UserConversionFunc"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="x509"/>
                  <item value="Certificate"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="x509"/>
              <item value="VerifyOptions"/>
            </type>
            <type type="ident" def="UserConversion"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Authenticator"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthenticateRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Authenticator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DefaultVerifyOptions">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="x509"/>
              <item value="VerifyOptions"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="CommonNameUserConversion"/>
        <name value="DNSNameUserConversion"/>
        <name value="EmailAddressUserConversion"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/persistentvolume/etcd">
      <types>
        <type type="struct" name="REST">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
        <type type="struct" name="StatusREST">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/cmd/genutils">
      <types/>
      <functions>
        <function name="OutDir">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/namespace/autoprovision">
      <types/>
      <functions>
        <function name="Admit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="provision"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Attributes"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewProvision">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/yaml">
      <types>
        <type type="struct" name="YAMLToJSONDecoder">
          <field type="pointer" name="scanner">
            <type type="selector">
              <prefix value="bufio"/>
              <item value="Scanner"/>
            </type>
          </field>
        </type>
        <type type="struct" name="YAMLOrJSONDecoder">
          <field type="selector" name="r">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="ident" def="int" name="bufferSize"/>
          <field type="ident" def="decoder" name="decoder"/>
        </type>
      </types>
      <functions>
        <function name="ToJSON">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewYAMLToJSONDecoder">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="YAMLToJSONDecoder"/>
            </type>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="YAMLToJSONDecoder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewYAMLOrJSONDecoder">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="YAMLOrJSONDecoder"/>
            </type>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="YAMLOrJSONDecoder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/latest">
      <types/>
      <functions>
        <function name="InterfacesFor">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="VersionInterfaces"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Version"/>
        <name value="OldestVersion"/>
        <name value="Versions"/>
        <name value="Codec"/>
        <name value="SelfLinker"/>
        <name value="RESTMapper"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/auth/authenticator/bearertoken">
      <types>
        <type type="struct" name="Authenticator">
          <field type="selector" name="auth">
            <prefix value="authenticator"/>
            <item value="Token"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="authenticator"/>
              <item value="Token"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Authenticator"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthenticateRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Authenticator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet">
      <types>
        <type name="PodOperation" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="PodUpdate">
          <field type="slice" name="Pods">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </elmtype>
          </field>
          <field type="ident" def="PodOperation" name="Op"/>
          <field type="ident" def="string" name="Source"/>
        </type>
        <type type="struct" name="Server">
          <field type="ident" def="HostInterface" name="host"/>
          <field type="pointer" name="mux">
            <type type="selector">
              <prefix value="http"/>
              <item value="ServeMux"/>
            </type>
          </field>
        </type>
        <type type="struct" name="TLSOptions">
          <field type="pointer" name="Config">
            <type type="selector">
              <prefix value="tls"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="ident" def="string" name="CertFile"/>
          <field type="ident" def="string" name="KeyFile"/>
        </type>
        <type name="HostInterface" type="interface">
          <method name="GetContainerInfo">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </type>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfoRequest"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfo"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetContainerRuntimeVersion">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="Version"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetRawContainerInfo">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfoRequest"/>
                </type>
              </type>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="pointer">
                  <type type="selector">
                    <prefix value="cadvisorApi"/>
                    <item value="ContainerInfo"/>
                  </type>
                </valtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetCachedMachineInfo">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="MachineInfo"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetPods">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="api"/>
                    <item value="Pod"/>
                  </type>
                </elmtype>
              </type>
            </resultsList>
          </method>
          <method name="GetPodByName">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="GetPodStatus">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="PodStatus"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RunInContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </type>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ExecInContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </type>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="Reader"/>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="WriteCloser"/>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="WriteCloser"/>
              </type>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetKubeletContainerLogs">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="selector">
                <prefix value="io"/>
                <item value="Writer"/>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="Writer"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ServeLogs">
            <paramsList>
              <type type="selector">
                <prefix value="http"/>
                <item value="ResponseWriter"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="PortForward">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </type>
              <type type="ident" def="uint16"/>
              <type type="selector">
                <prefix value="io"/>
                <item value="ReadWriteCloser"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="StreamingConnectionIdleTimeout">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </resultsList>
          </method>
          <method name="GetHostname">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="StatsRequest">
          <field type="ident" def="string" name="ContainerName"/>
          <field type="ident" def="int" name="NumStats"/>
          <field type="selector" name="Start">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="End">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="bool" name="Subcontainers"/>
        </type>
        <type type="struct" name="RunPodResult">
          <field type="pointer" name="Pod">
            <type type="selector">
              <prefix value="api"/>
              <item value="Pod"/>
            </type>
          </field>
          <field type="ident" def="error" name="Err"/>
        </type>
        <type name="OOMWatcher" type="interface">
          <method name="RecordSysOOMs">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ObjectReference"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="SyncHandler" type="interface">
          <method name="SyncPods">
            <paramsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="api"/>
                    <item value="Pod"/>
                  </type>
                </elmtype>
              </type>
              <type type="map">
                <keytype type="selector">
                  <prefix value="types"/>
                  <item value="UID"/>
                </keytype>
                <valtype type="selector">
                  <prefix value="metrics"/>
                  <item value="SyncPodType"/>
                </valtype>
              </type>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="pointer">
                  <type type="selector">
                    <prefix value="api"/>
                    <item value="Pod"/>
                  </type>
                </valtype>
              </type>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="SourcesReadyFn" type="func">
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </type>
        <type type="struct" name="Kubelet">
          <field type="ident" def="string" name="hostname"/>
          <field type="selector" name="dockerClient">
            <prefix value="dockertools"/>
            <item value="DockerInterface"/>
          </field>
          <field type="selector" name="runtimeCache">
            <prefix value="kubecontainer"/>
            <item value="RuntimeCache"/>
          </field>
          <field type="selector" name="kubeClient">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
          <field type="ident" def="string" name="rootDirectory"/>
          <field type="pointer" name="podWorkers">
            <type type="ident" def="podWorkers"/>
          </field>
          <field type="selector" name="resyncInterval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="SourcesReadyFn" name="sourcesReady"/>
          <field type="ident" def="podManager" name="podManager"/>
          <field type="pointer" name="containerRefManager">
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="RefManager"/>
            </type>
          </field>
          <field type="selector" name="logServer">
            <prefix value="http"/>
            <item value="Handler"/>
          </field>
          <field type="selector" name="runner">
            <prefix value="prober"/>
            <item value="ContainerCommandRunner"/>
          </field>
          <field type="selector" name="httpClient">
            <prefix value="kubeletTypes"/>
            <item value="HttpGetter"/>
          </field>
          <field type="selector" name="cadvisor">
            <prefix value="cadvisor"/>
            <item value="Interface"/>
          </field>
          <field type="ident" def="string" name="clusterDomain"/>
          <field type="selector" name="clusterDNS">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="string" name="masterServiceNamespace"/>
          <field type="ident" def="serviceLister" name="serviceLister"/>
          <field type="ident" def="nodeLister" name="nodeLister"/>
          <field type="selector" name="volumePluginMgr">
            <prefix value="volume"/>
            <item value="VolumePluginMgr"/>
          </field>
          <field type="selector" name="networkPlugin">
            <prefix value="network"/>
            <item value="NetworkPlugin"/>
          </field>
          <field type="pointer" name="readinessManager">
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="ReadinessManager"/>
            </type>
          </field>
          <field type="selector" name="streamingConnectionIdleTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="recorder">
            <prefix value="record"/>
            <item value="EventRecorder"/>
          </field>
          <field type="ident" def="containerGC" name="containerGC"/>
          <field type="ident" def="imageManager" name="imageManager"/>
          <field type="pointer" name="machineInfo">
            <type type="selector">
              <prefix value="cadvisorApi"/>
              <item value="MachineInfo"/>
            </type>
          </field>
          <field type="pointer" name="statusManager">
            <type type="ident" def="statusManager"/>
          </field>
          <field type="pointer" name="volumeManager">
            <type type="ident" def="volumeManager"/>
          </field>
          <field type="selector" name="cloud">
            <prefix value="cloudprovider"/>
            <item value="Interface"/>
          </field>
          <field type="pointer" name="nodeRef">
            <type type="selector">
              <prefix value="api"/>
              <item value="ObjectReference"/>
            </type>
          </field>
          <field type="selector" name="containerRuntime">
            <prefix value="kubecontainer"/>
            <item value="Runtime"/>
          </field>
          <field type="selector" name="nodeStatusUpdateFrequency">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="resourceContainer"/>
          <field type="selector" name="os">
            <prefix value="kubecontainer"/>
            <item value="OSInterface"/>
          </field>
          <field type="ident" def="OOMWatcher" name="oomWatcher"/>
          <field type="ident" def="string" name="cgroupRoot"/>
          <field type="selector" name="mounter">
            <prefix value="mount"/>
            <item value="Interface"/>
          </field>
        </type>
        <type type="struct" name="ImageGCPolicy">
          <field type="ident" def="int" name="HighThresholdPercent"/>
          <field type="ident" def="int" name="LowThresholdPercent"/>
        </type>
        <type type="struct" name="ContainerGCPolicy">
          <field type="selector" name="MinAge">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="int" name="MaxPerPodContainer"/>
          <field type="ident" def="int" name="MaxContainers"/>
        </type>
      </types>
      <functions>
        <function name="GetPluginDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="volumeHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPodVolumeDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="volumeHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPodPluginDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="volumeHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetKubeClient">
          <recvList>
            <type type="pointer">
              <type type="ident" def="volumeHost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
        <function name="NewWrapperBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="volumeHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeOptions"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Builder"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewWrapperCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="volumeHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Cleaner"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetVolumes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="volumeManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="volumeMap"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetVolumes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="volumeManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="volumeMap"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="DeleteVolumes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="volumeManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CapacityFromMachineInfo">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="MachineInfo"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="ResourceList"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValidatedSources">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="statusManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetPodStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="statusManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodStatus"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetPodStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="statusManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodStatus"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DeletePodStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="statusManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RemoveOrphanedStatuses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="statusManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="bool"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ListenAndServeKubeletServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="HostInterface"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="uint"/>
            <type type="pointer">
              <type type="ident" def="TLSOptions"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ListenAndServeKubeletReadOnlyServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="HostInterface"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="uint"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="HostInterface"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Server"/>
          </resultsList>
        </function>
        <function name="InstallDefaultHandlers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="InstallDebuggingHandlers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ShouldPullImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="kubeletRuntimeHooks"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ReportImagePull">
          <recvList>
            <type type="pointer">
              <type type="ident" def="kubeletRuntimeHooks"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RunOnce">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="2">
              <type type="ident" def="PodUpdate"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="RunPodResult"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdatePod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="podWorkers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ForgetNonExistingPodWorkers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="podWorkers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </keytype>
              <valtype type="ident" def="empty"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="UpdatePods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="basicPodManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="PodUpdate"/>
            <type type="map">
              <keytype type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </keytype>
              <valtype type="selector">
                <prefix value="metrics"/>
                <item value="SyncPodType"/>
              </valtype>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="basicPodManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="basicPodManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetPodsAndMirrorMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="basicPodManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetPodByName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="basicPodManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetPodByFullName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="basicPodManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="TranslatePodUID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="basicPodManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
          </resultsList>
        </function>
        <function name="DeleteOrphanedMirrorPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="basicPodManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsMirrorPodOf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="basicPodManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewOOMWatcher">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="cadvisor"/>
              <item value="Interface"/>
            </type>
            <type type="selector">
              <prefix value="record"/>
              <item value="EventRecorder"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="OOMWatcher"/>
          </resultsList>
        </function>
        <function name="RecordSysOOMs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realOOMWatcher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPodByName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="networkHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetKubeClient">
          <recvList>
            <type type="pointer">
              <type type="ident" def="networkHost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
        <function name="CreateMirrorPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="basicMirrorClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteMirrorPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="basicMirrorClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewMainKubelet">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="dockertools"/>
              <item value="DockerInterface"/>
            </type>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="float32"/>
            <type type="ident" def="int"/>
            <type type="ident" def="ContainerGCPolicy"/>
            <type type="ident" def="SourcesReadyFn"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="network"/>
                <item value="NetworkPlugin"/>
              </elmtype>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="selector">
              <prefix value="record"/>
              <item value="EventRecorder"/>
            </type>
            <type type="selector">
              <prefix value="cadvisor"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="ImageGCPolicy"/>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Interface"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="OSInterface"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StartGarbageCollection">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="2">
              <type type="ident" def="PodUpdate"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateRunContainerOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="RunContainerOptions"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SyncPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="map">
              <keytype type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </keytype>
              <valtype type="selector">
                <prefix value="metrics"/>
                <item value="SyncPodType"/>
              </valtype>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </valtype>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="podsByCreationTime"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="podsByCreationTime"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="podsByCreationTime"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetContainerRuntimeVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Version"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetKubeletContainerLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetHostname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetHostIP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetPodByFullName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetPodByName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetPodStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodStatus"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServeLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RunInContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExecInContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PortForward">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="uint16"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadWriteCloser"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="BirthCry">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="StreamingConnectionIdleTimeout">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="GetContainerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetRawContainerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfo"/>
                </type>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetCachedMachineInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="MachineInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListenAndServe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="uint"/>
            <type type="pointer">
              <type type="ident" def="TLSOptions"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ListenAndServeReadOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Kubelet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="uint"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realImageManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GarbageCollect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realImageManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="byLastUsedAndDetected"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="byLastUsedAndDetected"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="byLastUsedAndDetected"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NumContainers">
          <recvList>
            <type type="ident" def="containersByEvictUnit"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="NumEvictUnits">
          <recvList>
            <type type="ident" def="containersByEvictUnit"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="byCreated"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="byCreated"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="byCreated"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GarbageCollect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realContainerGC"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ConfigSourceAnnotationKey"/>
        <name value="ConfigMirrorAnnotationKey"/>
        <name value="SET"/>
        <name value="ADD"/>
        <name value="REMOVE"/>
        <name value="UPDATE"/>
        <name value="FileSource"/>
        <name value="HTTPSource"/>
        <name value="ApiserverSource"/>
        <name value="AllSource"/>
        <name value="MirrorType"/>
        <name value="NamespaceDefault"/>
        <name value="RunOnceManifestDelay"/>
        <name value="RunOnceMaxRetries"/>
        <name value="RunOnceRetryDelay"/>
        <name value="RunOnceRetryDelayBackoff"/>
        <name value="ErrContainerNotFound"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/test/integration">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/podtemplate">
      <types/>
      <functions>
        <function name="NamespaceScoped">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForCreate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Validate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="AllowCreateOnUpdate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="MatchPodTemplate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Strategy"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/ui">
      <types>
        <type name="MuxInterface" type="interface">
          <method name="Handle">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="http"/>
                <item value="Handler"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
      </types>
      <functions>
        <function name="InstallSupport">
          <recvList/>
          <paramsList>
            <type type="ident" def="MuxInterface"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="ident" def="bindata_file_info"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="ident" def="bindata_file_info"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Mode">
          <recvList>
            <type type="ident" def="bindata_file_info"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileMode"/>
            </type>
          </resultsList>
        </function>
        <function name="ModTime">
          <recvList>
            <type type="ident" def="bindata_file_info"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="IsDir">
          <recvList>
            <type type="ident" def="bindata_file_info"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Sys">
          <recvList>
            <type type="ident" def="bindata_file_info"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="Asset">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MustAsset">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="AssetInfo">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AssetNames">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="AssetDir">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RestoreAsset">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RestoreAssets">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/algorithmprovider/defaults">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/cadvisor">
      <types>
        <type name="Interface" type="interface">
          <method name="DockerContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfoRequest"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfo"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ContainerInfo">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfoRequest"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfo"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SubcontainerInfo">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfoRequest"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="pointer">
                  <type type="selector">
                    <prefix value="cadvisorApi"/>
                    <item value="ContainerInfo"/>
                  </type>
                </valtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="MachineInfo">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="MachineInfo"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="VersionInfo">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="VersionInfo"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DockerImagesFsInfo">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="cadvisorApiV2"/>
                <item value="FsInfo"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WatchEvents">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="events"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="events"/>
                  <item value="EventChannel"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Mock">
          <field type="selector" name="">
            <prefix value="mock"/>
            <item value="Mock"/>
          </field>
        </type>
        <type type="struct" name="Fake"/>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DockerContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorUnsupported"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="cadvisorApi"/>
              <item value="ContainerInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ContainerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorUnsupported"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SubcontainerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorUnsupported"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfo"/>
                </type>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MachineInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorUnsupported"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="MachineInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VersionInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorUnsupported"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="VersionInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DockerImagesFsInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorUnsupported"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cadvisorApiV2"/>
              <item value="FsInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchEvents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorUnsupported"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="events"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="events"/>
                <item value="EventChannel"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ContainerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SubcontainerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfo"/>
                </type>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DockerContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="cadvisorApi"/>
              <item value="ContainerInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MachineInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="MachineInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VersionInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="VersionInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DockerImagesFsInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cadvisorApiV2"/>
              <item value="FsInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchEvents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="events"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="events"/>
                <item value="EventChannel"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ContainerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VersionInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="VersionInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SubcontainerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfo"/>
                </type>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MachineInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="MachineInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DockerImagesFsInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cadvisorApiV2"/>
              <item value="FsInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchEvents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cadvisorClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="events"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="events"/>
                <item value="EventChannel"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ContainerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SubcontainerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfo"/>
                </type>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DockerContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="cadvisorApi"/>
              <item value="ContainerInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MachineInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="MachineInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VersionInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="VersionInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DockerImagesFsInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cadvisorApiV2"/>
              <item value="FsInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchEvents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="events"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="events"/>
                <item value="EventChannel"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/version">
      <types>
        <type type="struct" name="Info">
          <field type="ident" def="string" name="Major"/>
          <field type="ident" def="string" name="Minor"/>
          <field type="ident" def="string" name="GitVersion"/>
          <field type="ident" def="string" name="GitCommit"/>
          <field type="ident" def="string" name="GitTreeState"/>
        </type>
      </types>
      <functions>
        <function name="Get">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Info"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Info"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/registrytest">
      <types>
        <type type="struct" name="ServiceRegistry">
          <field type="selector" name="mu">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="selector" name="List">
            <prefix value="api"/>
            <item value="ServiceList"/>
          </field>
          <field type="pointer" name="Service">
            <type type="selector">
              <prefix value="api"/>
              <item value="Service"/>
            </type>
          </field>
          <field type="ident" def="error" name="Err"/>
          <field type="ident" def="string" name="DeletedID"/>
          <field type="ident" def="string" name="GottenID"/>
          <field type="ident" def="string" name="UpdatedID"/>
        </type>
        <type type="struct" name="Scheduler">
          <field type="ident" def="error" name="Err"/>
          <field type="pointer" name="Pod">
            <type type="selector">
              <prefix value="api"/>
              <item value="Pod"/>
            </type>
          </field>
          <field type="ident" def="string" name="Machine"/>
        </type>
        <type type="struct" name="PodRegistry">
          <field type="ident" def="error" name="Err"/>
          <field type="pointer" name="Pod">
            <type type="selector">
              <prefix value="api"/>
              <item value="Pod"/>
            </type>
          </field>
          <field type="pointer" name="Pods">
            <type type="selector">
              <prefix value="api"/>
              <item value="PodList"/>
            </type>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="pointer" name="broadcaster">
            <type type="selector">
              <prefix value="watch"/>
              <item value="Broadcaster"/>
            </type>
          </field>
        </type>
        <type type="struct" name="MinionRegistry">
          <field type="ident" def="error" name="Err"/>
          <field type="ident" def="string" name="Minion"/>
          <field type="selector" name="Minions">
            <prefix value="api"/>
            <item value="NodeList"/>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="GenericRegistry">
          <field type="ident" def="error" name="Err"/>
          <field type="selector" name="Object">
            <prefix value="runtime"/>
            <item value="Object"/>
          </field>
          <field type="selector" name="ObjectList">
            <prefix value="runtime"/>
            <item value="Object"/>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="pointer" name="Broadcaster">
            <type type="selector">
              <prefix value="watch"/>
              <item value="Broadcaster"/>
            </type>
          </field>
        </type>
        <type type="struct" name="EndpointRegistry">
          <field type="pointer" name="Endpoints">
            <type type="selector">
              <prefix value="api"/>
              <item value="EndpointsList"/>
            </type>
          </field>
          <field type="slice" name="Updates">
            <elmtype type="selector">
              <prefix value="api"/>
              <item value="Endpoints"/>
            </elmtype>
          </field>
          <field type="ident" def="error" name="Err"/>
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="ControllerRegistry">
          <field type="ident" def="error" name="Err"/>
          <field type="pointer" name="Controllers">
            <type type="selector">
              <prefix value="api"/>
              <item value="ReplicationControllerList"/>
            </type>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewServiceRegistry">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ServiceRegistry"/>
            </type>
          </resultsList>
        </function>
        <function name="SetError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ListServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ServiceList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateService">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetService">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteService">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateService">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Schedule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheduler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="scheduler"/>
              <item value="MinionLister"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPodRegistry">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodList"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PodRegistry"/>
            </type>
          </resultsList>
        </function>
        <function name="SetError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ListPodsPredicate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="api"/>
                    <item value="Pod"/>
                  </type>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreatePod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdatePod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeletePod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MakeMinionList">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="NodeResources"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeList"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewMinionRegistry">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="NodeResources"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MinionRegistry"/>
            </type>
          </resultsList>
        </function>
        <function name="SetError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinionRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ListMinions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinionRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateMinion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinionRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateMinion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinionRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMinion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinionRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteMinion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinionRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchMinions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinionRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewGeneric">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GenericRegistry"/>
            </type>
          </resultsList>
        </function>
        <function name="ListPredicate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GenericRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchPredicate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GenericRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GenericRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateWithName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GenericRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateWithName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GenericRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GenericRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="DeleteOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListEndpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EndpointRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="EndpointsList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetEndpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EndpointRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchEndpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EndpointRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateEndpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EndpointRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteEndpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EndpointRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ControllerRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ListControllers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ControllerRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationControllerList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ControllerRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ControllerRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ControllerRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ControllerRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchControllers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ControllerRegistry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/config">
      <types>
        <type name="Merger" type="interface">
          <method name="Merge">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="MergeFunc" type="func">
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="Mux">
          <field type="ident" def="Merger" name="merger"/>
          <field type="selector" name="sourceLock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="sources">
            <keytype type="ident" def="string"/>
            <valtype type="channel" dir="3">
              <type type="interface"/>
            </valtype>
          </field>
        </type>
        <type name="Accessor" type="interface">
          <method name="MergedState">
            <paramsList/>
            <resultsList>
              <type type="interface"/>
            </resultsList>
          </method>
        </type>
        <type name="AccessorFunc" type="func">
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </type>
        <type name="Listener" type="interface">
          <method name="OnUpdate">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="ListenerFunc" type="func">
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </type>
        <type type="struct" name="Broadcaster">
          <field type="selector" name="listenerLock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="slice" name="listeners">
            <elmtype type="ident" def="Listener"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Merge">
          <recvList>
            <type type="ident" def="MergeFunc"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewMux">
          <recvList/>
          <paramsList>
            <type type="ident" def="Merger"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Mux"/>
            </type>
          </resultsList>
        </function>
        <function name="Channel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mux"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="channel" dir="3">
              <type type="interface"/>
            </type>
          </resultsList>
        </function>
        <function name="MergedState">
          <recvList>
            <type type="ident" def="AccessorFunc"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="OnUpdate">
          <recvList>
            <type type="ident" def="ListenerFunc"/>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewBroadcaster">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Broadcaster"/>
            </type>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Broadcaster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Listener"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Notify">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Broadcaster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/rest">
      <types>
        <type name="RESTUpdateStrategy" type="interface">
          <method name="NamespaceScoped">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="AllowCreateOnUpdate">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="PrepareForUpdate">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ValidateUpdate">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="fielderrors"/>
                <item value="ValidationErrorList"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="ObjectFunc" type="func">
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="Storage" type="interface">
          <method name="New">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="Lister" type="interface">
          <method name="NewList">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </resultsList>
          </method>
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Getter" type="interface">
          <method name="Get">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="GetterWithOptions" type="interface">
          <method name="Get">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="NewGetOptions">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="bool"/>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="Deleter" type="interface">
          <method name="Delete">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="GracefulDeleter" type="interface">
          <method name="Delete">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="DeleteOptions"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="GracefulDeleteAdapter">
          <field type="ident" def="Deleter" name=""/>
        </type>
        <type name="Creater" type="interface">
          <method name="New">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Updater" type="interface">
          <method name="New">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="CreaterUpdater" type="interface">
          <method name="Update">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Patcher" type="interface"/>
        <type name="Watcher" type="interface">
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="StandardStorage" type="interface"/>
        <type name="Redirector" type="interface">
          <method name="ResourceLocation">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="url"/>
                  <item value="URL"/>
                </type>
              </type>
              <type type="selector">
                <prefix value="http"/>
                <item value="RoundTripper"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ConnectHandler" type="interface">
          <method name="RequestError">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Connecter" type="interface">
          <method name="Connect">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="ConnectHandler"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="NewConnectOptions">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="bool"/>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="ConnectMethods">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="ResourceStreamer" type="interface">
          <method name="InputStream">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="io"/>
                <item value="ReadCloser"/>
              </type>
              <type type="ident" def="bool"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="StorageMetadata" type="interface">
          <method name="ProducesMIMETypes">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="RESTDeleteStrategy" type="interface">
          <method name="CheckGracefulDelete">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="DeleteOptions"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type name="RESTCreateStrategy" type="interface">
          <method name="NamespaceScoped">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="PrepareForCreate">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Validate">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="fielderrors"/>
                <item value="ValidationErrorList"/>
              </type>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="BeforeUpdate">
          <recvList/>
          <paramsList>
            <type type="ident" def="RESTUpdateStrategy"/>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AllFuncs">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="ObjectFunc"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ObjectFunc"/>
          </resultsList>
        </function>
        <function name="NamespaceScoped">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForCreate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Validate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="AllowCreateOnUpdate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="ident" def="GracefulDeleteAdapter"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="DeleteOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="BeforeDelete">
          <recvList/>
          <paramsList>
            <type type="ident" def="RESTDeleteStrategy"/>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="DeleteOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="BeforeCreate">
          <recvList/>
          <paramsList>
            <type type="ident" def="RESTCreateStrategy"/>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckGeneratedNameError">
          <recvList/>
          <paramsList>
            <type type="ident" def="RESTCreateStrategy"/>
            <type type="ident" def="error"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Services"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/proxy/config">
      <types>
        <type name="Operation" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="ServiceUpdate">
          <field type="slice" name="Services">
            <elmtype type="selector">
              <prefix value="api"/>
              <item value="Service"/>
            </elmtype>
          </field>
          <field type="ident" def="Operation" name="Op"/>
        </type>
        <type type="struct" name="EndpointsUpdate">
          <field type="slice" name="Endpoints">
            <elmtype type="selector">
              <prefix value="api"/>
              <item value="Endpoints"/>
            </elmtype>
          </field>
          <field type="ident" def="Operation" name="Op"/>
        </type>
        <type name="ServiceConfigHandler" type="interface">
          <method name="OnUpdate">
            <paramsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="api"/>
                  <item value="Service"/>
                </elmtype>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="EndpointsConfigHandler" type="interface">
          <method name="OnUpdate">
            <paramsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="api"/>
                  <item value="Endpoints"/>
                </elmtype>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="EndpointsConfig">
          <field type="pointer" name="mux">
            <type type="selector">
              <prefix value="config"/>
              <item value="Mux"/>
            </type>
          </field>
          <field type="pointer" name="bcaster">
            <type type="selector">
              <prefix value="config"/>
              <item value="Broadcaster"/>
            </type>
          </field>
          <field type="pointer" name="store">
            <type type="ident" def="endpointsStore"/>
          </field>
        </type>
        <type type="struct" name="ServiceConfig">
          <field type="pointer" name="mux">
            <type type="selector">
              <prefix value="config"/>
              <item value="Mux"/>
            </type>
          </field>
          <field type="pointer" name="bcaster">
            <type type="selector">
              <prefix value="config"/>
              <item value="Broadcaster"/>
            </type>
          </field>
          <field type="pointer" name="store">
            <type type="ident" def="serviceStore"/>
          </field>
        </type>
        <type name="ServicesWatcher" type="interface">
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ServiceList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="EndpointsWatcher" type="interface">
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="EndpointsList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="SourceAPI">
          <field type="ident" def="servicesReflector" name="s"/>
          <field type="ident" def="endpointsReflector" name="e"/>
        </type>
      </types>
      <functions>
        <function name="NewEndpointsConfig">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EndpointsConfig"/>
            </type>
          </resultsList>
        </function>
        <function name="RegisterHandler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EndpointsConfig"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="EndpointsConfigHandler"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Channel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EndpointsConfig"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="channel" dir="3">
              <type type="ident" def="EndpointsUpdate"/>
            </type>
          </resultsList>
        </function>
        <function name="Config">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EndpointsConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Merge">
          <recvList>
            <type type="pointer">
              <type type="ident" def="endpointsStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MergedState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="endpointsStore"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="NewServiceConfig">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ServiceConfig"/>
            </type>
          </resultsList>
        </function>
        <function name="RegisterHandler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceConfig"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ServiceConfigHandler"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Channel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceConfig"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="channel" dir="3">
              <type type="ident" def="ServiceUpdate"/>
            </type>
          </resultsList>
        </function>
        <function name="Config">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Merge">
          <recvList>
            <type type="pointer">
              <type type="ident" def="serviceStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MergedState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="serviceStore"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="NewSourceAPI">
          <recvList/>
          <paramsList>
            <type type="ident" def="ServicesWatcher"/>
            <type type="ident" def="EndpointsWatcher"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="channel" dir="1">
              <type type="ident" def="ServiceUpdate"/>
            </type>
            <type type="channel" dir="1">
              <type type="ident" def="EndpointsUpdate"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SourceAPI"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="SET"/>
        <name value="ADD"/>
        <name value="REMOVE"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/persistentvolumeclaim">
      <types>
        <type name="Registry" type="interface">
          <method name="ListPersistentVolumeClaims">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeClaimList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WatchPersistentVolumeClaims">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetPersistentVolumeClaim">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeClaim"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreatePersistentVolumeClaim">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeClaim"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdatePersistentVolumeClaim">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeClaim"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeletePersistentVolumeClaim">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NamespaceScoped">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForCreate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Validate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="AllowCreateOnUpdate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="MatchPersistentVolumeClaim">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
          </resultsList>
        </function>
        <function name="PersistentVolumeClaimToSelectableFields">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Set"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="StandardStorage"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Registry"/>
          </resultsList>
        </function>
        <function name="ListPersistentVolumeClaims">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaimList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchPersistentVolumeClaims">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPersistentVolumeClaim">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreatePersistentVolumeClaim">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdatePersistentVolumeClaim">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeletePersistentVolumeClaim">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Strategy"/>
        <name value="StatusStrategy"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/client/testclient">
      <types>
        <type type="struct" name="FakeAction">
          <field type="ident" def="string" name="Action"/>
          <field type="interface" name="Value"/>
        </type>
        <type name="ReactionFunc" type="func">
          <paramsList>
            <type type="ident" def="FakeAction"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="Fake">
          <field type="slice" name="Actions">
            <elmtype type="ident" def="FakeAction"/>
          </field>
          <field type="selector" name="Watch">
            <prefix value="watch"/>
            <item value="Interface"/>
          </field>
          <field type="ident" def="error" name="Err"/>
          <field type="ident" def="ReactionFunc" name="ReactFn"/>
        </type>
        <type name="ObjectRetriever" type="interface">
          <method name="Kind">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Add">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="FakeServices">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
          <field type="ident" def="string" name="Namespace"/>
        </type>
        <type type="struct" name="FakeSecrets">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
          <field type="ident" def="string" name="Namespace"/>
        </type>
        <type type="struct" name="FakeResourceQuotas">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
          <field type="ident" def="string" name="Namespace"/>
        </type>
        <type type="struct" name="FakeReplicationControllers">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
          <field type="ident" def="string" name="Namespace"/>
        </type>
        <type type="struct" name="FakePods">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
          <field type="ident" def="string" name="Namespace"/>
        </type>
        <type type="struct" name="FakePersistentVolumes">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
          <field type="ident" def="string" name="Namespace"/>
        </type>
        <type type="struct" name="FakePersistentVolumeClaims">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
          <field type="ident" def="string" name="Namespace"/>
        </type>
        <type type="struct" name="FakeNodes">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
        </type>
        <type type="struct" name="FakeNamespaces">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
        </type>
        <type type="struct" name="FakeLimitRanges">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
          <field type="ident" def="string" name="Namespace"/>
        </type>
        <type type="struct" name="FakeEvents">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
        </type>
        <type type="struct" name="FakeEndpoints">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
          <field type="ident" def="string" name="Namespace"/>
        </type>
        <type type="struct" name="FakeComponentStatuses">
          <field type="pointer" name="Fake">
            <type type="ident" def="Fake"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewSimpleFake">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </resultsList>
        </function>
        <function name="Invokes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="FakeAction"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LimitRanges">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="LimitRangeInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="ResourceQuotas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="ResourceQuotaInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="ReplicationControllers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="ReplicationControllerInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="Nodes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="NodeInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="Events">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="EventInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="Endpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="EndpointsInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="PersistentVolumes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="PersistentVolumeInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="PersistentVolumeClaims">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="PersistentVolumeClaimInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="Pods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="PodInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="Services">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="ServiceInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="Secrets">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="SecretsInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="Namespaces">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="NamespaceInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="ServerVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="version"/>
                <item value="Info"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServerAPIVersions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="APIVersions"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ComponentStatuses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fake"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="ComponentStatusInterface"/>
            </type>
          </resultsList>
        </function>
        <function name="ObjectReaction">
          <recvList/>
          <paramsList>
            <type type="ident" def="ObjectRetriever"/>
            <type type="selector">
              <prefix value="meta"/>
              <item value="RESTMapper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ReactionFunc"/>
          </resultsList>
        </function>
        <function name="AddObjectsFromPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="ObjectRetriever"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Decoder"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewObjects">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="ObjectScheme"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="ObjectDecoder"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ObjectRetriever"/>
          </resultsList>
        </function>
        <function name="Kind">
          <recvList>
            <type type="ident" def="objects"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="ident" def="objects"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeServices"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ServiceList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeServices"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeServices"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeServices"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeServices"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeServices"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeSecrets"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="SecretList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeSecrets"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeSecrets"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeSecrets"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeSecrets"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeSecrets"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeResourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuotaList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeResourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeResourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeResourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeResourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeResourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeResourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeReplicationControllers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationControllerList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeReplicationControllers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeReplicationControllers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeReplicationControllers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeReplicationControllers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeReplicationControllers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="DeleteOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Bind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Binding"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaimList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakePersistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNamespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NamespaceList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNamespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNamespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNamespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNamespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNamespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Finalize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNamespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeNamespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeLimitRanges"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRangeList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeLimitRanges"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeLimitRanges"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeLimitRanges"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeLimitRanges"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeLimitRanges"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEvents"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Event"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Event"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEvents"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Event"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Event"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEvents"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="EventList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEvents"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Event"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEvents"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Search">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEvents"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="EventList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEvents"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetFieldSelector">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEvents"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEndpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEndpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="EndpointsList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEndpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEndpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEndpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEndpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeComponentStatuses"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ComponentStatusList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeComponentStatuses"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ComponentStatus"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="GetControllerAction"/>
        <name value="UpdateControllerAction"/>
        <name value="WatchControllerAction"/>
        <name value="DeleteControllerAction"/>
        <name value="ListControllerAction"/>
        <name value="CreateControllerAction"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/controller">
      <types>
        <type name="Registry" type="interface">
          <method name="ListControllers">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationControllerList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WatchControllers">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetController">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateController">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateController">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteController">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NamespaceScoped">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForCreate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Validate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="AllowCreateOnUpdate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ControllerToSelectableFields">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Set"/>
            </type>
          </resultsList>
        </function>
        <function name="MatchController">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="StandardStorage"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Registry"/>
          </resultsList>
        </function>
        <function name="ListControllers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationControllerList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchControllers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Strategy"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/resourcequota">
      <types>
        <type type="struct" name="ResourceQuotaManager">
          <field type="selector" name="kubeClient">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
          <field type="channel" dir="2" name="syncTime">
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </field>
          <field type="func" name="syncHandler">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewResourceQuotaManager">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ResourceQuotaManager"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResourceQuotaManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="FilterQuotaPods">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="PodCPU">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="resource"/>
                <item value="Quantity"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="IsPodCPUUnbounded">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsPodMemoryUnbounded">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PodMemory">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="resource"/>
                <item value="Quantity"/>
              </type>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/generic">
      <types>
        <type name="AttrFunc" type="func">
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Set"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Set"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="SelectionPredicate">
          <field type="selector" name="Label">
            <prefix value="labels"/>
            <item value="Selector"/>
          </field>
          <field type="selector" name="Field">
            <prefix value="fields"/>
            <item value="Selector"/>
          </field>
          <field type="ident" def="AttrFunc" name="GetAttrs"/>
        </type>
        <type name="Matcher" type="interface">
          <method name="Matches">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="MatchesSingle">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type name="DecoratorFunc" type="func">
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="Registry" type="interface">
          <method name="ListPredicate">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="Matcher"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateWithName">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateWithName">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="DeleteOptions"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WatchPredicate">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="Matcher"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Matches">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectionPredicate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MatchesSingle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectionPredicate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="MatcherFunc">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="runtime"/>
                  <item value="Object"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="bool"/>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Matcher"/>
          </resultsList>
        </function>
        <function name="Matches">
          <recvList>
            <type type="ident" def="matcherFunc"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MatchesSingle">
          <recvList>
            <type type="ident" def="matcherFunc"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="MatchOnKey">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="runtime"/>
                  <item value="Object"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="bool"/>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Matcher"/>
          </resultsList>
        </function>
        <function name="MatchesSingle">
          <recvList>
            <type type="ident" def="matchKey"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="FilterList">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="Matcher"/>
            <type type="ident" def="DecoratorFunc"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/dockertools">
      <types>
        <type type="struct" name="DockerManager">
          <field type="ident" def="DockerInterface" name="client"/>
          <field type="selector" name="recorder">
            <prefix value="record"/>
            <item value="EventRecorder"/>
          </field>
          <field type="pointer" name="readinessManager">
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="ReadinessManager"/>
            </type>
          </field>
          <field type="pointer" name="containerRefManager">
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="RefManager"/>
            </type>
          </field>
          <field type="selector" name="os">
            <prefix value="kubecontainer"/>
            <item value="OSInterface"/>
          </field>
          <field type="ident" def="string" name="PodInfraContainerImage"/>
          <field type="ident" def="stringCache" name="reasonCache"/>
          <field type="ident" def="DockerPuller" name="Puller"/>
          <field type="ident" def="string" name="dockerRoot"/>
          <field type="ident" def="string" name="containerLogsDir"/>
          <field type="selector" name="networkPlugin">
            <prefix value="network"/>
            <item value="NetworkPlugin"/>
          </field>
          <field type="selector" name="prober">
            <prefix value="prober"/>
            <item value="Prober"/>
          </field>
          <field type="selector" name="generator">
            <prefix value="kubecontainer"/>
            <item value="RunContainerOptionsGenerator"/>
          </field>
          <field type="selector" name="runner">
            <prefix value="kubecontainer"/>
            <item value="HandlerRunner"/>
          </field>
          <field type="selector" name="runtimeHooks">
            <prefix value="kubecontainer"/>
            <item value="RuntimeHooks"/>
          </field>
        </type>
        <type type="struct" name="PodContainerChangesSpec">
          <field type="ident" def="bool" name="StartInfraContainer"/>
          <field type="selector" name="InfraContainerId">
            <prefix value="kubeletTypes"/>
            <item value="DockerID"/>
          </field>
          <field type="map" name="ContainersToStart">
            <keytype type="ident" def="int"/>
            <valtype type="ident" def="empty"/>
          </field>
          <field type="map" name="ContainersToKeep">
            <keytype type="selector">
              <prefix value="kubeletTypes"/>
              <item value="DockerID"/>
            </keytype>
            <valtype type="ident" def="int"/>
          </field>
        </type>
        <type type="struct" name="FakeDockerClient">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="slice" name="ContainerList">
            <elmtype type="selector">
              <prefix value="docker"/>
              <item value="APIContainers"/>
            </elmtype>
          </field>
          <field type="slice" name="ExitedContainerList">
            <elmtype type="selector">
              <prefix value="docker"/>
              <item value="APIContainers"/>
            </elmtype>
          </field>
          <field type="pointer" name="Container">
            <type type="selector">
              <prefix value="docker"/>
              <item value="Container"/>
            </type>
          </field>
          <field type="map" name="ContainerMap">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Container"/>
              </type>
            </valtype>
          </field>
          <field type="pointer" name="Image">
            <type type="selector">
              <prefix value="docker"/>
              <item value="Image"/>
            </type>
          </field>
          <field type="slice" name="Images">
            <elmtype type="selector">
              <prefix value="docker"/>
              <item value="APIImages"/>
            </elmtype>
          </field>
          <field type="map" name="Errors">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="error"/>
          </field>
          <field type="slice" name="called">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Stopped">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="pulled">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Created">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Removed">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="selector" name="RemovedImages">
            <prefix value="util"/>
            <item value="StringSet"/>
          </field>
          <field type="selector" name="VersionInfo">
            <prefix value="docker"/>
            <item value="Env"/>
          </field>
          <field type="selector" name="Information">
            <prefix value="docker"/>
            <item value="Env"/>
          </field>
        </type>
        <type type="struct" name="FakeDockerPuller">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="slice" name="HasImages">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="ImagesPulled">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="ErrorsToInject">
            <elmtype type="ident" def="error"/>
          </field>
        </type>
        <type name="DockerInterface" type="interface">
          <method name="ListContainers">
            <paramsList>
              <type type="selector">
                <prefix value="docker"/>
                <item value="ListContainersOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="docker"/>
                  <item value="APIContainers"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="InspectContainer">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="docker"/>
                  <item value="Container"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateContainer">
            <paramsList>
              <type type="selector">
                <prefix value="docker"/>
                <item value="CreateContainerOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="docker"/>
                  <item value="Container"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="StartContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="docker"/>
                  <item value="HostConfig"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="StopContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="uint"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RemoveContainer">
            <paramsList>
              <type type="selector">
                <prefix value="docker"/>
                <item value="RemoveContainerOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="InspectImage">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="docker"/>
                  <item value="Image"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ListImages">
            <paramsList>
              <type type="selector">
                <prefix value="docker"/>
                <item value="ListImagesOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="docker"/>
                  <item value="APIImages"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="PullImage">
            <paramsList>
              <type type="selector">
                <prefix value="docker"/>
                <item value="PullImageOptions"/>
              </type>
              <type type="selector">
                <prefix value="docker"/>
                <item value="AuthConfiguration"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RemoveImage">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Logs">
            <paramsList>
              <type type="selector">
                <prefix value="docker"/>
                <item value="LogsOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Version">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="docker"/>
                  <item value="Env"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Info">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="docker"/>
                  <item value="Env"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateExec">
            <paramsList>
              <type type="selector">
                <prefix value="docker"/>
                <item value="CreateExecOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="docker"/>
                  <item value="Exec"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="StartExec">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="docker"/>
                <item value="StartExecOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="KubeletContainerName">
          <field type="ident" def="string" name="PodFullName"/>
          <field type="selector" name="PodUID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="ident" def="string" name="ContainerName"/>
        </type>
        <type name="DockerPuller" type="interface">
          <method name="Pull">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="IsImagePresent">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="DockerContainers" type="map">
          <keytype type="selector">
            <prefix value="kubeletTypes"/>
            <item value="DockerID"/>
          </keytype>
          <valtype type="pointer">
            <type type="selector">
              <prefix value="docker"/>
              <item value="APIContainers"/>
            </type>
          </valtype>
        </type>
      </types>
      <functions>
        <function name="StartPty">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="exec"/>
                <item value="Cmd"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StartPty">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="exec"/>
                <item value="Cmd"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewDockerManager">
          <recvList/>
          <paramsList>
            <type type="ident" def="DockerInterface"/>
            <type type="selector">
              <prefix value="record"/>
              <item value="EventRecorder"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="ReadinessManager"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="RefManager"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="float32"/>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="OSInterface"/>
            </type>
            <type type="selector">
              <prefix value="network"/>
              <item value="NetworkPlugin"/>
            </type>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="RunContainerOptionsGenerator"/>
            </type>
            <type type="selector">
              <prefix value="kubeletTypes"/>
              <item value="HttpGetter"/>
            </type>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="RuntimeHooks"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="stringCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetContainerLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPodStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodStatus"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPodInfraContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Pod"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Container"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetContainers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="kubecontainer"/>
                  <item value="Container"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="kubecontainer"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListImages">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="kubecontainer"/>
                <item value="Image"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PullImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsImagePresent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewVersion">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="dockerVersion"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="dockerVersion"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Compare">
          <recvList>
            <type type="ident" def="dockerVersion"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Version"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RunInContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExecInContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PortForward">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="uint16"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadWriteCloser"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="KillPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Pod"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="KillContainerInPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Container"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="KillContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RunContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="kubeletTypes"/>
              <item value="DockerID"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SyncPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Pod"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodStatus"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewInstrumentedDockerInterface">
          <recvList/>
          <paramsList>
            <type type="ident" def="DockerInterface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="DockerInterface"/>
          </resultsList>
        </function>
        <function name="ListContainers">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="ListContainersOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="docker"/>
                <item value="APIContainers"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InspectContainer">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateContainer">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="CreateContainerOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StartContainer">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="HostConfig"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StopContainer">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveContainer">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="RemoveContainerOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InspectImage">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Image"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListImages">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="ListImagesOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="docker"/>
                <item value="APIImages"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PullImage">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="PullImageOptions"/>
            </type>
            <type type="selector">
              <prefix value="docker"/>
              <item value="AuthConfiguration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveImage">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Logs">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="LogsOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Version">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Env"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Info">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Env"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateExec">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="CreateExecOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Exec"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StartExec">
          <recvList>
            <type type="ident" def="instrumentedDockerInterface"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="docker"/>
              <item value="StartExecOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFakeDockerManager">
          <recvList/>
          <paramsList>
            <type type="ident" def="DockerInterface"/>
            <type type="selector">
              <prefix value="record"/>
              <item value="EventRecorder"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="ReadinessManager"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="RefManager"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="float32"/>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="OSInterface"/>
            </type>
            <type type="selector">
              <prefix value="network"/>
              <item value="NetworkPlugin"/>
            </type>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="RunContainerOptionsGenerator"/>
            </type>
            <type type="selector">
              <prefix value="kubeletTypes"/>
              <item value="HttpGetter"/>
            </type>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="RuntimeHooks"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DockerManager"/>
            </type>
          </resultsList>
        </function>
        <function name="ClearCalls">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="AssertCalls">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AssertCreated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AssertStopped">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AssertUnorderedCalls">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListContainers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="ListContainersOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="docker"/>
                <item value="APIContainers"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InspectContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InspectImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Image"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="CreateContainerOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StartContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="HostConfig"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StopContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="RemoveContainerOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Logs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="LogsOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PullImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="PullImageOptions"/>
            </type>
            <type type="selector">
              <prefix value="docker"/>
              <item value="AuthConfiguration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Env"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Info">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Env"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateExec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="CreateExecOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Exec"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StartExec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="docker"/>
              <item value="StartExecOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListImages">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="ListImagesOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="docker"/>
                <item value="APIImages"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Pull">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerPuller"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsImagePresent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeDockerPuller"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Pull">
          <recvList>
            <type type="ident" def="dockerPuller"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Pull">
          <recvList>
            <type type="ident" def="throttledDockerPuller"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsImagePresent">
          <recvList>
            <type type="ident" def="dockerPuller"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsImagePresent">
          <recvList>
            <type type="ident" def="throttledDockerPuller"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FindPodContainer">
          <recvList>
            <type type="ident" def="DockerContainers"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="APIContainers"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="HashContainer">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="BuildDockerName">
          <recvList/>
          <paramsList>
            <type type="ident" def="KubeletContainerName"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ParseDockerName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="KubeletContainerName"/>
            </type>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ConnectToDockerOrDie">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="DockerInterface"/>
          </resultsList>
        </function>
        <function name="GetKubeletDockerContainers">
          <recvList/>
          <paramsList>
            <type type="ident" def="DockerInterface"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="DockerContainers"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrNoContainersInPod"/>
        <name value="ErrNoPodInfraContainerInPod"/>
        <name value="ErrContainerCannotRun"/>
        <name value="PodInfraContainerName"/>
        <name value="DockerPrefix"/>
        <name value="PodInfraContainerImage"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/slice">
      <types/>
      <functions>
        <function name="CopyStrings">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="SortStrings">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="ShuffleStrings">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubectl/cmd/config">
      <types>
        <type type="struct" name="ViewOptions">
          <field type="ident" def="ConfigAccess" name="ConfigAccess"/>
          <field type="selector" name="Merge">
            <prefix value="util"/>
            <item value="BoolFlag"/>
          </field>
          <field type="ident" def="bool" name="Flatten"/>
          <field type="ident" def="bool" name="Minify"/>
          <field type="ident" def="bool" name="RawByteData"/>
        </type>
        <type type="struct" name="PathOptions">
          <field type="ident" def="string" name="GlobalFile"/>
          <field type="ident" def="string" name="EnvVar"/>
          <field type="ident" def="string" name="ExplicitFileFlag"/>
          <field type="ident" def="string" name="GlobalFileSubpath"/>
          <field type="pointer" name="LoadingRules">
            <type type="selector">
              <prefix value="clientcmd"/>
              <item value="ClientConfigLoadingRules"/>
            </type>
          </field>
        </type>
        <type name="ConfigAccess" type="interface">
          <method name="GetLoadingPrecedence">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="GetStartingConfig">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="clientcmdapi"/>
                  <item value="Config"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetDefaultFilename">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="IsExplicitFile">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="GetExplicitFile">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewCmdConfigView">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="ConfigAccess"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="ident" def="ViewOptions"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="kubectl"/>
              <item value="ResourcePrinter"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Complete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ViewOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Validate">
          <recvList>
            <type type="ident" def="ViewOptions"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdConfigUseContext">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="ConfigAccess"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewCmdConfigUnset">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="ConfigAccess"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewCmdConfigSet">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="ConfigAccess"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewCmdConfigSetContext">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="ConfigAccess"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewCmdConfigSetCluster">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="ConfigAccess"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewCmdConfigSetAuthInfo">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="ConfigAccess"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewCmdConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="PathOptions"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewDefaultPathOptions">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PathOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="GetEnvVarFiles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PathOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetLoadingPrecedence">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PathOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStartingConfig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PathOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="clientcmdapi"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetDefaultFilename">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PathOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsExplicitFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PathOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetExplicitFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PathOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ModifyConfig">
          <recvList/>
          <paramsList>
            <type type="ident" def="ConfigAccess"/>
            <type type="selector">
              <prefix value="clientcmdapi"/>
              <item value="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/admit">
      <types/>
      <functions>
        <function name="Admit">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Attributes"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAlwaysAdmit">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/gce">
      <types>
        <type type="struct" name="GCECloud">
          <field type="pointer" name="service">
            <type type="selector">
              <prefix value="compute"/>
              <item value="Service"/>
            </type>
          </field>
          <field type="pointer" name="containerService">
            <type type="selector">
              <prefix value="container"/>
              <item value="Service"/>
            </type>
          </field>
          <field type="ident" def="string" name="projectID"/>
          <field type="ident" def="string" name="zone"/>
          <field type="ident" def="string" name="instanceID"/>
          <field type="ident" def="string" name="networkName"/>
          <field type="func" name="metadataAccess">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
        </type>
        <type type="struct" name="Config">
          <field type="struct" name="Global">
            <field type="ident" def="string" name="TokenURL"/>
            <field type="ident" def="string" name="ProjectID"/>
          </field>
        </type>
        <type name="GCEAffinityType" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="Token">
          <recvList>
            <type type="pointer">
              <type type="ident" def="altTokenSource"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="oauth2"/>
                <item value="Token"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Clusters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Clusters"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="TCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="TCPLoadBalancer"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Instances">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Instances"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Zones">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Zones"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetTCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateTCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="int"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="AffinityType"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateTCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteTCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NodeAddresses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="NodeAddress"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExternalID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNodeResources">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeResources"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Configure">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeSpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetZone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Zone"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AttachDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DetachDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListClusters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Master">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCECloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrMetadataConflict"/>
        <name value="GCEAffinityTypeNone"/>
        <name value="GCEAffinityTypeClientIP"/>
        <name value="GCEAffinityTypeClientIPProto"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volumeclaimbinder">
      <types>
        <type type="struct" name="PersistentVolumeClaimBinder">
          <field type="pointer" name="volumeIndex">
            <type type="ident" def="persistentVolumeOrderedIndex"/>
          </field>
          <field type="pointer" name="volumeController">
            <type type="selector">
              <prefix value="framework"/>
              <item value="Controller"/>
            </type>
          </field>
          <field type="pointer" name="claimController">
            <type type="selector">
              <prefix value="framework"/>
              <item value="Controller"/>
            </type>
          </field>
          <field type="ident" def="binderClient" name="client"/>
          <field type="map" name="stopChannels">
            <keytype type="ident" def="string"/>
            <valtype type="channel" dir="3">
              <type type="struct" name=""/>
            </valtype>
          </field>
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewPersistentVolumeOrderedIndex">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="persistentVolumeOrderedIndex"/>
            </type>
          </resultsList>
        </function>
        <function name="ListByAccessModes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumeOrderedIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="AccessModeType"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolume"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Find">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumeOrderedIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="matchPredicate"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FindByAccessModesAndStorageCapacity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumeOrderedIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="AccessModeType"/>
              </elmtype>
            </type>
            <type type="selector">
              <prefix value="resource"/>
              <item value="Quantity"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FindBestMatchForClaim">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumeOrderedIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="byCapacity"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="byCapacity"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="byCapacity"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="NewPersistentVolumeClaimBinder">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PersistentVolumeClaimBinder"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PersistentVolumeClaimBinder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PersistentVolumeClaimBinder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewBinderClient">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="binderClient"/>
          </resultsList>
        </function>
        <function name="GetPersistentVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realBinderClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdatePersistentVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realBinderClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdatePersistentVolumeStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realBinderClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPersistentVolumeClaim">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realBinderClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdatePersistentVolumeClaim">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realBinderClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdatePersistentVolumeClaimStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realBinderClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/request/union">
      <types/>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="authenticator"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="authenticator"/>
              <item value="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthenticateRequest">
          <recvList>
            <type type="ident" def="unionAuthRequestHandler"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/httpstream">
      <types>
        <type name="NewStreamHandler" type="func">
          <paramsList>
            <type type="ident" def="Stream"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="UpgradeRoundTripper" type="interface">
          <method name="NewConnection">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Response"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Connection"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ResponseUpgrader" type="interface">
          <method name="UpgradeResponse">
            <paramsList>
              <type type="selector">
                <prefix value="http"/>
                <item value="ResponseWriter"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
              <type type="ident" def="NewStreamHandler"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Connection"/>
            </resultsList>
          </method>
        </type>
        <type name="Connection" type="interface">
          <method name="CreateStream">
            <paramsList>
              <type type="selector">
                <prefix value="http"/>
                <item value="Header"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Stream"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Close">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CloseChan">
            <paramsList/>
            <resultsList>
              <type type="channel" dir="2">
                <type type="ident" def="bool"/>
              </type>
            </resultsList>
          </method>
          <method name="SetIdleTimeout">
            <paramsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Stream" type="interface">
          <method name="Reset">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Headers">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="http"/>
                <item value="Header"/>
              </type>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NoOpNewStreamHandler">
          <recvList/>
          <paramsList>
            <type type="ident" def="Stream"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsUpgradeRequest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="HeaderConnection"/>
        <name value="HeaderUpgrade"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/fielderrors">
      <types>
        <type name="ValidationErrorType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ValidationError">
          <field type="ident" def="ValidationErrorType" name="Type"/>
          <field type="ident" def="string" name="Field"/>
          <field type="interface" name="BadValue"/>
          <field type="ident" def="string" name="Detail"/>
        </type>
        <type name="ValidationErrorList" type="slice">
          <elmtype type="ident" def="error"/>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="ValidationErrorType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ValidationError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewFieldRequired">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ValidationError"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFieldInvalid">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ValidationError"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFieldNotSupported">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ValidationError"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFieldForbidden">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ValidationError"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFieldDuplicate">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ValidationError"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFieldNotFound">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ValidationError"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFieldTooLong">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ValidationError"/>
            </type>
          </resultsList>
        </function>
        <function name="Prefix">
          <recvList>
            <type type="ident" def="ValidationErrorList"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ValidationErrorList"/>
          </resultsList>
        </function>
        <function name="PrefixIndex">
          <recvList>
            <type type="ident" def="ValidationErrorList"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ValidationErrorList"/>
          </resultsList>
        </function>
        <function name="NewValidationErrorTypeMatcher">
          <recvList/>
          <paramsList>
            <type type="ident" def="ValidationErrorType"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errors"/>
              <item value="Matcher"/>
            </type>
          </resultsList>
        </function>
        <function name="NewValidationErrorFieldPrefixMatcher">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errors"/>
              <item value="Matcher"/>
            </type>
          </resultsList>
        </function>
        <function name="Filter">
          <recvList>
            <type type="ident" def="ValidationErrorList"/>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="errors"/>
                <item value="Matcher"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ValidationErrorList"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ValidationErrorTypeNotFound"/>
        <name value="ValidationErrorTypeRequired"/>
        <name value="ValidationErrorTypeDuplicate"/>
        <name value="ValidationErrorTypeInvalid"/>
        <name value="ValidationErrorTypeNotSupported"/>
        <name value="ValidationErrorTypeForbidden"/>
        <name value="ValidationErrorTypeTooLong"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/iptables">
      <types>
        <type name="Interface" type="interface">
          <method name="EnsureChain">
            <paramsList>
              <type type="ident" def="Table"/>
              <type type="ident" def="Chain"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="FlushChain">
            <paramsList>
              <type type="ident" def="Table"/>
              <type type="ident" def="Chain"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteChain">
            <paramsList>
              <type type="ident" def="Table"/>
              <type type="ident" def="Chain"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="EnsureRule">
            <paramsList>
              <type type="ident" def="Table"/>
              <type type="ident" def="Chain"/>
              <type type="ellipsis">
                <type type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteRule">
            <paramsList>
              <type type="ident" def="Table"/>
              <type type="ident" def="Chain"/>
              <type type="ellipsis">
                <type type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="IsIpv6">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type name="Protocol" type="ident">
          <type type="ident" def="byte"/>
        </type>
        <type name="Table" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="Chain" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="utilexec"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="Protocol"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
          </resultsList>
        </function>
        <function name="EnsureChain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runner"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Table"/>
            <type type="ident" def="Chain"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FlushChain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runner"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Table"/>
            <type type="ident" def="Chain"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteChain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runner"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Table"/>
            <type type="ident" def="Chain"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EnsureRule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runner"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Table"/>
            <type type="ident" def="Chain"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteRule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runner"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Table"/>
            <type type="ident" def="Chain"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsIpv6">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runner"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ProtocolIpv4"/>
        <name value="ProtocolIpv6"/>
        <name value="TableNAT"/>
        <name value="ChainPostrouting"/>
        <name value="ChainPrerouting"/>
        <name value="ChainOutput"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/auth/authorizer">
      <types>
        <type name="Attributes" type="interface">
          <method name="GetUserName">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GetGroups">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="IsReadOnly">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="GetNamespace">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GetResource">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="Authorizer" type="interface">
          <method name="Authorize">
            <paramsList>
              <type type="ident" def="Attributes"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="AttributesRecord">
          <field type="selector" name="User">
            <prefix value="user"/>
            <item value="Info"/>
          </field>
          <field type="ident" def="bool" name="ReadOnly"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="Resource"/>
        </type>
      </types>
      <functions>
        <function name="GetUserName">
          <recvList>
            <type type="ident" def="AttributesRecord"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetGroups">
          <recvList>
            <type type="ident" def="AttributesRecord"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="IsReadOnly">
          <recvList>
            <type type="ident" def="AttributesRecord"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetNamespace">
          <recvList>
            <type type="ident" def="AttributesRecord"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetResource">
          <recvList>
            <type type="ident" def="AttributesRecord"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/exec">
      <types>
        <type type="struct" name="FakeExec">
          <field type="slice" name="CommandScript">
            <elmtype type="ident" def="FakeCommandAction"/>
          </field>
          <field type="ident" def="int" name="CommandCalls"/>
        </type>
        <type name="FakeCommandAction" type="func">
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Cmd"/>
          </resultsList>
        </type>
        <type type="struct" name="FakeCmd">
          <field type="slice" name="Argv">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="CombinedOutputScript">
            <elmtype type="ident" def="FakeCombinedOutputAction"/>
          </field>
          <field type="ident" def="int" name="CombinedOutputCalls"/>
          <field type="slice" name="CombinedOutputLog">
            <elmtype type="slice">
              <elmtype type="ident" def="string"/>
            </elmtype>
          </field>
          <field type="slice" name="Dirs">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type name="FakeCombinedOutputAction" type="func">
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="FakeExitError">
          <field type="ident" def="int" name="Status"/>
        </type>
        <type name="Interface" type="interface">
          <method name="Command">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Cmd"/>
            </resultsList>
          </method>
        </type>
        <type name="Cmd" type="interface">
          <method name="CombinedOutput">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetDir">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="ExitError" type="interface">
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Error">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Exited">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="ExitStatus">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Command">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeExec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Cmd"/>
          </resultsList>
        </function>
        <function name="InitFakeCmd">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="FakeCmd"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Cmd"/>
          </resultsList>
        </function>
        <function name="SetDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCmd"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CombinedOutput">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCmd"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeExitError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeExitError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Exited">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeExitError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ExitStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeExitError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Interface"/>
          </resultsList>
        </function>
        <function name="Command">
          <recvList>
            <type type="pointer">
              <type type="ident" def="executor"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Cmd"/>
          </resultsList>
        </function>
        <function name="SetDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cmdWrapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CombinedOutput">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cmdWrapper"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExitStatus">
          <recvList>
            <type type="ident" def="exitErrorWrapper"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/namespace">
      <types>
        <type name="Registry" type="interface">
          <method name="ListNamespaces">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="NamespaceList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WatchNamespaces">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetNamespace">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Namespace"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateNamespace">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Namespace"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateNamespace">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Namespace"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteNamespace">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NamespaceScoped">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForCreate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Validate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="AllowCreateOnUpdate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="MatchNamespace">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
          </resultsList>
        </function>
        <function name="NamespaceToSelectableFields">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Set"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="StandardStorage"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Registry"/>
          </resultsList>
        </function>
        <function name="ListNamespaces">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NamespaceList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchNamespaces">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Strategy"/>
        <name value="StatusStrategy"/>
        <name value="FinalizeStrategy"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/controller/etcd">
      <types>
        <type type="struct" name="REST">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewREST">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/etcd">
      <types>
        <type type="struct" name="Registry">
          <field type="selector" name="">
            <prefix value="tools"/>
            <item value="EtcdHelper"/>
          </field>
          <field type="selector" name="pods">
            <prefix value="pod"/>
            <item value="Registry"/>
          </field>
          <field type="selector" name="endpoints">
            <prefix value="endpoint"/>
            <item value="Registry"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
            <type type="selector">
              <prefix value="pod"/>
              <item value="Registry"/>
            </type>
            <type type="selector">
              <prefix value="endpoint"/>
              <item value="Registry"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </resultsList>
        </function>
        <function name="MakeEtcdListKey">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="MakeEtcdItemKey">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListControllers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationControllerList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchControllers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteController">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ServiceList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateService">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetService">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteService">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateService">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ControllerPath"/>
        <name value="ServicePath"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/probe/tcp">
      <types>
        <type name="TCPProber" type="interface">
          <method name="Probe">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="int"/>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="probe"/>
                <item value="Result"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="TCPProber"/>
          </resultsList>
        </function>
        <function name="Probe">
          <recvList>
            <type type="ident" def="tcpProber"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="probe"/>
              <item value="Result"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DoTCPProbe">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="probe"/>
              <item value="Result"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/fake">
      <types>
        <type type="struct" name="FakeBalancer">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Region"/>
          <field type="selector" name="ExternalIP">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="int"/>
          </field>
          <field type="slice" name="Hosts">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="FakeUpdateBalancerCall">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Region"/>
          <field type="slice" name="Hosts">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="FakeCloud">
          <field type="ident" def="bool" name="Exists"/>
          <field type="ident" def="error" name="Err"/>
          <field type="slice" name="Calls">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Addresses">
            <elmtype type="selector">
              <prefix value="api"/>
              <item value="NodeAddress"/>
            </elmtype>
          </field>
          <field type="map" name="ExtID">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Machines">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="NodeResources">
            <type type="selector">
              <prefix value="api"/>
              <item value="NodeResources"/>
            </type>
          </field>
          <field type="slice" name="ClusterList">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="MasterName"/>
          <field type="selector" name="ExternalIP">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="slice" name="Balancers">
            <elmtype type="ident" def="FakeBalancer"/>
          </field>
          <field type="slice" name="UpdateCalls">
            <elmtype type="ident" def="FakeUpdateBalancerCall"/>
          </field>
          <field type="selector" name="">
            <prefix value="cloudprovider"/>
            <item value="Zone"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="ClearCalls">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ListClusters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Master">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Clusters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Clusters"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="TCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="TCPLoadBalancer"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Instances">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Instances"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Zones">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Zones"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetTCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateTCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="int"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="AffinityType"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateTCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteTCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NodeAddresses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="NodeAddress"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExternalID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetZone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Zone"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNodeResources">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeResources"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Configure">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeSpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/git_repo">
      <types/>
      <functions>
        <function name="ProbeVolumePlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gitRepoPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeHost"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gitRepoPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CanSupport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gitRepoPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gitRepoPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeOptions"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Builder"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gitRepoPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Cleaner"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gitRepo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUpAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gitRepo"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gitRepo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TearDown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gitRepo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDownAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gitRepo"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/persistent_claim">
      <types/>
      <functions>
        <function name="ProbeVolumePlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentClaimPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeHost"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentClaimPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CanSupport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentClaimPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentClaimPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeOptions"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Builder"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentClaimPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Cleaner"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/securitycontext/scdeny">
      <types/>
      <functions>
        <function name="NewSecurityContextDeny">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
        <function name="Admit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="plugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Attributes"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/client/remotecommand">
      <types>
        <type type="struct" name="RemoteCommandExecutor">
          <field type="pointer" name="req">
            <type type="selector">
              <prefix value="client"/>
              <item value="Request"/>
            </type>
          </field>
          <field type="pointer" name="config">
            <type type="selector">
              <prefix value="client"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="slice" name="command">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="selector" name="stdin">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="selector" name="stdout">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="selector" name="stderr">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="bool" name="tty"/>
          <field type="ident" def="upgrader" name="upgrader"/>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RemoteCommandExecutor"/>
            </type>
          </resultsList>
        </function>
        <function name="Execute">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RemoteCommandExecutor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/rest/resttest">
      <types>
        <type type="struct" name="Tester">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="testing"/>
              <item value="T"/>
            </type>
          </field>
          <field type="selector" name="storage">
            <prefix value="rest"/>
            <item value="Storage"/>
          </field>
          <field type="ident" def="injectErrorFunc" name="storageError"/>
          <field type="ident" def="bool" name="clusterScope"/>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="rest"/>
              <item value="Storage"/>
            </type>
            <type type="ident" def="injectErrorFunc"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </resultsList>
        </function>
        <function name="ClusterScope">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </resultsList>
        </function>
        <function name="TestCreate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestCreateResetsUserData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestCreateHasMetadata">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestCreateGeneratesName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestCreateGeneratesNameReturnsServerTimeout">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestCreateInvokesValidation">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestCreateRejectsMismatchedNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestCreateRejectsNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestUpdate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestUpdateFailsOnNotFound">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestUpdateFailsOnVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestDeleteInvokesValidation">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestDelete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="selector">
                  <prefix value="runtime"/>
                  <item value="Object"/>
                </type>
              </resultsList>
            </type>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestDeleteNonExist">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="selector">
                  <prefix value="runtime"/>
                  <item value="Object"/>
                </type>
              </resultsList>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestDeleteGraceful">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="selector">
                  <prefix value="runtime"/>
                  <item value="Object"/>
                </type>
              </resultsList>
            </type>
            <type type="ident" def="int64"/>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestDeleteNoGraceful">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="selector">
                  <prefix value="runtime"/>
                  <item value="Object"/>
                </type>
              </resultsList>
            </type>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestDeleteGracefulHasDefault">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="int64"/>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="bool"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TestDeleteGracefulUsesZeroOnNil">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tester"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/master/ports">
      <types/>
      <functions/>
      <names>
        <name value="KubeletStatusPort"/>
        <name value="ProxyStatusPort"/>
        <name value="KubeletPort"/>
        <name value="SchedulerPort"/>
        <name value="ControllerManagerPort"/>
        <name value="KubeletReadOnlyPort"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/iscsi">
      <types>
        <type type="struct" name="ISCSIUtil"/>
        <type type="struct" name="ISCSIPlugin">
          <field type="selector" name="host">
            <prefix value="volume"/>
            <item value="VolumeHost"/>
          </field>
          <field type="selector" name="exe">
            <prefix value="exec"/>
            <item value="Interface"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="MakeGlobalPDName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ISCSIUtil"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="iscsiDisk"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="AttachDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ISCSIUtil"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="iscsiDisk"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DetachDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ISCSIUtil"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="iscsiDisk"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ProbeVolumePlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ISCSIPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeHost"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ISCSIPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CanSupport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ISCSIPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetAccessModes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ISCSIPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="AccessModeType"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ISCSIPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeOptions"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Builder"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ISCSIPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Cleaner"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="iscsiDisk"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="iscsiDisk"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUpAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="iscsiDisk"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="iscsiDisk"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDownAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="iscsiDisk"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ISCSIPluginName"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/probe/exec">
      <types>
        <type name="ExecProber" type="interface">
          <method name="Probe">
            <paramsList>
              <type type="selector">
                <prefix value="uexec"/>
                <item value="Cmd"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="probe"/>
                <item value="Result"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ExecProber"/>
          </resultsList>
        </function>
        <function name="Probe">
          <recvList>
            <type type="ident" def="execProber"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="uexec"/>
              <item value="Cmd"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="probe"/>
              <item value="Result"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/meta">
      <types>
        <type type="struct" name="DefaultRESTMapper">
          <field type="map" name="mapping">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="typeMeta"/>
          </field>
          <field type="map" name="reverse">
            <keytype type="ident" def="typeMeta"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="scopes">
            <keytype type="ident" def="typeMeta"/>
            <valtype type="ident" def="RESTScope"/>
          </field>
          <field type="slice" name="versions">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="VersionInterfacesFunc" name="interfacesFunc"/>
        </type>
        <type name="VersionInterfacesFunc" type="func">
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="VersionInterfaces"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </type>
        <type name="MultiRESTMapper" type="slice">
          <elmtype type="ident" def="RESTMapper"/>
        </type>
        <type type="struct" name="VersionInterfaces">
          <field type="selector" name="">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="selector" name="">
            <prefix value="runtime"/>
            <item value="ObjectConvertor"/>
          </field>
          <field type="ident" def="MetadataAccessor" name=""/>
        </type>
        <type name="Interface" type="interface">
          <method name="Namespace">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="SetNamespace">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="SetName">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="GenerateName">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="SetGenerateName">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="UID">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </type>
            </resultsList>
          </method>
          <method name="SetUID">
            <paramsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ResourceVersion">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="SetResourceVersion">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="SelfLink">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="SetSelfLink">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Labels">
            <paramsList/>
            <resultsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="SetLabels">
            <paramsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Annotations">
            <paramsList/>
            <resultsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="SetAnnotations">
            <paramsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="TypeInterface" type="interface">
          <method name="APIVersion">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="SetAPIVersion">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Kind">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="SetKind">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="MetadataAccessor" type="interface">
          <method name="APIVersion">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetAPIVersion">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Kind">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetKind">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Namespace">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetNamespace">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Name">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetName">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GenerateName">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetGenerateName">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UID">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetUID">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SelfLink">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetSelfLink">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Labels">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetLabels">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Annotations">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetAnnotations">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="RESTScopeName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="RESTScope" type="interface">
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="RESTScopeName"/>
            </resultsList>
          </method>
          <method name="ParamName">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="ParamPath">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="ParamDescription">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="RESTMapping">
          <field type="ident" def="string" name="Resource"/>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="RESTScope" name="Scope"/>
          <field type="selector" name="">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="selector" name="">
            <prefix value="runtime"/>
            <item value="ObjectConvertor"/>
          </field>
          <field type="ident" def="MetadataAccessor" name=""/>
        </type>
        <type name="RESTMapper" type="interface">
          <method name="VersionAndKindForResource">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RESTMapping">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="RESTMapping"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="AliasesForResource">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="restScope"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="RESTScopeName"/>
          </resultsList>
        </function>
        <function name="ParamName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="restScope"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ParamPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="restScope"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ParamDescription">
          <recvList>
            <type type="pointer">
              <type type="ident" def="restScope"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewDefaultRESTMapper">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="VersionInterfacesFunc"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DefaultRESTMapper"/>
            </type>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultRESTMapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="RESTScope"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="VersionAndKindForResource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultRESTMapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RESTMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultRESTMapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RESTMapping"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddResourceAlias">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultRESTMapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AliasesForResource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultRESTMapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="VersionAndKindForResource">
          <recvList>
            <type type="ident" def="MultiRESTMapper"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RESTMapping">
          <recvList>
            <type type="ident" def="MultiRESTMapper"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RESTMapping"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AliasesForResource">
          <recvList>
            <type type="ident" def="MultiRESTMapper"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Accessor">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TypeAccessor">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="TypeInterface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAccessor">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="MetadataAccessor"/>
          </resultsList>
        </function>
        <function name="Kind">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetKind">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="APIVersion">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetAPIVersion">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Namespace">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetNamespace">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetName">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GenerateName">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetGenerateName">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SelfLink">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetSelfLink">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Labels">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetLabels">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Annotations">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetAnnotations">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResourceVersion">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetResourceVersion">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Namespace">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetNamespace">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetName">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateName">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetGenerateName">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="UID">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
          </resultsList>
        </function>
        <function name="SetUID">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="APIVersion">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetAPIVersion">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Kind">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetKind">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ResourceVersion">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetResourceVersion">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SelfLink">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetSelfLink">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Labels">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="SetLabels">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Annotations">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="SetAnnotations">
          <recvList>
            <type type="ident" def="genericAccessor"/>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="RESTScopeNamespaceLegacy"/>
        <name value="RESTScopeNamespace"/>
        <name value="RESTScopeRoot"/>
        <name value="RESTScopeNameNamespace"/>
        <name value="RESTScopeNameRoot"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/securitycontext">
      <types>
        <type name="SecurityContextProvider" type="interface">
          <method name="ModifyContainerConfig">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Container"/>
                </type>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="docker"/>
                  <item value="Config"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ModifyHostConfig">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Container"/>
                </type>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="docker"/>
                  <item value="HostConfig"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="SimpleSecurityContextProvider"/>
        <type type="struct" name="FakeSecurityContextProvider"/>
      </types>
      <functions>
        <function name="HasPrivilegedRequest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasCapabilitiesRequest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewSimpleSecurityContextProvider">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="SecurityContextProvider"/>
          </resultsList>
        </function>
        <function name="ModifyContainerConfig">
          <recvList>
            <type type="ident" def="SimpleSecurityContextProvider"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ModifyHostConfig">
          <recvList>
            <type type="ident" def="SimpleSecurityContextProvider"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="HostConfig"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidSecurityContextWithContainerDefaults">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="SecurityContext"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewFakeSecurityContextProvider">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="SecurityContextProvider"/>
          </resultsList>
        </function>
        <function name="ModifyContainerConfig">
          <recvList>
            <type type="ident" def="FakeSecurityContextProvider"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ModifyHostConfig">
          <recvList>
            <type type="ident" def="FakeSecurityContextProvider"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="docker"/>
                <item value="HostConfig"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/resourcequota">
      <types/>
      <functions>
        <function name="NewResourceQuota">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
        <function name="Admit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="quota"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Attributes"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IncrementUsage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Attributes"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuotaStatus"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/wait">
      <types>
        <type name="ConditionFunc" type="func">
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="WaitFunc" type="func">
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </resultsList>
        </type>
      </types>
      <functions>
        <function name="Jitter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="Poll">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="ConditionFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WaitFor">
          <recvList/>
          <paramsList>
            <type type="ident" def="WaitFunc"/>
            <type type="ident" def="ConditionFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrWaitTimeout"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/namespace/lifecycle">
      <types/>
      <functions>
        <function name="Admit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lifecycle"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Attributes"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewLifecycle">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/version/verflag">
      <types/>
      <functions>
        <function name="IsBoolFlag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="versionValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="versionValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="versionValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="versionValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="versionValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="VersionVar">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="versionValue"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="versionValue"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Version">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="versionValue"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="versionValue"/>
            </type>
          </resultsList>
        </function>
        <function name="PrintAndExitIfRequested">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="VersionFalse"/>
        <name value="VersionTrue"/>
        <name value="VersionRaw"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/service">
      <types>
        <type type="struct" name="EndpointController">
          <field type="pointer" name="client">
            <type type="selector">
              <prefix value="client"/>
              <item value="Client"/>
            </type>
          </field>
          <field type="selector" name="serviceStore">
            <prefix value="cache"/>
            <item value="StoreToServiceLister"/>
          </field>
          <field type="selector" name="podStore">
            <prefix value="cache"/>
            <item value="StoreToPodLister"/>
          </field>
          <field type="pointer" name="queue">
            <type type="selector">
              <prefix value="workqueue"/>
              <item value="Type"/>
            </type>
          </field>
          <field type="pointer" name="serviceController">
            <type type="selector">
              <prefix value="framework"/>
              <item value="Controller"/>
            </type>
          </field>
          <field type="pointer" name="podController">
            <type type="selector">
              <prefix value="framework"/>
              <item value="Controller"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewEndpointController">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EndpointController"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EndpointController"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="FullServiceResyncPeriod"/>
        <name value="PodRelistPeriod"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/endpoint">
      <types>
        <type name="Registry" type="interface">
          <method name="ListEndpoints">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="EndpointsList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetEndpoints">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Endpoints"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WatchEndpoints">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateEndpoints">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Endpoints"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteEndpoints">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NamespaceScoped">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForCreate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Validate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="AllowCreateOnUpdate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="MatchEndpoints">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
          </resultsList>
        </function>
        <function name="EndpointsAttributes">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Set"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Set"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="StandardStorage"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Registry"/>
          </resultsList>
        </function>
        <function name="ListEndpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="EndpointsList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchEndpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetEndpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateEndpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteEndpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Strategy"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/capabilities">
      <types>
        <type type="struct" name="Capabilities">
          <field type="ident" def="bool" name="AllowPrivileged"/>
          <field type="slice" name="HostNetworkSources">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Initialize">
          <recvList/>
          <paramsList>
            <type type="ident" def="Capabilities"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Setup">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetForTests">
          <recvList/>
          <paramsList>
            <type type="ident" def="Capabilities"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Get">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Capabilities"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/httplog">
      <types>
        <type name="StacktracePred" type="func">
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </type>
      </types>
      <functions>
        <function name="Handler">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
            <type type="ident" def="StacktracePred"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="Addf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DefaultStacktracePred">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewLogged">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="ResponseWriter"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="respLogger"/>
            </type>
          </resultsList>
        </function>
        <function name="LogOf">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="logger"/>
          </resultsList>
        </function>
        <function name="Unlogged">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
          </resultsList>
        </function>
        <function name="StacktraceWhen">
          <recvList>
            <type type="pointer">
              <type type="ident" def="respLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="StacktracePred"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="respLogger"/>
            </type>
          </resultsList>
        </function>
        <function name="StatusIsNot">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="int"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="StacktracePred"/>
          </resultsList>
        </function>
        <function name="Addf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="respLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Log">
          <recvList>
            <type type="pointer">
              <type type="ident" def="respLogger"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Header">
          <recvList>
            <type type="pointer">
              <type type="ident" def="respLogger"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Header"/>
            </type>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="respLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Flush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="respLogger"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="WriteHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="respLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Hijack">
          <recvList>
            <type type="pointer">
              <type type="ident" def="respLogger"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="ReadWriter"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1">
      <types>
        <type type="struct" name="ContainerManifest">
          <field type="ident" def="string" name="Version"/>
          <field type="ident" def="string" name="ID"/>
          <field type="selector" name="UUID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="slice" name="Volumes">
            <elmtype type="ident" def="Volume"/>
          </field>
          <field type="slice" name="Containers">
            <elmtype type="ident" def="Container"/>
          </field>
          <field type="ident" def="RestartPolicy" name="RestartPolicy"/>
          <field type="pointer" name="TerminationGracePeriodSeconds">
            <type type="ident" def="int64"/>
          </field>
          <field type="ident" def="DNSPolicy" name="DNSPolicy"/>
          <field type="ident" def="bool" name="HostNetwork"/>
        </type>
        <type type="struct" name="ContainerManifestList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ContainerManifest"/>
          </field>
        </type>
        <type type="struct" name="Volume">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="VolumeSource" name="Source"/>
        </type>
        <type type="struct" name="VolumeSource">
          <field type="pointer" name="HostDir">
            <type type="ident" def="HostPathVolumeSource"/>
          </field>
          <field type="pointer" name="EmptyDir">
            <type type="ident" def="EmptyDirVolumeSource"/>
          </field>
          <field type="pointer" name="GCEPersistentDisk">
            <type type="ident" def="GCEPersistentDiskVolumeSource"/>
          </field>
          <field type="pointer" name="AWSElasticBlockStore">
            <type type="ident" def="AWSElasticBlockStoreVolumeSource"/>
          </field>
          <field type="pointer" name="GitRepo">
            <type type="ident" def="GitRepoVolumeSource"/>
          </field>
          <field type="pointer" name="Secret">
            <type type="ident" def="SecretVolumeSource"/>
          </field>
          <field type="pointer" name="NFS">
            <type type="ident" def="NFSVolumeSource"/>
          </field>
          <field type="pointer" name="ISCSI">
            <type type="ident" def="ISCSIVolumeSource"/>
          </field>
          <field type="pointer" name="Glusterfs">
            <type type="ident" def="GlusterfsVolumeSource"/>
          </field>
          <field type="pointer" name="PersistentVolumeClaimVolumeSource">
            <type type="ident" def="PersistentVolumeClaimVolumeSource"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeSource">
          <field type="pointer" name="GCEPersistentDisk">
            <type type="ident" def="GCEPersistentDiskVolumeSource"/>
          </field>
          <field type="pointer" name="AWSElasticBlockStore">
            <type type="ident" def="AWSElasticBlockStoreVolumeSource"/>
          </field>
          <field type="pointer" name="HostPath">
            <type type="ident" def="HostPathVolumeSource"/>
          </field>
          <field type="pointer" name="Glusterfs">
            <type type="ident" def="GlusterfsVolumeSource"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaimVolumeSource">
          <field type="ident" def="string" name="ClaimName"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="PersistentVolume">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="PersistentVolumeSpec" name="Spec"/>
          <field type="ident" def="PersistentVolumeStatus" name="Status"/>
        </type>
        <type type="struct" name="PersistentVolumeSpec">
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="ident" def="PersistentVolumeSource" name=""/>
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="pointer" name="ClaimRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeStatus">
          <field type="ident" def="PersistentVolumePhase" name="Phase"/>
        </type>
        <type type="struct" name="PersistentVolumeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PersistentVolume"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaim">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="PersistentVolumeClaimSpec" name="Spec"/>
          <field type="ident" def="PersistentVolumeClaimStatus" name="Status"/>
        </type>
        <type type="struct" name="PersistentVolumeClaimList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PersistentVolumeClaim"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaimSpec">
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="ident" def="ResourceRequirements" name="Resources"/>
        </type>
        <type type="struct" name="PersistentVolumeClaimStatus">
          <field type="ident" def="PersistentVolumeClaimPhase" name="Phase"/>
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="pointer" name="VolumeRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type name="AccessModeType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PersistentVolumePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PersistentVolumeClaimPhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="HostPathVolumeSource">
          <field type="ident" def="string" name="Path"/>
        </type>
        <type type="struct" name="EmptyDirVolumeSource">
          <field type="ident" def="StorageType" name="Medium"/>
        </type>
        <type name="StorageType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="Protocol" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="GCEPersistentDiskVolumeSource">
          <field type="ident" def="string" name="PDName"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="int" name="Partition"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="ISCSIVolumeSource">
          <field type="ident" def="string" name="TargetPortal"/>
          <field type="ident" def="string" name="IQN"/>
          <field type="ident" def="int" name="Lun"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="AWSElasticBlockStoreVolumeSource">
          <field type="ident" def="string" name="VolumeID"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="int" name="Partition"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="GitRepoVolumeSource">
          <field type="ident" def="string" name="Repository"/>
          <field type="ident" def="string" name="Revision"/>
        </type>
        <type type="struct" name="SecretVolumeSource">
          <field type="ident" def="ObjectReference" name="Target"/>
        </type>
        <type type="struct" name="ContainerPort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="HostPort"/>
          <field type="ident" def="int" name="ContainerPort"/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="ident" def="string" name="HostIP"/>
        </type>
        <type type="struct" name="VolumeMount">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="bool" name="ReadOnly"/>
          <field type="ident" def="string" name="MountPath"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="string" name="MountType"/>
        </type>
        <type type="struct" name="EnvVar">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="Value"/>
          <field type="pointer" name="ValueFrom">
            <type type="ident" def="EnvVarSource"/>
          </field>
        </type>
        <type type="struct" name="EnvVarSource">
          <field type="pointer" name="FieldRef">
            <type type="ident" def="ObjectFieldSelector"/>
          </field>
        </type>
        <type type="struct" name="ObjectFieldSelector">
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="FieldPath"/>
        </type>
        <type type="struct" name="HTTPGetAction">
          <field type="ident" def="string" name="Path"/>
          <field type="selector" name="Port">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
          <field type="ident" def="string" name="Host"/>
        </type>
        <type type="struct" name="TCPSocketAction">
          <field type="selector" name="Port">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
        </type>
        <type type="struct" name="ExecAction">
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="LivenessProbe">
          <field type="pointer" name="HTTPGet">
            <type type="ident" def="HTTPGetAction"/>
          </field>
          <field type="pointer" name="TCPSocket">
            <type type="ident" def="TCPSocketAction"/>
          </field>
          <field type="pointer" name="Exec">
            <type type="ident" def="ExecAction"/>
          </field>
          <field type="ident" def="int64" name="InitialDelaySeconds"/>
          <field type="ident" def="int64" name="TimeoutSeconds"/>
        </type>
        <type name="PullPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="CapabilityType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Capabilities">
          <field type="slice" name="Add">
            <elmtype type="ident" def="CapabilityType"/>
          </field>
          <field type="slice" name="Drop">
            <elmtype type="ident" def="CapabilityType"/>
          </field>
        </type>
        <type type="struct" name="ResourceRequirements">
          <field type="ident" def="ResourceList" name="Limits"/>
          <field type="ident" def="ResourceList" name="Requests"/>
        </type>
        <type type="struct" name="Container">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Image"/>
          <field type="slice" name="Entrypoint">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="WorkingDir"/>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="ContainerPort"/>
          </field>
          <field type="slice" name="Env">
            <elmtype type="ident" def="EnvVar"/>
          </field>
          <field type="ident" def="ResourceRequirements" name="Resources"/>
          <field type="ident" def="int" name="CPU"/>
          <field type="ident" def="int64" name="Memory"/>
          <field type="slice" name="VolumeMounts">
            <elmtype type="ident" def="VolumeMount"/>
          </field>
          <field type="pointer" name="LivenessProbe">
            <type type="ident" def="LivenessProbe"/>
          </field>
          <field type="pointer" name="ReadinessProbe">
            <type type="ident" def="LivenessProbe"/>
          </field>
          <field type="pointer" name="Lifecycle">
            <type type="ident" def="Lifecycle"/>
          </field>
          <field type="ident" def="string" name="TerminationMessagePath"/>
          <field type="ident" def="bool" name="Privileged"/>
          <field type="ident" def="PullPolicy" name="ImagePullPolicy"/>
          <field type="ident" def="Capabilities" name="Capabilities"/>
          <field type="pointer" name="SecurityContext">
            <type type="ident" def="SecurityContext"/>
          </field>
        </type>
        <type type="struct" name="Handler">
          <field type="pointer" name="Exec">
            <type type="ident" def="ExecAction"/>
          </field>
          <field type="pointer" name="HTTPGet">
            <type type="ident" def="HTTPGetAction"/>
          </field>
          <field type="pointer" name="TCPSocket">
            <type type="ident" def="TCPSocketAction"/>
          </field>
        </type>
        <type type="struct" name="Lifecycle">
          <field type="pointer" name="PostStart">
            <type type="ident" def="Handler"/>
          </field>
          <field type="pointer" name="PreStop">
            <type type="ident" def="Handler"/>
          </field>
        </type>
        <type type="struct" name="TypeMeta">
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="ID"/>
          <field type="selector" name="UID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="selector" name="CreationTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="SelfLink"/>
          <field type="ident" def="uint64" name="ResourceVersion"/>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="pointer" name="DeletionTimestamp">
            <type type="selector">
              <prefix value="util"/>
              <item value="Time"/>
            </type>
          </field>
          <field type="ident" def="string" name="GenerateName"/>
          <field type="map" name="Annotations">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type name="ConditionStatus" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PodStatus" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ContainerStateWaiting">
          <field type="ident" def="string" name="Reason"/>
        </type>
        <type type="struct" name="ContainerStateRunning">
          <field type="selector" name="StartedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="ContainerStateTerminated">
          <field type="ident" def="int" name="ExitCode"/>
          <field type="ident" def="int" name="Signal"/>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
          <field type="selector" name="StartedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="FinishedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="ContainerID"/>
        </type>
        <type type="struct" name="ContainerState">
          <field type="pointer" name="Waiting">
            <type type="ident" def="ContainerStateWaiting"/>
          </field>
          <field type="pointer" name="Running">
            <type type="ident" def="ContainerStateRunning"/>
          </field>
          <field type="pointer" name="Termination">
            <type type="ident" def="ContainerStateTerminated"/>
          </field>
        </type>
        <type type="struct" name="ContainerStatus">
          <field type="ident" def="ContainerState" name="State"/>
          <field type="ident" def="ContainerState" name="LastTerminationState"/>
          <field type="ident" def="bool" name="Ready"/>
          <field type="ident" def="int" name="RestartCount"/>
          <field type="ident" def="string" name="Image"/>
          <field type="ident" def="string" name="ImageID"/>
          <field type="ident" def="string" name="ContainerID"/>
        </type>
        <type name="PodConditionKind" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="PodCondition">
          <field type="ident" def="PodConditionKind" name="Kind"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
        </type>
        <type name="PodInfo" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="ContainerStatus"/>
        </type>
        <type type="struct" name="PodContainerInfo">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="PodInfo" name="ContainerInfo"/>
        </type>
        <type type="struct" name="RestartPolicyAlways"/>
        <type type="struct" name="RestartPolicyOnFailure"/>
        <type type="struct" name="RestartPolicyNever"/>
        <type type="struct" name="RestartPolicy">
          <field type="pointer" name="Always">
            <type type="ident" def="RestartPolicyAlways"/>
          </field>
          <field type="pointer" name="OnFailure">
            <type type="ident" def="RestartPolicyOnFailure"/>
          </field>
          <field type="pointer" name="Never">
            <type type="ident" def="RestartPolicyNever"/>
          </field>
        </type>
        <type type="struct" name="PodState">
          <field type="ident" def="ContainerManifest" name="Manifest"/>
          <field type="ident" def="PodStatus" name="Status"/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="PodCondition"/>
          </field>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Host"/>
          <field type="ident" def="string" name="HostIP"/>
          <field type="ident" def="string" name="PodIP"/>
          <field type="ident" def="PodInfo" name="Info"/>
        </type>
        <type type="struct" name="PodStatusResult">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="PodState" name="State"/>
        </type>
        <type type="struct" name="PodList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Pod"/>
          </field>
        </type>
        <type type="struct" name="Pod">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="PodState" name="DesiredState"/>
          <field type="ident" def="PodState" name="CurrentState"/>
          <field type="map" name="NodeSelector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="ReplicationControllerState">
          <field type="ident" def="int" name="Replicas"/>
          <field type="map" name="ReplicaSelector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="PodTemplate" name="PodTemplate"/>
        </type>
        <type type="struct" name="ReplicationControllerList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ReplicationController"/>
          </field>
        </type>
        <type type="struct" name="ReplicationController">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ReplicationControllerState" name="DesiredState"/>
          <field type="ident" def="ReplicationControllerState" name="CurrentState"/>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="PodTemplate">
          <field type="ident" def="PodState" name="DesiredState"/>
          <field type="map" name="NodeSelector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Annotations">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type name="AffinityType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ServiceList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Service"/>
          </field>
        </type>
        <type type="struct" name="Service">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="string" name="PortName"/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="selector" name="ContainerPort">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Selector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="CreateExternalLoadBalancer"/>
          <field type="slice" name="PublicIPs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="PortalIP"/>
          <field type="ident" def="int" name="ProxyPort"/>
          <field type="ident" def="AffinityType" name="SessionAffinity"/>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="ServicePort"/>
          </field>
        </type>
        <type type="struct" name="ServicePort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="ident" def="int" name="Port"/>
          <field type="selector" name="ContainerPort">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
        </type>
        <type type="struct" name="EndpointObjectReference">
          <field type="ident" def="string" name="Endpoint"/>
          <field type="ident" def="ObjectReference" name=""/>
        </type>
        <type type="struct" name="Endpoints">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="slice" name="Endpoints">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="TargetRefs">
            <elmtype type="ident" def="EndpointObjectReference"/>
          </field>
          <field type="slice" name="Subsets">
            <elmtype type="ident" def="EndpointSubset"/>
          </field>
        </type>
        <type type="struct" name="EndpointSubset">
          <field type="slice" name="Addresses">
            <elmtype type="ident" def="EndpointAddress"/>
          </field>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="EndpointPort"/>
          </field>
        </type>
        <type type="struct" name="EndpointAddress">
          <field type="ident" def="string" name="IP"/>
          <field type="pointer" name="TargetRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type type="struct" name="EndpointPort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="Protocol" name="Protocol"/>
        </type>
        <type type="struct" name="EndpointsList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Endpoints"/>
          </field>
        </type>
        <type type="struct" name="NodeSystemInfo">
          <field type="ident" def="string" name="MachineID"/>
          <field type="ident" def="string" name="SystemUUID"/>
          <field type="ident" def="string" name="BootID"/>
          <field type="ident" def="string" name="KernelVersion"/>
          <field type="ident" def="string" name="OsImage"/>
          <field type="ident" def="string" name="ContainerRuntimeVersion"/>
          <field type="ident" def="string" name="KubeletVersion"/>
          <field type="ident" def="string" name="KubeProxyVersion"/>
        </type>
        <type type="struct" name="NodeStatus">
          <field type="ident" def="NodePhase" name="Phase"/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="NodeCondition"/>
          </field>
          <field type="slice" name="Addresses">
            <elmtype type="ident" def="NodeAddress"/>
          </field>
          <field type="ident" def="NodeSystemInfo" name="NodeInfo"/>
        </type>
        <type type="struct" name="NodeInfo">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="ident" def="NodeSystemInfo" name=""/>
        </type>
        <type name="NodePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="NodeConditionKind" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NodeCondition">
          <field type="ident" def="NodeConditionKind" name="Kind"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
          <field type="selector" name="LastProbeTime">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="LastTransitionTime">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
        </type>
        <type name="NodeAddressType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NodeAddress">
          <field type="ident" def="NodeAddressType" name="Type"/>
          <field type="ident" def="string" name="Address"/>
        </type>
        <type type="struct" name="NodeResources">
          <field type="ident" def="ResourceList" name="Capacity"/>
        </type>
        <type name="ResourceName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ResourceList" type="map">
          <keytype type="ident" def="ResourceName"/>
          <valtype type="selector">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </valtype>
        </type>
        <type type="struct" name="Minion">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="HostIP"/>
          <field type="ident" def="NodeResources" name="NodeResources"/>
          <field type="ident" def="string" name="PodCIDR"/>
          <field type="ident" def="bool" name="Unschedulable"/>
          <field type="ident" def="NodeStatus" name="Status"/>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="ExternalID"/>
        </type>
        <type type="struct" name="MinionList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Minions">
            <elmtype type="ident" def="Minion"/>
          </field>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Minion"/>
          </field>
        </type>
        <type name="FinalizerName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NamespaceSpec">
          <field type="slice" name="Finalizers">
            <elmtype type="ident" def="FinalizerName"/>
          </field>
        </type>
        <type type="struct" name="NamespaceStatus">
          <field type="ident" def="NamespacePhase" name="Phase"/>
        </type>
        <type name="NamespacePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Namespace">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="NamespaceSpec" name="Spec"/>
          <field type="ident" def="NamespaceStatus" name="Status"/>
        </type>
        <type type="struct" name="NamespaceList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Namespace"/>
          </field>
        </type>
        <type type="struct" name="Binding">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="PodID"/>
          <field type="ident" def="string" name="Host"/>
        </type>
        <type type="struct" name="DeleteOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="pointer" name="GracePeriodSeconds">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="ListOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="LabelSelector"/>
          <field type="ident" def="string" name="FieldSelector"/>
          <field type="ident" def="bool" name="Watch"/>
          <field type="ident" def="string" name="ResourceVersion"/>
        </type>
        <type type="struct" name="PodLogOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Container"/>
          <field type="ident" def="bool" name="Follow"/>
        </type>
        <type type="struct" name="PodExecOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="bool" name="Stdin"/>
          <field type="ident" def="bool" name="Stdout"/>
          <field type="ident" def="bool" name="Stderr"/>
          <field type="ident" def="bool" name="TTY"/>
          <field type="ident" def="string" name="Container"/>
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="PodProxyOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Path"/>
        </type>
        <type type="struct" name="Status">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="StatusReason" name="Reason"/>
          <field type="pointer" name="Details">
            <type type="ident" def="StatusDetails"/>
          </field>
          <field type="ident" def="int" name="Code"/>
        </type>
        <type type="struct" name="StatusDetails">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Kind"/>
          <field type="slice" name="Causes">
            <elmtype type="ident" def="StatusCause"/>
          </field>
          <field type="ident" def="int" name="RetryAfterSeconds"/>
        </type>
        <type name="StatusReason" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="StatusCause">
          <field type="ident" def="CauseType" name="Type"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Field"/>
        </type>
        <type name="CauseType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ObjectReference">
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="ID"/>
          <field type="selector" name="UID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="ResourceVersion"/>
          <field type="ident" def="string" name="FieldPath"/>
        </type>
        <type type="struct" name="SerializedReference">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectReference" name="Reference"/>
        </type>
        <type type="struct" name="Event">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectReference" name="InvolvedObject"/>
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Source"/>
          <field type="ident" def="string" name="Host"/>
          <field type="selector" name="Timestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="FirstTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="LastTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="int" name="Count"/>
        </type>
        <type type="struct" name="EventList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Event"/>
          </field>
        </type>
        <type name="DNSPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="PodSpec">
          <field type="slice" name="Volumes">
            <elmtype type="ident" def="Volume"/>
          </field>
          <field type="slice" name="Containers">
            <elmtype type="ident" def="Container"/>
          </field>
          <field type="ident" def="RestartPolicy" name="RestartPolicy"/>
          <field type="ident" def="DNSPolicy" name="DNSPolicy"/>
          <field type="map" name="NodeSelector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Host"/>
          <field type="ident" def="bool" name="HostNetwork"/>
        </type>
        <type type="struct" name="List">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="selector">
              <prefix value="runtime"/>
              <item value="RawExtension"/>
            </elmtype>
          </field>
        </type>
        <type name="LimitType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="LimitRangeItem">
          <field type="ident" def="LimitType" name="Type"/>
          <field type="ident" def="ResourceList" name="Max"/>
          <field type="ident" def="ResourceList" name="Min"/>
          <field type="ident" def="ResourceList" name="Default"/>
        </type>
        <type type="struct" name="LimitRangeSpec">
          <field type="slice" name="Limits">
            <elmtype type="ident" def="LimitRangeItem"/>
          </field>
        </type>
        <type type="struct" name="LimitRange">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="LimitRangeSpec" name="Spec"/>
        </type>
        <type type="struct" name="LimitRangeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="LimitRange"/>
          </field>
        </type>
        <type type="struct" name="ResourceQuotaSpec">
          <field type="ident" def="ResourceList" name="Hard"/>
        </type>
        <type type="struct" name="ResourceQuotaStatus">
          <field type="ident" def="ResourceList" name="Hard"/>
          <field type="ident" def="ResourceList" name="Used"/>
        </type>
        <type type="struct" name="ResourceQuota">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="ResourceQuotaSpec" name="Spec"/>
          <field type="ident" def="ResourceQuotaStatus" name="Status"/>
        </type>
        <type type="struct" name="ResourceQuotaList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ResourceQuota"/>
          </field>
        </type>
        <type type="struct" name="NFSVolumeSource">
          <field type="ident" def="string" name="Server"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="Secret">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="map" name="Data">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="ident" def="byte"/>
            </valtype>
          </field>
          <field type="ident" def="SecretType" name="Type"/>
        </type>
        <type name="SecretType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="SecretList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Secret"/>
          </field>
        </type>
        <type type="struct" name="GlusterfsVolumeSource">
          <field type="ident" def="string" name="EndpointsName"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type name="ComponentConditionType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ComponentCondition">
          <field type="ident" def="ComponentConditionType" name="Type"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Error"/>
        </type>
        <type type="struct" name="ComponentStatus">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="ComponentCondition"/>
          </field>
        </type>
        <type type="struct" name="ComponentStatusList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ComponentStatus"/>
          </field>
        </type>
        <type type="struct" name="SecurityContext">
          <field type="pointer" name="Capabilities">
            <type type="ident" def="Capabilities"/>
          </field>
          <field type="pointer" name="Privileged">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="SELinuxOptions">
            <type type="ident" def="SELinuxOptions"/>
          </field>
          <field type="pointer" name="RunAsUser">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="SELinuxOptions">
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="Role"/>
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="Level"/>
        </type>
      </types>
      <functions>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="TerminationMessagePathDefault"/>
        <name value="ReadWriteOnce"/>
        <name value="ReadOnlyMany"/>
        <name value="ReadWriteMany"/>
        <name value="VolumePending"/>
        <name value="VolumeAvailable"/>
        <name value="VolumeBound"/>
        <name value="VolumeReleased"/>
        <name value="ClaimPending"/>
        <name value="ClaimBound"/>
        <name value="StorageTypeDefault"/>
        <name value="StorageTypeMemory"/>
        <name value="ProtocolTCP"/>
        <name value="ProtocolUDP"/>
        <name value="PullAlways"/>
        <name value="PullNever"/>
        <name value="PullIfNotPresent"/>
        <name value="ConditionFull"/>
        <name value="ConditionNone"/>
        <name value="ConditionUnknown"/>
        <name value="PodWaiting"/>
        <name value="PodRunning"/>
        <name value="PodTerminated"/>
        <name value="PodUnknown"/>
        <name value="PodSucceeded"/>
        <name value="PodReady"/>
        <name value="AffinityTypeClientIP"/>
        <name value="AffinityTypeNone"/>
        <name value="PortalIPNone"/>
        <name value="NodePending"/>
        <name value="NodeRunning"/>
        <name value="NodeTerminated"/>
        <name value="NodeReachable"/>
        <name value="NodeReady"/>
        <name value="NodeSchedulable"/>
        <name value="NodeHostName"/>
        <name value="NodeExternalIP"/>
        <name value="NodeInternalIP"/>
        <name value="ResourceCPU"/>
        <name value="ResourceMemory"/>
        <name value="ResourceStorage"/>
        <name value="FinalizerKubernetes"/>
        <name value="NamespaceActive"/>
        <name value="NamespaceTerminating"/>
        <name value="StatusSuccess"/>
        <name value="StatusFailure"/>
        <name value="StatusReasonUnknown"/>
        <name value="StatusReasonNotFound"/>
        <name value="StatusReasonAlreadyExists"/>
        <name value="StatusReasonConflict"/>
        <name value="StatusReasonServerTimeout"/>
        <name value="CauseTypeFieldValueNotFound"/>
        <name value="CauseTypeFieldValueRequired"/>
        <name value="CauseTypeFieldValueDuplicate"/>
        <name value="CauseTypeFieldValueInvalid"/>
        <name value="CauseTypeFieldValueNotSupported"/>
        <name value="DNSClusterFirst"/>
        <name value="DNSDefault"/>
        <name value="LimitTypePod"/>
        <name value="LimitTypeContainer"/>
        <name value="ResourcePods"/>
        <name value="ResourceServices"/>
        <name value="ResourceReplicationControllers"/>
        <name value="ResourceQuotas"/>
        <name value="ResourceSecrets"/>
        <name value="ResourcePersistentVolumeClaims"/>
        <name value="MaxSecretSize"/>
        <name value="SecretTypeOpaque"/>
        <name value="ComponentHealthy"/>
        <name value="Codec"/>
        <name value="Dependency"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/tools">
      <types>
        <type name="EtcdClient" type="interface">
          <method name="GetCluster">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="AddChild">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Set">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CompareAndSwap">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
              <type type="ident" def="bool"/>
              <type type="channel" dir="3">
                <type type="pointer">
                  <type type="selector">
                    <prefix value="etcd"/>
                    <item value="Response"/>
                  </type>
                </type>
              </type>
              <type type="channel" dir="3">
                <type type="ident" def="bool"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="EtcdGetSet" type="interface">
          <method name="GetCluster">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Set">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CompareAndSwap">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
              <type type="ident" def="bool"/>
              <type type="channel" dir="3">
                <type type="pointer">
                  <type type="selector">
                    <prefix value="etcd"/>
                    <item value="Response"/>
                  </type>
                </type>
              </type>
              <type type="channel" dir="3">
                <type type="ident" def="bool"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="EtcdVersioner" type="interface">
          <method name="UpdateObject">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Node"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateList">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ObjectResourceVersion">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="uint64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="EtcdResponseWithError">
          <field type="pointer" name="R">
            <type type="selector">
              <prefix value="etcd"/>
              <item value="Response"/>
            </type>
          </field>
          <field type="ident" def="error" name="E"/>
          <field type="pointer" name="N">
            <type type="ident" def="EtcdResponseWithError"/>
          </field>
        </type>
        <type name="TestLogger" type="interface">
          <method name="Fatalf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Errorf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Logf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="FakeEtcdClient">
          <field type="channel" dir="3" name="watchCompletedChan">
            <type type="ident" def="bool"/>
          </field>
          <field type="map" name="Data">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="EtcdResponseWithError"/>
          </field>
          <field type="slice" name="DeletedKeys">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="map" name="expectNotFoundGetSet">
            <keytype type="ident" def="string"/>
            <valtype type="struct" name=""/>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="error" name="Err"/>
          <field type="ident" def="error" name="CasErr"/>
          <field type="ident" def="TestLogger" name="t"/>
          <field type="ident" def="int" name="Ix"/>
          <field type="ident" def="bool" name="TestIndex"/>
          <field type="ident" def="uint64" name="ChangeIndex"/>
          <field type="ident" def="uint64" name="LastSetTTL"/>
          <field type="slice" name="Machines">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="channel" dir="3" name="WatchResponse">
            <type type="pointer">
              <type type="selector">
                <prefix value="etcd"/>
                <item value="Response"/>
              </type>
            </type>
          </field>
          <field type="ident" def="uint64" name="WatchIndex"/>
          <field type="channel" dir="1" name="WatchInjectError">
            <type type="ident" def="error"/>
          </field>
          <field type="channel" dir="1" name="WatchStop">
            <type type="ident" def="bool"/>
          </field>
          <field type="ident" def="error" name="WatchImmediateError"/>
        </type>
        <type type="struct" name="APIObjectVersioner"/>
        <type name="FilterFunc" type="func">
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </type>
        <type name="TransformFunc" type="func">
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="EtcdHelper">
          <field type="ident" def="EtcdGetSet" name="Client"/>
          <field type="selector" name="Codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="ident" def="EtcdVersioner" name="Versioner"/>
          <field type="ident" def="string" name="PathPrefix"/>
          <field type="map" name="cache">
            <keytype type="ident" def="uint64"/>
            <valtype type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </valtype>
          </field>
          <field type="pointer" name="mutex">
            <type type="selector">
              <prefix value="sync"/>
              <item value="RWMutex"/>
            </type>
          </field>
        </type>
        <type name="EtcdUpdateFunc" type="func">
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
      </types>
      <functions>
        <function name="NewFakeEtcdClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestLogger"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </resultsList>
        </function>
        <function name="SetError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetCluster">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="ExpectNotFoundGet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcd"/>
                <item value="EtcdError"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="AddChild">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcd"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcd"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcd"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CompareAndSwap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcd"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcd"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcd"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WaitForWatchCompletion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeEtcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="bool"/>
            <type type="channel" dir="3">
              <type type="pointer">
                <type type="selector">
                  <prefix value="etcd"/>
                  <item value="Response"/>
                </type>
              </type>
            </type>
            <type type="channel" dir="3">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcd"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateObject">
          <recvList>
            <type type="ident" def="APIObjectVersioner"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcd"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateList">
          <recvList>
            <type type="ident" def="APIObjectVersioner"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ObjectResourceVersion">
          <recvList>
            <type type="ident" def="APIObjectVersioner"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Everything">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ParseWatchResourceVersion">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="FilterFunc"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="FilterFunc"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchAndTransform">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="TransformFunc"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
        <function name="ResultChan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdWatcher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="selector">
                <prefix value="watch"/>
                <item value="Event"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdWatcher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewEtcdHelper">
          <recvList/>
          <paramsList>
            <type type="ident" def="EtcdGetSet"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Codec"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="EtcdHelper"/>
          </resultsList>
        </function>
        <function name="IsEtcdNotFound">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsEtcdNodeExist">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsEtcdTestFailed">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsEtcdWatchStoppedByUser">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ExtractToList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExtractObjToList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExtractObj">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateObj">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteObj">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetObj">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GuaranteedUpdate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="EtcdUpdateFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PrefixEtcdKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdHelper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetEtcdVersion">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewEtcdClientStartServerIfNecessary">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="EtcdClient"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="EtcdErrorCodeNotFound"/>
        <name value="EtcdErrorCodeTestFailed"/>
        <name value="EtcdErrorCodeNodeExist"/>
        <name value="EtcdErrorCodeValueRequired"/>
        <name value="EtcdErrorNotFound"/>
        <name value="EtcdErrorTestFailed"/>
        <name value="EtcdErrorNodeExist"/>
        <name value="EtcdErrorValueRequired"/>
        <name value="EtcdCreate"/>
        <name value="EtcdGet"/>
        <name value="EtcdSet"/>
        <name value="EtcdCAS"/>
        <name value="EtcdDelete"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/resourcequota">
      <types>
        <type name="Registry" type="interface">
          <method name="ListResourceQuotas">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ResourceQuotaList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WatchResourceQuotas">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetResourceQuota">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ResourceQuota"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateResourceQuota">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ResourceQuota"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateResourceQuota">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ResourceQuota"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteResourceQuota">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NamespaceScoped">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForCreate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Validate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="AllowCreateOnUpdate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="MatchResourceQuota">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
          </resultsList>
        </function>
        <function name="ResourceQuotaToSelectableFields">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Set"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="StandardStorage"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Registry"/>
          </resultsList>
        </function>
        <function name="ListResourceQuotas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuotaList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchResourceQuotas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetResourceQuota">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateResourceQuota">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateResourceQuota">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteResourceQuota">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Strategy"/>
        <name value="StatusStrategy"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/deny">
      <types/>
      <functions>
        <function name="Admit">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Attributes"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAlwaysDeny">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/nodecontroller">
      <types>
        <type type="struct" name="NodeController">
          <field type="selector" name="cloud">
            <prefix value="cloudprovider"/>
            <item value="Interface"/>
          </field>
          <field type="ident" def="string" name="matchRE"/>
          <field type="pointer" name="staticResources">
            <type type="selector">
              <prefix value="api"/>
              <item value="NodeResources"/>
            </type>
          </field>
          <field type="slice" name="nodes">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="selector" name="kubeClient">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
          <field type="selector" name="recorder">
            <prefix value="record"/>
            <item value="EventRecorder"/>
          </field>
          <field type="ident" def="int" name="registerRetryCount"/>
          <field type="selector" name="podEvictionTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="deletingPodsRateLimiter">
            <prefix value="util"/>
            <item value="RateLimiter"/>
          </field>
          <field type="map" name="nodeStatusMap">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="nodeStatusData"/>
          </field>
          <field type="selector" name="nodeMonitorGracePeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="nodeStartupGracePeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="nodeMonitorPeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="clusterName"/>
          <field type="ident" def="string" name="clusterClassB"/>
          <field type="ident" def="bool" name="allocateNodeCIDRs"/>
          <field type="func" name="lookupIP">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="net"/>
                  <item value="IP"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="now">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="util"/>
                <item value="Time"/>
              </type>
            </resultsList>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewNodeController">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeResources"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="selector">
              <prefix value="util"/>
              <item value="RateLimiter"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="NodeController"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NodeController"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="ErrRegistration"/>
        <name value="ErrQueryIPAddress"/>
        <name value="ErrCloudInstance"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/minion/etcd">
      <types>
        <type type="struct" name="REST">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
          <field type="selector" name="connection">
            <prefix value="client"/>
            <item value="ConnectionInfoGetter"/>
          </field>
        </type>
        <type type="struct" name="StatusREST">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
            <type type="selector">
              <prefix value="client"/>
              <item value="ConnectionInfoGetter"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </resultsList>
        </function>
        <function name="ResourceLocation">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/network/exec">
      <types/>
      <functions>
        <function name="ProbeNetworkPlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="network"/>
                <item value="NetworkPlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="execNetworkPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="network"/>
              <item value="Host"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="execNetworkPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetUpPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="execNetworkPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="kubeletTypes"/>
              <item value="DockerID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDownPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="execNetworkPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="kubeletTypes"/>
              <item value="DockerID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="X_OK"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/request/basicauth">
      <types>
        <type type="struct" name="Authenticator">
          <field type="selector" name="auth">
            <prefix value="authenticator"/>
            <item value="Password"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="authenticator"/>
              <item value="Password"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Authenticator"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthenticateRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Authenticator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/rkt">
      <types>
        <type type="struct" name="ImageManager">
          <field type="pointer" name="runtime">
            <type type="ident" def="runtime"/>
          </field>
        </type>
        <type type="struct" name="Config">
          <field type="ident" def="bool" name="Debug"/>
          <field type="ident" def="string" name="Dir"/>
          <field type="ident" def="bool" name="InsecureSkipVerify"/>
          <field type="ident" def="string" name="LocalConfigDir"/>
        </type>
      </types>
      <functions>
        <function name="Compare">
          <recvList>
            <type type="ident" def="rktVersion"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="rktVersion"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="systemdVersion"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Compare">
          <recvList>
            <type type="ident" def="systemdVersion"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Version"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="kubecontainer"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SyncPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Pod"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodStatus"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="KillPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Pod"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPodStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodStatus"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RunInContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExecInContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PortForward">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="uint16"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadWriteCloser"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PullImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsImagePresent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListImages">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="kubecontainer"/>
                <item value="Image"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetContainerLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsupportedRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Runtime"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RunPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="selector">
                <prefix value="volume"/>
                <item value="Volume"/>
              </valtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="kubecontainer"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="KillPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Pod"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPodStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodStatus"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Version"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PullImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsImagePresent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListImages">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="kubecontainer"/>
                <item value="Image"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SyncPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="Pod"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodStatus"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetContainerLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GarbageCollect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RunInContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExecInContainer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="WriteCloser"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PortForward">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="uint16"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadWriteCloser"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewImageManager">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="runtime"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ImageManager"/>
            </type>
          </resultsList>
        </function>
        <function name="GarbageCollect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImageManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Embryo"/>
        <name value="Preparing"/>
        <name value="AbortedPrepare"/>
        <name value="Prepared"/>
        <name value="Running"/>
        <name value="Deleting"/>
        <name value="Exited"/>
        <name value="Garbage"/>
        <name value="CAP_CHOWN"/>
        <name value="CAP_DAC_OVERRIDE"/>
        <name value="CAP_DAC_READ_SEARCH"/>
        <name value="CAP_FOWNER"/>
        <name value="CAP_FSETID"/>
        <name value="CAP_KILL"/>
        <name value="CAP_SETGID"/>
        <name value="CAP_SETUID"/>
        <name value="CAP_SETPCAP"/>
        <name value="CAP_LINUX_IMMUTABLE"/>
        <name value="CAP_NET_BIND_SERVICE"/>
        <name value="CAP_NET_BROADCAST"/>
        <name value="CAP_NET_ADMIN"/>
        <name value="CAP_NET_RAW"/>
        <name value="CAP_IPC_LOCK"/>
        <name value="CAP_IPC_OWNER"/>
        <name value="CAP_SYS_MODULE"/>
        <name value="CAP_SYS_RAWIO"/>
        <name value="CAP_SYS_CHROOT"/>
        <name value="CAP_SYS_PTRACE"/>
        <name value="CAP_SYS_PACCT"/>
        <name value="CAP_SYS_ADMIN"/>
        <name value="CAP_SYS_BOOT"/>
        <name value="CAP_SYS_NICE"/>
        <name value="CAP_SYS_RESOURCE"/>
        <name value="CAP_SYS_TIME"/>
        <name value="CAP_SYS_TTY_CONFIG"/>
        <name value="CAP_MKNOD"/>
        <name value="CAP_LEASE"/>
        <name value="CAP_AUDIT_WRITE"/>
        <name value="CAP_AUDIT_CONTROL"/>
        <name value="CAP_SETFCAP"/>
        <name value="CAP_MAC_OVERRIDE"/>
        <name value="CAP_MAC_ADMIN"/>
        <name value="CAP_SYSLOG"/>
        <name value="CAP_WAKE_ALARM"/>
        <name value="CAP_BLOCK_SUSPEND"/>
        <name value="CAP_AUDIT_READ"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/cmd/kube-controller-manager/app">
      <types>
        <type type="struct" name="CMServer">
          <field type="ident" def="int" name="Port"/>
          <field type="selector" name="Address">
            <prefix value="util"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="string" name="CloudProvider"/>
          <field type="ident" def="string" name="CloudConfigFile"/>
          <field type="ident" def="int" name="ConcurrentEndpointSyncs"/>
          <field type="ident" def="int" name="ConcurrentRCSyncs"/>
          <field type="ident" def="string" name="MinionRegexp"/>
          <field type="selector" name="NodeSyncPeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="ResourceQuotaSyncPeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="NamespaceSyncPeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="PVClaimBinderSyncPeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="bool" name="EnablePVCClaimBinder"/>
          <field type="ident" def="int" name="RegisterRetryCount"/>
          <field type="selector" name="MachineList">
            <prefix value="util"/>
            <item value="StringList"/>
          </field>
          <field type="ident" def="bool" name="SyncNodeList"/>
          <field type="ident" def="bool" name="SyncNodeStatus"/>
          <field type="selector" name="NodeMonitorGracePeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="NodeStartupGracePeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="NodeMonitorPeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="int" name="NodeStatusUpdateRetry"/>
          <field type="selector" name="PodEvictionTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="float32" name="DeletingPodsQps"/>
          <field type="ident" def="int" name="DeletingPodsBurst"/>
          <field type="ident" def="int64" name="NodeMilliCPU"/>
          <field type="selector" name="NodeMemory">
            <prefix value="resource"/>
            <item value="Quantity"/>
          </field>
          <field type="ident" def="string" name="ClusterName"/>
          <field type="ident" def="string" name="ClusterClassB"/>
          <field type="ident" def="bool" name="AllocateNodeCIDRs"/>
          <field type="ident" def="bool" name="EnableProfiling"/>
          <field type="ident" def="string" name="Master"/>
          <field type="ident" def="string" name="Kubeconfig"/>
        </type>
      </types>
      <functions>
        <function name="NewCMServer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CMServer"/>
            </type>
          </resultsList>
        </function>
        <function name="AddFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CMServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CMServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/credentialprovider">
      <types>
        <type name="DockerConfigProvider" type="interface">
          <method name="Enabled">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Provide">
            <paramsList/>
            <resultsList>
              <type type="ident" def="DockerConfig"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="CachingDockerConfigProvider">
          <field type="ident" def="DockerConfigProvider" name="Provider"/>
          <field type="selector" name="Lifetime">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="DockerConfig" name="cacheDockerConfig"/>
          <field type="selector" name="expiration">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="mu">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type name="DockerKeyring" type="interface">
          <method name="Lookup">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="docker"/>
                <item value="AuthConfiguration"/>
              </type>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="BasicDockerKeyring">
          <field type="slice" name="index">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="map" name="creds">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="docker"/>
              <item value="AuthConfiguration"/>
            </valtype>
          </field>
        </type>
        <type type="struct" name="FakeKeyring">
          <field type="selector" name="auth">
            <prefix value="docker"/>
            <item value="AuthConfiguration"/>
          </field>
          <field type="ident" def="bool" name="ok"/>
        </type>
        <type name="DockerConfig" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="DockerConfigEntry"/>
        </type>
        <type type="struct" name="DockerConfigEntry">
          <field type="ident" def="string" name="Username"/>
          <field type="ident" def="string" name="Password"/>
          <field type="ident" def="string" name="Email"/>
        </type>
        <type type="struct" name="HttpError">
          <field type="ident" def="int" name="StatusCode"/>
          <field type="ident" def="string" name="Url"/>
        </type>
      </types>
      <functions>
        <function name="Enabled">
          <recvList>
            <type type="pointer">
              <type type="ident" def="defaultDockerConfigProvider"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Provide">
          <recvList>
            <type type="pointer">
              <type type="ident" def="defaultDockerConfigProvider"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="DockerConfig"/>
          </resultsList>
        </function>
        <function name="Enabled">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CachingDockerConfigProvider"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Provide">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CachingDockerConfigProvider"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="DockerConfig"/>
          </resultsList>
        </function>
        <function name="RegisterCredentialProvider">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="DockerConfigProvider"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewDockerKeyring">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="DockerKeyring"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BasicDockerKeyring"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="DockerConfig"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Lookup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BasicDockerKeyring"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="AuthConfiguration"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Lookup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lazyDockerKeyring"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="AuthConfiguration"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Lookup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeKeyring"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="docker"/>
              <item value="AuthConfiguration"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetPreferredDockercfgPath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetPreferredDockercfgPath">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ReadDockerConfigFile">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="DockerConfig"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HttpError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ReadUrl">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Header"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReadDockerConfigFileFromUrl">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Header"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="DockerConfig"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DockerConfigEntry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/fields">
      <types>
        <type name="Selector" type="interface">
          <method name="Matches">
            <paramsList>
              <type type="ident" def="Fields"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Empty">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="RequiresExactMatch">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Transform">
            <paramsList>
              <type type="ident" def="TransformFunc"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Selector"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="TransformFunc" type="func">
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="Fields" type="interface">
          <method name="Has">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="Set" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="Everything">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Selector"/>
          </resultsList>
        </function>
        <function name="Matches">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hasTerm"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Fields"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hasTerm"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="RequiresExactMatch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hasTerm"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Transform">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hasTerm"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="TransformFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Selector"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hasTerm"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Matches">
          <recvList>
            <type type="pointer">
              <type type="ident" def="notHasTerm"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Fields"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="notHasTerm"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="RequiresExactMatch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="notHasTerm"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Transform">
          <recvList>
            <type type="pointer">
              <type type="ident" def="notHasTerm"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="TransformFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Selector"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="notHasTerm"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Matches">
          <recvList>
            <type type="ident" def="andTerm"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Fields"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="ident" def="andTerm"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="RequiresExactMatch">
          <recvList>
            <type type="ident" def="andTerm"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Transform">
          <recvList>
            <type type="ident" def="andTerm"/>
          </recvList>
          <paramsList>
            <type type="ident" def="TransformFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Selector"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="andTerm"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SelectorFromSet">
          <recvList/>
          <paramsList>
            <type type="ident" def="Set"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Selector"/>
          </resultsList>
        </function>
        <function name="ParseSelector">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Selector"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseAndTransformSelector">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="TransformFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Selector"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="OneTermEqualSelector">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Selector"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Has">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="AsSelector">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Selector"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/api">
      <types>
        <type type="struct" name="Policy">
          <field type="selector" name="">
            <prefix value="api"/>
            <item value="TypeMeta"/>
          </field>
          <field type="slice" name="Predicates">
            <elmtype type="ident" def="PredicatePolicy"/>
          </field>
          <field type="slice" name="Priorities">
            <elmtype type="ident" def="PriorityPolicy"/>
          </field>
        </type>
        <type type="struct" name="PredicatePolicy">
          <field type="ident" def="string" name="Name"/>
          <field type="pointer" name="Argument">
            <type type="ident" def="PredicateArgument"/>
          </field>
        </type>
        <type type="struct" name="PriorityPolicy">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="Weight"/>
          <field type="pointer" name="Argument">
            <type type="ident" def="PriorityArgument"/>
          </field>
        </type>
        <type type="struct" name="PredicateArgument">
          <field type="pointer" name="ServiceAffinity">
            <type type="ident" def="ServiceAffinity"/>
          </field>
          <field type="pointer" name="LabelsPresence">
            <type type="ident" def="LabelsPresence"/>
          </field>
        </type>
        <type type="struct" name="PriorityArgument">
          <field type="pointer" name="ServiceAntiAffinity">
            <type type="ident" def="ServiceAntiAffinity"/>
          </field>
          <field type="pointer" name="LabelPreference">
            <type type="ident" def="LabelPreference"/>
          </field>
        </type>
        <type type="struct" name="ServiceAffinity">
          <field type="slice" name="Labels">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="LabelsPresence">
          <field type="slice" name="Labels">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="Presence"/>
        </type>
        <type type="struct" name="ServiceAntiAffinity">
          <field type="ident" def="string" name="Label"/>
        </type>
        <type type="struct" name="LabelPreference">
          <field type="ident" def="string" name="Label"/>
          <field type="ident" def="bool" name="Presence"/>
        </type>
      </types>
      <functions>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="Scheme"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/mount">
      <types>
        <type type="struct" name="NsenterMounter"/>
        <type type="struct" name="NsenterMounter"/>
        <type type="struct" name="Mounter"/>
        <type type="struct" name="Mounter"/>
        <type name="Interface" type="interface">
          <method name="Mount">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Unmount">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="List">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="MountPoint"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="IsMountPoint">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="MountPoint">
          <field type="ident" def="string" name="Device"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="string" name="Type"/>
          <field type="slice" name="Opts">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="Freq"/>
          <field type="ident" def="int" name="Pass"/>
        </type>
        <type type="struct" name="FakeMounter">
          <field type="slice" name="MountPoints">
            <elmtype type="ident" def="MountPoint"/>
          </field>
          <field type="slice" name="Log">
            <elmtype type="ident" def="FakeAction"/>
          </field>
        </type>
        <type type="struct" name="FakeAction">
          <field type="ident" def="string" name="Action"/>
          <field type="ident" def="string" name="Target"/>
          <field type="ident" def="string" name="Source"/>
          <field type="ident" def="string" name="FSType"/>
        </type>
      </types>
      <functions>
        <function name="Mount">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmount">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="MountPoint"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsMountPoint">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Mount">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmount">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="MountPoint"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsMountPoint">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Mount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mounter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mounter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mounter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="MountPoint"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsMountPoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mounter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Mount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mounter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mounter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="MountPoint"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsMountPoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mounter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Interface"/>
          </resultsList>
        </function>
        <function name="GetMountRefs">
          <recvList/>
          <paramsList>
            <type type="ident" def="Interface"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetDeviceNameFromMount">
          <recvList/>
          <paramsList>
            <type type="ident" def="Interface"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResetLog">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeMounter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Mount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeMounter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeMounter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeMounter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="MountPoint"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsMountPoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeMounter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="FakeActionMount"/>
        <name value="FakeActionUnmount"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/secret">
      <types/>
      <functions>
        <function name="ProbeVolumePlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secretPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeHost"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secretPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CanSupport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secretPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secretPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeOptions"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Builder"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secretPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Cleaner"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secretVolume"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUpAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secretVolume"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secretVolume"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TearDown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secretVolume"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDownAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secretVolume"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/network">
      <types>
        <type name="NetworkPlugin" type="interface">
          <method name="Init">
            <paramsList>
              <type type="ident" def="Host"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="SetUpPod">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="kubeletTypes"/>
                <item value="DockerID"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="TearDownPod">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="kubeletTypes"/>
                <item value="DockerID"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Host" type="interface">
          <method name="GetPodByName">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="GetKubeClient">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="client"/>
                <item value="Interface"/>
              </type>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewFakeHost">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="fakeNetworkHost"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPodByName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeNetworkHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetKubeClient">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeNetworkHost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
        <function name="InitNetworkPlugin">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="NetworkPlugin"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="Host"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="NetworkPlugin"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnescapePluginName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="noopNetworkPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Host"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="noopNetworkPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetUpPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="noopNetworkPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="kubeletTypes"/>
              <item value="DockerID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDownPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="noopNetworkPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="kubeletTypes"/>
              <item value="DockerID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="DefaultPluginName"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/auth/authorizer/abac">
      <types/>
      <functions>
        <function name="NewFromFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="policyList"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Authorize">
          <recvList>
            <type type="ident" def="policyList"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="authorizer"/>
              <item value="Attributes"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/errors/etcd">
      <types/>
      <functions>
        <function name="InterpretGetError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InterpretCreateError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InterpretUpdateError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InterpretDeleteError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/watch">
      <types>
        <type name="Interface" type="interface">
          <method name="Stop">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="ResultChan">
            <paramsList/>
            <resultsList>
              <type type="channel" dir="2">
                <type type="ident" def="Event"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="EventType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Event">
          <field type="ident" def="EventType" name="Type"/>
          <field type="selector" name="Object">
            <prefix value="runtime"/>
            <item value="Object"/>
          </field>
        </type>
        <type type="struct" name="FakeWatcher">
          <field type="channel" dir="3" name="result">
            <type type="ident" def="Event"/>
          </field>
          <field type="ident" def="bool" name="Stopped"/>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type name="FullChannelBehavior" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Broadcaster">
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="map" name="watchers">
            <keytype type="ident" def="int64"/>
            <valtype type="pointer">
              <type type="ident" def="broadcasterWatcher"/>
            </valtype>
          </field>
          <field type="ident" def="int64" name="nextWatcher"/>
          <field type="channel" dir="3" name="incoming">
            <type type="ident" def="Event"/>
          </field>
          <field type="ident" def="int" name="watchQueueLength"/>
          <field type="ident" def="FullChannelBehavior" name="fullChannelBehavior"/>
        </type>
        <type name="Decoder" type="interface">
          <method name="Decode">
            <paramsList/>
            <resultsList>
              <type type="ident" def="EventType"/>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Close">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="StreamWatcher">
          <field type="ident" def="Decoder" name="source"/>
          <field type="channel" dir="3" name="result">
            <type type="ident" def="Event"/>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="bool" name="stopped"/>
        </type>
        <type name="FilterFunc" type="func">
          <paramsList>
            <type type="ident" def="Event"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Event"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </type>
      </types>
      <functions>
        <function name="NewEmptyWatch">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Interface"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="ident" def="emptyWatch"/>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ResultChan">
          <recvList>
            <type type="ident" def="emptyWatch"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="ident" def="Event"/>
            </type>
          </resultsList>
        </function>
        <function name="NewFake">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FakeWatcher"/>
            </type>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeWatcher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ResultChan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeWatcher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="ident" def="Event"/>
            </type>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeWatcher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Modify">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeWatcher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeWatcher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeWatcher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Action">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeWatcher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="EventType"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewBroadcaster">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="FullChannelBehavior"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Broadcaster"/>
            </type>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Broadcaster"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Interface"/>
          </resultsList>
        </function>
        <function name="WatchWithPrefix">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Broadcaster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Event"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
          </resultsList>
        </function>
        <function name="Action">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Broadcaster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="EventType"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Shutdown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Broadcaster"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ResultChan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="broadcasterWatcher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="ident" def="Event"/>
            </type>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="broadcasterWatcher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewStreamWatcher">
          <recvList/>
          <paramsList>
            <type type="ident" def="Decoder"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="StreamWatcher"/>
            </type>
          </resultsList>
        </function>
        <function name="ResultChan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamWatcher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="ident" def="Event"/>
            </type>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamWatcher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Filter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Interface"/>
            <type type="ident" def="FilterFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
          </resultsList>
        </function>
        <function name="ResultChan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="filteredWatch"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="ident" def="Event"/>
            </type>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="filteredWatch"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="Added"/>
        <name value="Modified"/>
        <name value="Deleted"/>
        <name value="Error"/>
        <name value="WaitIfChannelFull"/>
        <name value="DropIfChannelFull"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubectl/cmd/util">
      <types>
        <type type="struct" name="Factory">
          <field type="pointer" name="clients">
            <type type="ident" def="clientCache"/>
          </field>
          <field type="pointer" name="flags">
            <type type="selector">
              <prefix value="pflag"/>
              <item value="FlagSet"/>
            </type>
          </field>
          <field type="map" name="generators">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="kubectl"/>
              <item value="Generator"/>
            </valtype>
          </field>
          <field type="func" name="Object">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapper"/>
              </type>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="ObjectTyper"/>
              </type>
            </resultsList>
          </field>
          <field type="func" name="Client">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="client"/>
                  <item value="Client"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="ClientConfig">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="client"/>
                  <item value="Config"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="RESTClient">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="meta"/>
                  <item value="RESTMapping"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="resource"/>
                <item value="RESTClient"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="Describer">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="meta"/>
                  <item value="RESTMapping"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="kubectl"/>
                <item value="Describer"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="Printer">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="meta"/>
                  <item value="RESTMapping"/>
                </type>
              </type>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="kubectl"/>
                <item value="ResourcePrinter"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="Resizer">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="meta"/>
                  <item value="RESTMapping"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="kubectl"/>
                <item value="Resizer"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="Reaper">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="meta"/>
                  <item value="RESTMapping"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="kubectl"/>
                <item value="Reaper"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="PodSelectorForResource">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="meta"/>
                  <item value="RESTMapping"/>
                </type>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="PortsForResource">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="meta"/>
                  <item value="RESTMapping"/>
                </type>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="Validator">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="validation"/>
                <item value="Schema"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="DefaultNamespace">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="Generator">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="kubectl"/>
                <item value="Generator"/>
              </type>
              <type type="ident" def="bool"/>
            </resultsList>
          </field>
        </type>
      </types>
      <functions>
        <function name="AddPrinterFlags">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="OutputVersion">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="PrinterForCommand">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="kubectl"/>
              <item value="ResourcePrinter"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckErr">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="MultilineError">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UsageError">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetFlagString">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFlagBool">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetFlagInt">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="GetFlagDuration">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="ReadConfigDataFromReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReadConfigData">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReadConfigDataFromLocation">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Merge">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFactory">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="clientcmd"/>
              <item value="ClientConfig"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Factory"/>
            </type>
          </resultsList>
        </function>
        <function name="BindFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Factory"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="clientSwaggerSchema"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DefaultClientConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="clientcmd"/>
              <item value="ClientConfig"/>
            </type>
          </resultsList>
        </function>
        <function name="PrintObject">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Factory"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PrinterForMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Factory"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapping"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="kubectl"/>
              <item value="ResourcePrinter"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ClientMapperForCommand">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Factory"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="resource"/>
              <item value="ClientMapper"/>
            </type>
          </resultsList>
        </function>
        <function name="ClientConfigForVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="clientCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ClientForVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="clientCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="FlagMatchBinaryVersion"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util">
      <types>
        <type type="struct" name="IntOrString">
          <field type="ident" def="IntstrKind" name="Kind"/>
          <field type="ident" def="int" name="IntVal"/>
          <field type="ident" def="string" name="StrVal"/>
        </type>
        <type name="IntstrKind" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Route">
          <field type="ident" def="string" name="Interface"/>
          <field type="selector" name="Destination">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="selector" name="Gateway">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
        </type>
        <type type="struct" name="Time">
          <field type="selector" name="">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
        <type name="RateLimiter" type="interface">
          <method name="CanAccept">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Accept">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Stop">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="StringFlag">
          <field type="ident" def="bool" name="provided"/>
          <field type="ident" def="string" name="value"/>
        </type>
        <type name="StringSet" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="empty"/>
        </type>
        <type type="struct" name="Runner">
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="slice" name="loopFuncs">
            <elmtype type="func">
              <paramsList>
                <type type="channel" dir="3">
                  <type type="struct" name=""/>
                </type>
              </paramsList>
              <resultsList/>
            </elmtype>
          </field>
          <field type="pointer" name="stop">
            <type type="channel" dir="3">
              <type type="struct" name=""/>
            </type>
          </field>
        </type>
        <type name="IP" type="selector">
          <prefix value="net"/>
          <item value="IP"/>
        </type>
        <type name="IPNet" type="selector">
          <prefix value="net"/>
          <item value="IPNet"/>
        </type>
        <type type="struct" name="GlogWriter"/>
        <type name="StringList" type="slice">
          <elmtype type="ident" def="string"/>
        </type>
        <type name="TestInterface" type="interface">
          <method name="Errorf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Logf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="LogInterface" type="interface">
          <method name="Logf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="FakeHandler">
          <field type="pointer" name="RequestReceived">
            <type type="selector">
              <prefix value="http"/>
              <item value="Request"/>
            </type>
          </field>
          <field type="ident" def="string" name="RequestBody"/>
          <field type="ident" def="int" name="StatusCode"/>
          <field type="ident" def="string" name="ResponseBody"/>
          <field type="ident" def="LogInterface" name="T"/>
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="int" name="requestCount"/>
          <field type="ident" def="bool" name="hasBeenChecked"/>
        </type>
        <type name="ConfigurationMap" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="string"/>
        </type>
        <type name="Clock" type="interface">
          <method name="Now">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </resultsList>
          </method>
          <method name="Since">
            <paramsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="RealClock"/>
        <type type="struct" name="FakeClock">
          <field type="selector" name="Time">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="BoolFlag">
          <field type="ident" def="bool" name="provided"/>
          <field type="ident" def="bool" name="value"/>
        </type>
      </types>
      <functions>
        <function name="IsValidLabelValue">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsQualifiedName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsDNS1123Label">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsDNS1123Subdomain">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsDNS952Label">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsCIdentifier">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsValidPortNum">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsValidIPv4">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewUUID">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
          </resultsList>
        </function>
        <function name="HandleCrash">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="HandleError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Forever">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Until">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewIntOrStringFromInt">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="IntOrString"/>
          </resultsList>
        </function>
        <function name="NewIntOrStringFromString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="IntOrString"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IntOrString"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IntOrString"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="IntOrString"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Fuzz">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IntOrString"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="fuzz"/>
              <item value="Continue"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CompileRegexps">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="regexp"/>
                  <item value="Regexp"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ApplyOomScoreAdj">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AllPtrFieldsNil">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SplitQualifiedName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="JoinQualifiedName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ChooseHostInterface">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InterfaceByName">
          <recvList>
            <type type="ident" def="networkInterface"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Addrs">
          <recvList>
            <type type="ident" def="networkInterface"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="net"/>
                <item value="Addr"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetClient">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewTime">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Time"/>
          </resultsList>
        </function>
        <function name="Date">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Month"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="time"/>
                <item value="Location"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Time"/>
          </resultsList>
        </function>
        <function name="Now">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Time"/>
          </resultsList>
        </function>
        <function name="IsZero">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Time"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Before">
          <recvList>
            <type type="ident" def="Time"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Time"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Unix">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Time"/>
          </resultsList>
        </function>
        <function name="Rfc3339Copy">
          <recvList>
            <type type="ident" def="Time"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Time"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Time"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Time"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Fuzz">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Time"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="fuzz"/>
              <item value="Continue"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewTokenBucketRateLimiter">
          <recvList/>
          <paramsList>
            <type type="ident" def="float32"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="RateLimiter"/>
          </resultsList>
        </function>
        <function name="NewFakeRateLimiter">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="RateLimiter"/>
          </resultsList>
        </function>
        <function name="CanAccept">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tickRateLimiter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Accept">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tickRateLimiter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tickRateLimiter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="CanAccept">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeRateLimiter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeRateLimiter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Accept">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeRateLimiter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExecuteTemplate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExecuteTemplateToString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Default">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringFlag"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="StringFlag"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="ident" def="StringFlag"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringFlag"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Provided">
          <recvList>
            <type type="ident" def="StringFlag"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringFlag"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewStringSet">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="StringSet"/>
          </resultsList>
        </function>
        <function name="KeySet">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Value"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="StringSet"/>
          </resultsList>
        </function>
        <function name="Insert">
          <recvList>
            <type type="ident" def="StringSet"/>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Delete">
          <recvList>
            <type type="ident" def="StringSet"/>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Has">
          <recvList>
            <type type="ident" def="StringSet"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasAll">
          <recvList>
            <type type="ident" def="StringSet"/>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasAny">
          <recvList>
            <type type="ident" def="StringSet"/>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Difference">
          <recvList>
            <type type="ident" def="StringSet"/>
          </recvList>
          <paramsList>
            <type type="ident" def="StringSet"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="StringSet"/>
          </resultsList>
        </function>
        <function name="Union">
          <recvList>
            <type type="ident" def="StringSet"/>
          </recvList>
          <paramsList>
            <type type="ident" def="StringSet"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="StringSet"/>
          </resultsList>
        </function>
        <function name="IsSuperset">
          <recvList>
            <type type="ident" def="StringSet"/>
          </recvList>
          <paramsList>
            <type type="ident" def="StringSet"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="ident" def="StringSet"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="PopAny">
          <recvList>
            <type type="ident" def="StringSet"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="StringSet"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="NewRunner">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="func">
                <paramsList>
                  <type type="channel" dir="3">
                    <type type="struct" name=""/>
                  </type>
                </paramsList>
                <resultsList/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Runner"/>
            </type>
          </resultsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Runner"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Runner"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="RunInResourceContainer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RunInResourceContainer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SplitPort">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="flagValueWrapper"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="flagValueWrapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="flagValueWrapper"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsBoolFlag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="flagValueWrapper"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="AddFlagSetToPFlagSet">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddAllFlagsToPFlags">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="AddPFlagSetToPFlagSet">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetHostname">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="IP"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IP"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="IPNet"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IPNet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="ident" def="GlogWriter"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InitLogs">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="FlushLogs">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewLogger">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="log"/>
                <item value="Logger"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringList"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsProbableEOF">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="DeepHashObject">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="hash"/>
              <item value="Hash"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WordSepNormalizeFunc">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="pflag"/>
              <item value="NormalizedName"/>
            </type>
          </resultsList>
        </function>
        <function name="InitFlags">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateRequestCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="TestInterface"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="TestInterface"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="EscapeQualifiedNameForDisk">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnescapeQualifiedNameForDisk">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="StringDiff">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ObjectDiff">
          <recvList/>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ObjectGoPrintDiff">
          <recvList/>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ObjectGoPrintSideBySide">
          <recvList/>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GenerateSelfSignedCert">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CertPoolFromFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="x509"/>
                <item value="CertPool"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfigurationMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfigurationMap"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Now">
          <recvList>
            <type type="ident" def="RealClock"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="Since">
          <recvList>
            <type type="ident" def="RealClock"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="Now">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeClock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="Since">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeClock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="Default">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BoolFlag"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="BoolFlag"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="ident" def="BoolFlag"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BoolFlag"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Provided">
          <recvList>
            <type type="ident" def="BoolFlag"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BoolFlag"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="LabelValueFmt"/>
        <name value="LabelValueMaxLength"/>
        <name value="QualifiedNameFmt"/>
        <name value="QualifiedNameMaxLength"/>
        <name value="DNS1123LabelFmt"/>
        <name value="DNS1123LabelMaxLength"/>
        <name value="DNS1123SubdomainFmt"/>
        <name value="DNS1123SubdomainMaxLength"/>
        <name value="DNS952LabelFmt"/>
        <name value="DNS952LabelMaxLength"/>
        <name value="CIdentifierFmt"/>
        <name value="ReallyCrash"/>
        <name value="PanicHandlers"/>
        <name value="ErrorHandlers"/>
        <name value="NeverStop"/>
        <name value="IntstrInt"/>
        <name value="IntstrString"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/client">
      <types>
        <type name="ServicesNamespacer" type="interface">
          <method name="Services">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="ServiceInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="ServiceInterface" type="interface">
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ServiceList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Service"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Service"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Service"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Service"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Service"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="SecretsNamespacer" type="interface">
          <method name="Secrets">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="SecretsInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="SecretsInterface" type="interface">
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Secret"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Secret"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Secret"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Secret"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="SecretList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Secret"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="RESTClient">
          <field type="pointer" name="baseURL">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
          <field type="ident" def="string" name="apiVersion"/>
          <field type="ident" def="bool" name="LegacyBehavior"/>
          <field type="selector" name="Codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="ident" def="HTTPClient" name="Client"/>
          <field type="selector" name="Timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="Throttle">
            <prefix value="util"/>
            <item value="RateLimiter"/>
          </field>
        </type>
        <type name="ResourceQuotasNamespacer" type="interface">
          <method name="ResourceQuotas">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="ResourceQuotaInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="ResourceQuotaInterface" type="interface">
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ResourceQuotaList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ResourceQuota"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ResourceQuota"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ResourceQuota"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ResourceQuota"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ResourceQuota"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateStatus">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ResourceQuota"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ResourceQuota"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="HTTPClient" type="interface">
          <method name="Do">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="RequestConstructionError">
          <field type="ident" def="error" name="Err"/>
        </type>
        <type type="struct" name="Request">
          <field type="ident" def="HTTPClient" name="client"/>
          <field type="ident" def="string" name="verb"/>
          <field type="pointer" name="baseURL">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
          <field type="selector" name="codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="ident" def="bool" name="namespaceInQuery"/>
          <field type="ident" def="bool" name="preserveResourceCase"/>
          <field type="ident" def="string" name="path"/>
          <field type="ident" def="string" name="subpath"/>
          <field type="selector" name="params">
            <prefix value="url"/>
            <item value="Values"/>
          </field>
          <field type="selector" name="headers">
            <prefix value="http"/>
            <item value="Header"/>
          </field>
          <field type="ident" def="string" name="namespace"/>
          <field type="ident" def="bool" name="namespaceSet"/>
          <field type="ident" def="string" name="resource"/>
          <field type="ident" def="string" name="resourceName"/>
          <field type="ident" def="string" name="subresource"/>
          <field type="selector" name="selector">
            <prefix value="labels"/>
            <item value="Selector"/>
          </field>
          <field type="selector" name="timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="apiVersion"/>
          <field type="ident" def="error" name="err"/>
          <field type="selector" name="body">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="pointer" name="req">
            <type type="selector">
              <prefix value="http"/>
              <item value="Request"/>
            </type>
          </field>
          <field type="pointer" name="resp">
            <type type="selector">
              <prefix value="http"/>
              <item value="Response"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Result">
          <field type="slice" name="body">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="bool" name="created"/>
          <field type="ident" def="error" name="err"/>
          <field type="selector" name="codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
        </type>
        <type name="ReplicationControllersNamespacer" type="interface">
          <method name="ReplicationControllers">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="ReplicationControllerInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="ReplicationControllerInterface" type="interface">
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationControllerList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="PodsNamespacer" type="interface">
          <method name="Pods">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="PodInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="PodInterface" type="interface">
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PodList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="DeleteOptions"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Bind">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Binding"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateStatus">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="PersistentVolumesInterface" type="interface">
          <method name="PersistentVolumes">
            <paramsList/>
            <resultsList>
              <type type="ident" def="PersistentVolumeInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="PersistentVolumeInterface" type="interface">
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolume"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolume"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolume"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolume"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolume"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateStatus">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolume"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolume"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="PersistentVolumeClaimsNamespacer" type="interface">
          <method name="PersistentVolumeClaims">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="PersistentVolumeClaimInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="PersistentVolumeClaimInterface" type="interface">
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeClaimList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeClaim"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeClaim"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeClaim"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeClaim"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeClaim"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateStatus">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeClaim"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeClaim"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="NodesInterface" type="interface">
          <method name="Nodes">
            <paramsList/>
            <resultsList>
              <type type="ident" def="NodeInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="NodeInterface" type="interface">
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Node"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Node"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Node"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="NodeList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Node"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Node"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateStatus">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Node"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Node"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="NamespacesInterface" type="interface">
          <method name="Namespaces">
            <paramsList/>
            <resultsList>
              <type type="ident" def="NamespaceInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="NamespaceInterface" type="interface">
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Namespace"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Namespace"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Namespace"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="NamespaceList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Namespace"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Namespace"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Finalize">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Namespace"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Namespace"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Status">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Namespace"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Namespace"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="LimitRangesNamespacer" type="interface">
          <method name="LimitRanges">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="LimitRangeInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="LimitRangeInterface" type="interface">
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="LimitRangeList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="LimitRange"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="LimitRange"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="LimitRange"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="LimitRange"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="LimitRange"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="KubeletClient" type="interface"/>
        <type name="KubeletHealthChecker" type="interface">
          <method name="HealthCheck">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="probe"/>
                <item value="Result"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="PodInfoGetter" type="interface">
          <method name="GetPodStatus">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="PodStatusResult"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ConnectionInfoGetter" type="interface">
          <method name="GetConnectionInfo">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="uint"/>
              <type type="selector">
                <prefix value="http"/>
                <item value="RoundTripper"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="HTTPKubeletClient">
          <field type="pointer" name="Client">
            <type type="selector">
              <prefix value="http"/>
              <item value="Client"/>
            </type>
          </field>
          <field type="ident" def="uint" name="Port"/>
          <field type="ident" def="bool" name="EnableHttps"/>
        </type>
        <type type="struct" name="FakeKubeletClient"/>
        <type type="struct" name="Config">
          <field type="ident" def="string" name="Host"/>
          <field type="ident" def="string" name="Prefix"/>
          <field type="ident" def="string" name="Version"/>
          <field type="ident" def="bool" name="LegacyBehavior"/>
          <field type="selector" name="Codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="ident" def="string" name="Username"/>
          <field type="ident" def="string" name="Password"/>
          <field type="ident" def="string" name="BearerToken"/>
          <field type="ident" def="TLSClientConfig" name=""/>
          <field type="ident" def="bool" name="Insecure"/>
          <field type="ident" def="string" name="UserAgent"/>
          <field type="selector" name="Transport">
            <prefix value="http"/>
            <item value="RoundTripper"/>
          </field>
          <field type="func" name="WrapTransport">
            <paramsList>
              <type type="selector">
                <prefix value="http"/>
                <item value="RoundTripper"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="http"/>
                <item value="RoundTripper"/>
              </type>
            </resultsList>
          </field>
          <field type="ident" def="float32" name="QPS"/>
          <field type="ident" def="int" name="Burst"/>
        </type>
        <type type="struct" name="KubeletConfig">
          <field type="ident" def="uint" name="Port"/>
          <field type="ident" def="bool" name="EnableHttps"/>
          <field type="ident" def="TLSClientConfig" name=""/>
          <field type="selector" name="HTTPTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="TLSClientConfig">
          <field type="ident" def="string" name="CertFile"/>
          <field type="ident" def="string" name="KeyFile"/>
          <field type="ident" def="string" name="CAFile"/>
          <field type="slice" name="CertData">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="KeyData">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="CAData">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="FlagSet" type="interface">
          <method name="StringVar">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="string"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="BoolVar">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="bool"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="UintVar">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="uint"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="uint"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="DurationVar">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="time"/>
                  <item value="Duration"/>
                </type>
              </type>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Float32Var">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="float32"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="float32"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="IntVar">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="int"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="int"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="HTTPClientFunc" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="FakeRESTClient">
          <field type="ident" def="HTTPClient" name="Client"/>
          <field type="selector" name="Codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="ident" def="bool" name="Legacy"/>
          <field type="pointer" name="Req">
            <type type="selector">
              <prefix value="http"/>
              <item value="Request"/>
            </type>
          </field>
          <field type="pointer" name="Resp">
            <type type="selector">
              <prefix value="http"/>
              <item value="Response"/>
            </type>
          </field>
          <field type="ident" def="error" name="Err"/>
        </type>
        <type name="EventNamespacer" type="interface">
          <method name="Events">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="EventInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="EventInterface" type="interface">
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Event"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Event"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Event"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Event"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="EventList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Event"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Search">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="EventList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetFieldSelector">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="string"/>
              </type>
              <type type="pointer">
                <type type="ident" def="string"/>
              </type>
              <type type="pointer">
                <type type="ident" def="string"/>
              </type>
              <type type="pointer">
                <type type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="EndpointsNamespacer" type="interface">
          <method name="Endpoints">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="EndpointsInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="EndpointsInterface" type="interface">
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Endpoints"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Endpoints"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="EndpointsList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Endpoints"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Endpoints"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Endpoints"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ContainerInfoGetter" type="interface">
          <method name="GetContainerInfo">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfoRequest"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfo"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetRootInfo">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfoRequest"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="ContainerInfo"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetMachineInfo">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="cadvisorApi"/>
                  <item value="MachineInfo"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="HTTPContainerInfoGetter">
          <field type="pointer" name="Client">
            <type type="selector">
              <prefix value="http"/>
              <item value="Client"/>
            </type>
          </field>
          <field type="ident" def="int" name="Port"/>
        </type>
        <type name="ComponentStatusesInterface" type="interface">
          <method name="ComponentStatuses">
            <paramsList/>
            <resultsList>
              <type type="ident" def="ComponentStatusInterface"/>
            </resultsList>
          </method>
        </type>
        <type name="ComponentStatusInterface" type="interface">
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ComponentStatusList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ComponentStatus"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Interface" type="interface"/>
        <type name="VersionInterface" type="interface">
          <method name="ServerVersion">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="version"/>
                  <item value="Info"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ServerAPIVersions">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="APIVersions"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="APIStatus" type="interface">
          <method name="Status">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Status"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Client">
          <field type="pointer" name="">
            <type type="ident" def="RESTClient"/>
          </field>
        </type>
        <type name="ComponentValidatorInterface" type="interface">
          <method name="ValidateComponents">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ComponentStatusList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewUserAgentRoundTripper">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
          </resultsList>
        </function>
        <function name="RoundTrip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="userAgentRoundTripper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewBasicAuthRoundTripper">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
          </resultsList>
        </function>
        <function name="RoundTrip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="basicAuthRoundTripper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewBearerAuthRoundTripper">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
          </resultsList>
        </function>
        <function name="RoundTrip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="bearerAuthRoundTripper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TLSConfigFor">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tls"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadTLSFiles">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewClientCertTLSConfig">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tls"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewTLSConfig">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tls"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewUnsafeTLSConfig">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tls"/>
                <item value="Config"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="services"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ServiceList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="services"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="services"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="services"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="services"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="services"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secrets"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secrets"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="SecretList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secrets"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secrets"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secrets"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="secrets"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewRESTClient">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Codec"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="float32"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RESTClient"/>
            </type>
          </resultsList>
        </function>
        <function name="Verb">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RESTClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Post">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RESTClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RESTClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Patch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RESTClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="PatchType"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RESTClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RESTClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="APIVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RESTClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="resourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuotaList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="resourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="resourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="resourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="resourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="resourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="resourceQuotas"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestConstructionError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewRequest">
          <recvList/>
          <paramsList>
            <type type="ident" def="HTTPClient"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Codec"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Prefix">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Suffix">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Resource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="SubResource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Namespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="NamespaceIfScoped">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="AbsPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="RequestURI">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="FieldsSelectorParam">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="LabelsSelectorParam">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="UintParam">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Param">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="SetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Timeout">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Body">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="URL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stream">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Upgrade">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="tls"/>
                    <item value="Config"/>
                  </type>
                </type>
              </paramsList>
              <resultsList>
                <type type="selector">
                  <prefix value="httpstream"/>
                  <item value="UpgradeRoundTripper"/>
                </type>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="httpstream"/>
              <item value="Connection"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Result"/>
          </resultsList>
        </function>
        <function name="DoRaw">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Raw">
          <recvList>
            <type type="ident" def="Result"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="ident" def="Result"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Into">
          <recvList>
            <type type="ident" def="Result"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WasCreated">
          <recvList>
            <type type="ident" def="Result"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Result"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="Result"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="replicationControllers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationControllerList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="replicationControllers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="replicationControllers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="replicationControllers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="replicationControllers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="replicationControllers"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="DeleteOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Bind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Binding"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pods"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaimList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="persistentVolumeClaims"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nodes"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="namespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="namespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NamespaceList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="namespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Finalize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="namespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="namespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="namespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="namespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="namespaces"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="limitRanges"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRangeList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="limitRanges"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="limitRanges"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="limitRanges"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="limitRanges"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="limitRanges"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewKubeletClient">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="KubeletConfig"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="KubeletClient"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetConnectionInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPKubeletClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPodStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPKubeletClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodStatusResult"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HealthCheck">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPKubeletClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="probe"/>
              <item value="Result"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPodStatus">
          <recvList>
            <type type="ident" def="FakeKubeletClient"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodStatusResult"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HealthCheck">
          <recvList>
            <type type="ident" def="FakeKubeletClient"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="probe"/>
              <item value="Result"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetConnectionInfo">
          <recvList>
            <type type="ident" def="FakeKubeletClient"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MatchesServerVersion">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewOrDie">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </resultsList>
        </function>
        <function name="SetKubernetesDefaults">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RESTClientFor">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RESTClient"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TransportFor">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HTTPWrappersForConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DefaultServerURL">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsConfigTransportTLS">
          <recvList/>
          <paramsList>
            <type type="ident" def="Config"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="DefaultKubernetesUserAgent">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="BindClientConfigFlags">
          <recvList/>
          <paramsList>
            <type type="ident" def="FlagSet"/>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="BindKubeletClientConfigFlags">
          <recvList/>
          <paramsList>
            <type type="ident" def="FlagSet"/>
            <type type="pointer">
              <type type="ident" def="KubeletConfig"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Do">
          <recvList>
            <type type="ident" def="HTTPClientFunc"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRESTClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRESTClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Post">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRESTClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRESTClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </resultsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRESTClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="events"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Event"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Event"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="events"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Event"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Event"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="events"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="EventList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="events"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Event"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="events"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Search">
          <recvList>
            <type type="pointer">
              <type type="ident" def="events"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="EventList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="events"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetFieldSelector">
          <recvList>
            <type type="pointer">
              <type type="ident" def="events"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="endpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="endpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="EndpointsList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="endpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="endpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="endpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="endpoints"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMachineInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPContainerInfoGetter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="MachineInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetContainerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPContainerInfoGetter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetRootInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HTTPContainerInfoGetter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfoRequest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cadvisorApi"/>
                <item value="ContainerInfo"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ControllerHasDesiredReplicas">
          <recvList/>
          <paramsList>
            <type type="ident" def="Interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="wait"/>
              <item value="ConditionFunc"/>
            </type>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="componentStatuses"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ComponentStatusList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="componentStatuses"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ComponentStatus"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReplicationControllers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ReplicationControllerInterface"/>
          </resultsList>
        </function>
        <function name="Nodes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="NodeInterface"/>
          </resultsList>
        </function>
        <function name="Events">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="EventInterface"/>
          </resultsList>
        </function>
        <function name="Endpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="EndpointsInterface"/>
          </resultsList>
        </function>
        <function name="Pods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="PodInterface"/>
          </resultsList>
        </function>
        <function name="Services">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ServiceInterface"/>
          </resultsList>
        </function>
        <function name="LimitRanges">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="LimitRangeInterface"/>
          </resultsList>
        </function>
        <function name="ResourceQuotas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ResourceQuotaInterface"/>
          </resultsList>
        </function>
        <function name="Secrets">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="SecretsInterface"/>
          </resultsList>
        </function>
        <function name="Namespaces">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="NamespaceInterface"/>
          </resultsList>
        </function>
        <function name="PersistentVolumes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="PersistentVolumeInterface"/>
          </resultsList>
        </function>
        <function name="PersistentVolumeClaims">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="PersistentVolumeClaimInterface"/>
          </resultsList>
        </function>
        <function name="ComponentStatuses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ComponentStatusInterface"/>
          </resultsList>
        </function>
        <function name="ServerVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="version"/>
                <item value="Info"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServerAPIVersions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="APIVersions"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ValidateComponents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ComponentStatusList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsTimeout">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="NodeUnschedulable"/>
        <name value="ObjectNameField"/>
        <name value="PodHost"/>
        <name value="SecretType"/>
        <name value="ErrPodInfoNotAvailable"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/metrics">
      <types/>
      <functions>
        <function name="Register">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="SinceInMicroseconds">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="E2eSchedulingLatency"/>
        <name value="SchedulingAlgorithmLatency"/>
        <name value="BindingLatency"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/testapi">
      <types/>
      <functions>
        <function name="Version">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Codec">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Codec"/>
            </type>
          </resultsList>
        </function>
        <function name="Converter">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="ObjectConvertor"/>
            </type>
          </resultsList>
        </function>
        <function name="MetadataAccessor">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="meta"/>
              <item value="MetadataAccessor"/>
            </type>
          </resultsList>
        </function>
        <function name="SelfLink">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ResourcePathWithPrefix">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ResourcePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ResourcePathWithNamespaceQuery">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ResourcePathWithPrefixAndNamespaceQuery">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/envvars">
      <types/>
      <functions>
        <function name="FromServices">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ServiceList"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="EnvVar"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/client/clientcmd/api/v1">
      <types>
        <type type="struct" name="Config">
          <field type="selector" name="">
            <prefix value="v1beta3"/>
            <item value="TypeMeta"/>
          </field>
          <field type="ident" def="Preferences" name="Preferences"/>
          <field type="slice" name="Clusters">
            <elmtype type="ident" def="NamedCluster"/>
          </field>
          <field type="slice" name="AuthInfos">
            <elmtype type="ident" def="NamedAuthInfo"/>
          </field>
          <field type="slice" name="Contexts">
            <elmtype type="ident" def="NamedContext"/>
          </field>
          <field type="ident" def="string" name="CurrentContext"/>
          <field type="slice" name="Extensions">
            <elmtype type="ident" def="NamedExtension"/>
          </field>
        </type>
        <type type="struct" name="Preferences">
          <field type="ident" def="bool" name="Colors"/>
          <field type="slice" name="Extensions">
            <elmtype type="ident" def="NamedExtension"/>
          </field>
        </type>
        <type type="struct" name="Cluster">
          <field type="ident" def="string" name="Server"/>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="bool" name="InsecureSkipTLSVerify"/>
          <field type="ident" def="string" name="CertificateAuthority"/>
          <field type="slice" name="CertificateAuthorityData">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Extensions">
            <elmtype type="ident" def="NamedExtension"/>
          </field>
        </type>
        <type type="struct" name="AuthInfo">
          <field type="ident" def="string" name="AuthPath"/>
          <field type="ident" def="string" name="ClientCertificate"/>
          <field type="slice" name="ClientCertificateData">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="string" name="ClientKey"/>
          <field type="slice" name="ClientKeyData">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="string" name="Token"/>
          <field type="ident" def="string" name="Username"/>
          <field type="ident" def="string" name="Password"/>
          <field type="slice" name="Extensions">
            <elmtype type="ident" def="NamedExtension"/>
          </field>
        </type>
        <type type="struct" name="Context">
          <field type="ident" def="string" name="Cluster"/>
          <field type="ident" def="string" name="AuthInfo"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="slice" name="Extensions">
            <elmtype type="ident" def="NamedExtension"/>
          </field>
        </type>
        <type type="struct" name="NamedCluster">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="Cluster" name="Cluster"/>
        </type>
        <type type="struct" name="NamedContext">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="Context" name="Context"/>
        </type>
        <type type="struct" name="NamedAuthInfo">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="AuthInfo" name="AuthInfo"/>
        </type>
        <type type="struct" name="NamedExtension">
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="Extension">
            <prefix value="runtime"/>
            <item value="RawExtension"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="Codec"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/token/tokenfile">
      <types>
        <type type="struct" name="TokenAuthenticator">
          <field type="map" name="tokens">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="user"/>
                <item value="DefaultInfo"/>
              </type>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewCSV">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TokenAuthenticator"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AuthenticateToken">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TokenAuthenticator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/runtime">
      <types>
        <type type="struct" name="TypeMeta">
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="Kind"/>
        </type>
        <type type="struct" name="PluginBase">
          <field type="ident" def="string" name="Kind"/>
        </type>
        <type type="struct" name="EmbeddedObject">
          <field type="ident" def="Object" name=""/>
        </type>
        <type type="struct" name="RawExtension">
          <field type="slice" name="RawJSON">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Unknown">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="RawJSON">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Unstructured">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="map" name="Object">
            <keytype type="ident" def="string"/>
            <valtype type="interface"/>
          </field>
        </type>
        <type type="struct" name="Scheme">
          <field type="pointer" name="raw">
            <type type="selector">
              <prefix value="conversion"/>
              <item value="Scheme"/>
            </type>
          </field>
          <field type="map" name="fieldLabelConversionFuncs">
            <keytype type="ident" def="string"/>
            <valtype type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="FieldLabelConversionFunc"/>
            </valtype>
          </field>
        </type>
        <type name="FieldLabelConversionFunc" type="func">
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="ObjectScheme" type="interface"/>
        <type name="ObjectCodec" type="interface"/>
        <type name="Decoder" type="interface">
          <method name="Decode">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Object"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DecodeInto">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="Object"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Encoder" type="interface">
          <method name="Encode">
            <paramsList>
              <type type="ident" def="Object"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Codec" type="interface"/>
        <type name="ObjectCopier" type="interface">
          <method name="Copy">
            <paramsList>
              <type type="ident" def="Object"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Object"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ObjectEncoder" type="interface">
          <method name="EncodeToVersion">
            <paramsList>
              <type type="ident" def="Object"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ObjectConvertor" type="interface">
          <method name="Convert">
            <paramsList>
              <type type="interface"/>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ConvertToVersion">
            <paramsList>
              <type type="ident" def="Object"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Object"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ConvertFieldLabel">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ObjectTyper" type="interface">
          <method name="DataVersionAndKind">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ObjectVersionAndKind">
            <paramsList>
              <type type="ident" def="Object"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Recognizes">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type name="ObjectCreater" type="interface">
          <method name="New">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Object"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ObjectDecoder" type="interface">
          <method name="DataVersionAndKind">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Recognizes">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type name="ResourceVersioner" type="interface">
          <method name="SetResourceVersion">
            <paramsList>
              <type type="ident" def="Object"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ResourceVersion">
            <paramsList>
              <type type="ident" def="Object"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="SelfLinker" type="interface">
          <method name="SetSelfLink">
            <paramsList>
              <type type="ident" def="Object"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SelfLink">
            <paramsList>
              <type type="ident" def="Object"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Name">
            <paramsList>
              <type type="ident" def="Object"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Namespace">
            <paramsList>
              <type type="ident" def="Object"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Object" type="interface">
          <method name="IsAnAPIObject">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="MultiObjectTyper" type="slice">
          <elmtype type="ident" def="ObjectTyper"/>
        </type>
      </types>
      <functions>
        <function name="Recognizes">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="ident" def="unstructuredJSONScheme"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Object"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeInto">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DataVersionAndKind">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Raw">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="conversion"/>
                <item value="Scheme"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewScheme">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </resultsList>
        </function>
        <function name="AddKnownTypes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddKnownTypeWithName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="KnownTypes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="selector">
                <prefix value="reflect"/>
                <item value="Type"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="DataVersionAndKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ObjectVersionAndKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Recognizes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Object"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Log">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="conversion"/>
              <item value="DebugLogger"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddConversionFuncs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddGeneratedConversionFuncs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddFieldLabelConversionFunc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="FieldLabelConversionFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddStructFieldConversion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddDefaultingFuncs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Convert">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ConvertFieldLabel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ConvertToVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Object"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeToVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Object"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeInto">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Copy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Object"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CopyOrDie">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Object"/>
          </resultsList>
        </function>
        <function name="IsListType">
          <recvList/>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetItemsPtr">
          <recvList/>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExtractList">
          <recvList/>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetList">
          <recvList/>
          <paramsList>
            <type type="ident" def="Object"/>
            <type type="slice">
              <elmtype type="ident" def="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FieldPtr">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Value"/>
            </type>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeList">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Object"/>
            </type>
            <type type="ellipsis">
              <type type="ident" def="ObjectDecoder"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="error"/>
            </type>
          </resultsList>
        </function>
        <function name="DataVersionAndKind">
          <recvList>
            <type type="ident" def="MultiObjectTyper"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ObjectVersionAndKind">
          <recvList>
            <type type="ident" def="MultiObjectTyper"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Recognizes">
          <recvList>
            <type type="ident" def="MultiObjectTyper"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RawExtension"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="RawExtension"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsNotRegisteredError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsMissingKind">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsMissingVersion">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="JSONKeyMapper">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="StructTag"/>
            </type>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="StructTag"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CodecFor">
          <recvList/>
          <paramsList>
            <type type="ident" def="ObjectCodec"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Codec"/>
          </resultsList>
        </function>
        <function name="YAMLDecoder">
          <recvList/>
          <paramsList>
            <type type="ident" def="Codec"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Codec"/>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="ident" def="yamlCodec"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Object"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeInto">
          <recvList>
            <type type="ident" def="yamlCodec"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeOrDie">
          <recvList/>
          <paramsList>
            <type type="ident" def="Codec"/>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Encode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="codecWrapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="UnstructuredJSONScheme"/>
        <name value="DefaultStringConversions"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/testing">
      <types/>
      <functions>
        <function name="FuzzerFor">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="rand"/>
              <item value="Source"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="fuzz"/>
                <item value="Fuzzer"/>
              </type>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/endpoint/etcd">
      <types>
        <type type="struct" name="REST">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/types">
      <types>
        <type name="UID" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NamespacedName">
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="Name"/>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="NamespacedName"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/generic/etcd">
      <types>
        <type type="struct" name="Etcd">
          <field type="func" name="NewFunc">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </resultsList>
          </field>
          <field type="func" name="NewListFunc">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </resultsList>
          </field>
          <field type="ident" def="string" name="EndpointName"/>
          <field type="func" name="KeyRootFunc">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </field>
          <field type="func" name="KeyFunc">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="ObjectNameFunc">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="TTLFunc">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="uint64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="PredicateFunc">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="generic"/>
                <item value="Matcher"/>
              </type>
            </resultsList>
          </field>
          <field type="selector" name="Decorator">
            <prefix value="rest"/>
            <item value="ObjectFunc"/>
          </field>
          <field type="selector" name="CreateStrategy">
            <prefix value="rest"/>
            <item value="RESTCreateStrategy"/>
          </field>
          <field type="selector" name="AfterCreate">
            <prefix value="rest"/>
            <item value="ObjectFunc"/>
          </field>
          <field type="selector" name="UpdateStrategy">
            <prefix value="rest"/>
            <item value="RESTUpdateStrategy"/>
          </field>
          <field type="selector" name="AfterUpdate">
            <prefix value="rest"/>
            <item value="ObjectFunc"/>
          </field>
          <field type="selector" name="DeleteStrategy">
            <prefix value="rest"/>
            <item value="RESTDeleteStrategy"/>
          </field>
          <field type="selector" name="AfterDelete">
            <prefix value="rest"/>
            <item value="ObjectFunc"/>
          </field>
          <field type="ident" def="bool" name="ReturnDeletedObject"/>
          <field type="selector" name="Helper">
            <prefix value="tools"/>
            <item value="EtcdHelper"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NamespaceKeyRootFunc">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NamespaceKeyFunc">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Etcd"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="NewList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Etcd"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Etcd"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListPredicate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Etcd"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateWithName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Etcd"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Etcd"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateWithName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Etcd"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Etcd"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Etcd"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Etcd"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="DeleteOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Etcd"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchPredicate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Etcd"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volume">
      <types>
        <type name="Volume" type="interface">
          <method name="GetPath">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="Builder" type="interface">
          <method name="SetUp">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetUpAt">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Cleaner" type="interface">
          <method name="TearDown">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="TearDownAt">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="FakeVolumePlugin">
          <field type="ident" def="string" name="PluginName"/>
          <field type="ident" def="VolumeHost" name="Host"/>
        </type>
        <type type="struct" name="FakeVolume">
          <field type="selector" name="PodUID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="ident" def="string" name="VolName"/>
          <field type="pointer" name="Plugin">
            <type type="ident" def="FakeVolumePlugin"/>
          </field>
        </type>
        <type type="struct" name="VolumeOptions">
          <field type="ident" def="string" name="RootContext"/>
        </type>
        <type name="VolumePlugin" type="interface">
          <method name="Init">
            <paramsList>
              <type type="ident" def="VolumeHost"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="CanSupport">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Spec"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="NewBuilder">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Spec"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ObjectReference"/>
                </type>
              </type>
              <type type="ident" def="VolumeOptions"/>
              <type type="selector">
                <prefix value="mount"/>
                <item value="Interface"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Builder"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="NewCleaner">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </type>
              <type type="selector">
                <prefix value="mount"/>
                <item value="Interface"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Cleaner"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="PersistentVolumePlugin" type="interface">
          <method name="GetAccessModes">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="api"/>
                  <item value="AccessModeType"/>
                </elmtype>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="VolumeHost" type="interface">
          <method name="GetPluginDir">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GetPodVolumeDir">
            <paramsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GetPodPluginDir">
            <paramsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GetKubeClient">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="client"/>
                <item value="Interface"/>
              </type>
            </resultsList>
          </method>
          <method name="NewWrapperBuilder">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Spec"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ObjectReference"/>
                </type>
              </type>
              <type type="ident" def="VolumeOptions"/>
              <type type="selector">
                <prefix value="mount"/>
                <item value="Interface"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Builder"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="NewWrapperCleaner">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Spec"/>
              </type>
              <type type="selector">
                <prefix value="types"/>
                <item value="UID"/>
              </type>
              <type type="selector">
                <prefix value="mount"/>
                <item value="Interface"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Cleaner"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="VolumePluginMgr">
          <field type="selector" name="mutex">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="map" name="plugins">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="VolumePlugin"/>
          </field>
        </type>
        <type type="struct" name="Spec">
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="VolumeSource">
            <prefix value="api"/>
            <item value="VolumeSource"/>
          </field>
          <field type="selector" name="PersistentVolumeSource">
            <prefix value="api"/>
            <item value="PersistentVolumeSource"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="RenameDirectory">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetAccessModesAsString">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="AccessModeType"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewFakeVolumeHost">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="VolumePlugin"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="fakeVolumeHost"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPluginDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeVolumeHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPodVolumeDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeVolumeHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPodPluginDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeVolumeHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetKubeClient">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeVolumeHost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
        <function name="NewWrapperBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeVolumeHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Spec"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="ident" def="VolumeOptions"/>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Builder"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewWrapperCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeVolumeHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Spec"/>
            </type>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Cleaner"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeVolumePlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="VolumeHost"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeVolumePlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CanSupport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeVolumePlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Spec"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeVolumePlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Spec"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="ident" def="VolumeOptions"/>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Builder"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeVolumePlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Cleaner"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetAccessModes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeVolumePlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="AccessModeType"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="SetUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeVolume"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUpAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeVolume"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeVolume"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TearDown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeVolume"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDownAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeVolume"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSpecFromVolume">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Volume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Spec"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSpecFromPersistentVolume">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Spec"/>
            </type>
          </resultsList>
        </function>
        <function name="InitPlugins">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VolumePluginMgr"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="VolumePlugin"/>
            </type>
            <type type="ident" def="VolumeHost"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FindPluginBySpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VolumePluginMgr"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Spec"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="VolumePlugin"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FindPluginByName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VolumePluginMgr"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="VolumePlugin"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FindPersistentPluginByName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VolumePluginMgr"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="PersistentVolumePlugin"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api">
      <types>
        <type type="struct" name="APIVersions">
          <field type="slice" name="Versions">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="RootPaths">
          <field type="slice" name="Paths">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="TypeMeta">
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="APIVersion"/>
        </type>
        <type type="struct" name="ListMeta">
          <field type="ident" def="string" name="SelfLink"/>
          <field type="ident" def="string" name="ResourceVersion"/>
        </type>
        <type type="struct" name="ObjectMeta">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="GenerateName"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="SelfLink"/>
          <field type="selector" name="UID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="ident" def="string" name="ResourceVersion"/>
          <field type="selector" name="CreationTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="pointer" name="DeletionTimestamp">
            <type type="selector">
              <prefix value="util"/>
              <item value="Time"/>
            </type>
          </field>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Annotations">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Volume">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="VolumeSource" name=""/>
        </type>
        <type type="struct" name="VolumeSource">
          <field type="pointer" name="HostPath">
            <type type="ident" def="HostPathVolumeSource"/>
          </field>
          <field type="pointer" name="EmptyDir">
            <type type="ident" def="EmptyDirVolumeSource"/>
          </field>
          <field type="pointer" name="GCEPersistentDisk">
            <type type="ident" def="GCEPersistentDiskVolumeSource"/>
          </field>
          <field type="pointer" name="AWSElasticBlockStore">
            <type type="ident" def="AWSElasticBlockStoreVolumeSource"/>
          </field>
          <field type="pointer" name="GitRepo">
            <type type="ident" def="GitRepoVolumeSource"/>
          </field>
          <field type="pointer" name="Secret">
            <type type="ident" def="SecretVolumeSource"/>
          </field>
          <field type="pointer" name="NFS">
            <type type="ident" def="NFSVolumeSource"/>
          </field>
          <field type="pointer" name="ISCSI">
            <type type="ident" def="ISCSIVolumeSource"/>
          </field>
          <field type="pointer" name="Glusterfs">
            <type type="ident" def="GlusterfsVolumeSource"/>
          </field>
          <field type="pointer" name="PersistentVolumeClaimVolumeSource">
            <type type="ident" def="PersistentVolumeClaimVolumeSource"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeSource">
          <field type="pointer" name="GCEPersistentDisk">
            <type type="ident" def="GCEPersistentDiskVolumeSource"/>
          </field>
          <field type="pointer" name="AWSElasticBlockStore">
            <type type="ident" def="AWSElasticBlockStoreVolumeSource"/>
          </field>
          <field type="pointer" name="HostPath">
            <type type="ident" def="HostPathVolumeSource"/>
          </field>
          <field type="pointer" name="Glusterfs">
            <type type="ident" def="GlusterfsVolumeSource"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaimVolumeSource">
          <field type="ident" def="string" name="ClaimName"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="PersistentVolume">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PersistentVolumeSpec" name="Spec"/>
          <field type="ident" def="PersistentVolumeStatus" name="Status"/>
        </type>
        <type type="struct" name="PersistentVolumeSpec">
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="ident" def="PersistentVolumeSource" name=""/>
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="pointer" name="ClaimRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeStatus">
          <field type="ident" def="PersistentVolumePhase" name="Phase"/>
        </type>
        <type type="struct" name="PersistentVolumeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PersistentVolume"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaim">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PersistentVolumeClaimSpec" name="Spec"/>
          <field type="ident" def="PersistentVolumeClaimStatus" name="Status"/>
        </type>
        <type type="struct" name="PersistentVolumeClaimList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PersistentVolumeClaim"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaimSpec">
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="ident" def="ResourceRequirements" name="Resources"/>
        </type>
        <type type="struct" name="PersistentVolumeClaimStatus">
          <field type="ident" def="PersistentVolumeClaimPhase" name="Phase"/>
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="pointer" name="VolumeRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type name="AccessModeType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PersistentVolumePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PersistentVolumeClaimPhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="HostPathVolumeSource">
          <field type="ident" def="string" name="Path"/>
        </type>
        <type type="struct" name="EmptyDirVolumeSource">
          <field type="ident" def="StorageType" name="Medium"/>
        </type>
        <type name="StorageType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="Protocol" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="GCEPersistentDiskVolumeSource">
          <field type="ident" def="string" name="PDName"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="int" name="Partition"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="ISCSIVolumeSource">
          <field type="ident" def="string" name="TargetPortal"/>
          <field type="ident" def="string" name="IQN"/>
          <field type="ident" def="int" name="Lun"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="AWSElasticBlockStoreVolumeSource">
          <field type="ident" def="string" name="VolumeID"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="int" name="Partition"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="GitRepoVolumeSource">
          <field type="ident" def="string" name="Repository"/>
          <field type="ident" def="string" name="Revision"/>
        </type>
        <type type="struct" name="SecretVolumeSource">
          <field type="ident" def="string" name="SecretName"/>
        </type>
        <type type="struct" name="NFSVolumeSource">
          <field type="ident" def="string" name="Server"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="GlusterfsVolumeSource">
          <field type="ident" def="string" name="EndpointsName"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="ContainerPort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="HostPort"/>
          <field type="ident" def="int" name="ContainerPort"/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="ident" def="string" name="HostIP"/>
        </type>
        <type type="struct" name="VolumeMount">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="bool" name="ReadOnly"/>
          <field type="ident" def="string" name="MountPath"/>
        </type>
        <type type="struct" name="EnvVar">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Value"/>
          <field type="pointer" name="ValueFrom">
            <type type="ident" def="EnvVarSource"/>
          </field>
        </type>
        <type type="struct" name="EnvVarSource">
          <field type="pointer" name="FieldRef">
            <type type="ident" def="ObjectFieldSelector"/>
          </field>
        </type>
        <type type="struct" name="ObjectFieldSelector">
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="FieldPath"/>
        </type>
        <type type="struct" name="HTTPGetAction">
          <field type="ident" def="string" name="Path"/>
          <field type="selector" name="Port">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
          <field type="ident" def="string" name="Host"/>
        </type>
        <type type="struct" name="TCPSocketAction">
          <field type="selector" name="Port">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
        </type>
        <type type="struct" name="ExecAction">
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Probe">
          <field type="ident" def="Handler" name=""/>
          <field type="ident" def="int64" name="InitialDelaySeconds"/>
          <field type="ident" def="int64" name="TimeoutSeconds"/>
        </type>
        <type name="PullPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="CapabilityType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Capabilities">
          <field type="slice" name="Add">
            <elmtype type="ident" def="CapabilityType"/>
          </field>
          <field type="slice" name="Drop">
            <elmtype type="ident" def="CapabilityType"/>
          </field>
        </type>
        <type type="struct" name="ResourceRequirements">
          <field type="ident" def="ResourceList" name="Limits"/>
          <field type="ident" def="ResourceList" name="Requests"/>
        </type>
        <type type="struct" name="Container">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Image"/>
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="WorkingDir"/>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="ContainerPort"/>
          </field>
          <field type="slice" name="Env">
            <elmtype type="ident" def="EnvVar"/>
          </field>
          <field type="ident" def="ResourceRequirements" name="Resources"/>
          <field type="slice" name="VolumeMounts">
            <elmtype type="ident" def="VolumeMount"/>
          </field>
          <field type="pointer" name="LivenessProbe">
            <type type="ident" def="Probe"/>
          </field>
          <field type="pointer" name="ReadinessProbe">
            <type type="ident" def="Probe"/>
          </field>
          <field type="pointer" name="Lifecycle">
            <type type="ident" def="Lifecycle"/>
          </field>
          <field type="ident" def="string" name="TerminationMessagePath"/>
          <field type="ident" def="PullPolicy" name="ImagePullPolicy"/>
          <field type="pointer" name="SecurityContext">
            <type type="ident" def="SecurityContext"/>
          </field>
        </type>
        <type type="struct" name="Handler">
          <field type="pointer" name="Exec">
            <type type="ident" def="ExecAction"/>
          </field>
          <field type="pointer" name="HTTPGet">
            <type type="ident" def="HTTPGetAction"/>
          </field>
          <field type="pointer" name="TCPSocket">
            <type type="ident" def="TCPSocketAction"/>
          </field>
        </type>
        <type type="struct" name="Lifecycle">
          <field type="pointer" name="PostStart">
            <type type="ident" def="Handler"/>
          </field>
          <field type="pointer" name="PreStop">
            <type type="ident" def="Handler"/>
          </field>
        </type>
        <type name="ConditionStatus" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ContainerStateWaiting">
          <field type="ident" def="string" name="Reason"/>
        </type>
        <type type="struct" name="ContainerStateRunning">
          <field type="selector" name="StartedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="ContainerStateTerminated">
          <field type="ident" def="int" name="ExitCode"/>
          <field type="ident" def="int" name="Signal"/>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
          <field type="selector" name="StartedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="FinishedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="ContainerID"/>
        </type>
        <type type="struct" name="ContainerState">
          <field type="pointer" name="Waiting">
            <type type="ident" def="ContainerStateWaiting"/>
          </field>
          <field type="pointer" name="Running">
            <type type="ident" def="ContainerStateRunning"/>
          </field>
          <field type="pointer" name="Termination">
            <type type="ident" def="ContainerStateTerminated"/>
          </field>
        </type>
        <type type="struct" name="ContainerStatus">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="ContainerState" name="State"/>
          <field type="ident" def="ContainerState" name="LastTerminationState"/>
          <field type="ident" def="bool" name="Ready"/>
          <field type="ident" def="int" name="RestartCount"/>
          <field type="ident" def="string" name="Image"/>
          <field type="ident" def="string" name="ImageID"/>
          <field type="ident" def="string" name="ContainerID"/>
        </type>
        <type name="PodPhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PodConditionType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="PodCondition">
          <field type="ident" def="PodConditionType" name="Type"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
        </type>
        <type type="struct" name="PodContainerInfo">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="slice" name="ContainerInfo">
            <elmtype type="ident" def="ContainerStatus"/>
          </field>
        </type>
        <type name="RestartPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="PodList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Pod"/>
          </field>
        </type>
        <type name="DNSPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="PodSpec">
          <field type="slice" name="Volumes">
            <elmtype type="ident" def="Volume"/>
          </field>
          <field type="slice" name="Containers">
            <elmtype type="ident" def="Container"/>
          </field>
          <field type="ident" def="RestartPolicy" name="RestartPolicy"/>
          <field type="pointer" name="TerminationGracePeriodSeconds">
            <type type="ident" def="int64"/>
          </field>
          <field type="ident" def="DNSPolicy" name="DNSPolicy"/>
          <field type="map" name="NodeSelector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Host"/>
          <field type="ident" def="bool" name="HostNetwork"/>
        </type>
        <type type="struct" name="PodStatus">
          <field type="ident" def="PodPhase" name="Phase"/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="PodCondition"/>
          </field>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="HostIP"/>
          <field type="ident" def="string" name="PodIP"/>
          <field type="slice" name="ContainerStatuses">
            <elmtype type="ident" def="ContainerStatus"/>
          </field>
        </type>
        <type type="struct" name="PodStatusResult">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PodStatus" name="Status"/>
        </type>
        <type type="struct" name="Pod">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PodSpec" name="Spec"/>
          <field type="ident" def="PodStatus" name="Status"/>
        </type>
        <type type="struct" name="PodTemplateSpec">
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PodSpec" name="Spec"/>
        </type>
        <type type="struct" name="PodTemplate">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PodTemplateSpec" name="Template"/>
        </type>
        <type type="struct" name="PodTemplateList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PodTemplate"/>
          </field>
        </type>
        <type type="struct" name="ReplicationControllerSpec">
          <field type="ident" def="int" name="Replicas"/>
          <field type="map" name="Selector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="TemplateRef">
            <type type="ident" def="ObjectReference"/>
          </field>
          <field type="pointer" name="Template">
            <type type="ident" def="PodTemplateSpec"/>
          </field>
        </type>
        <type type="struct" name="ReplicationControllerStatus">
          <field type="ident" def="int" name="Replicas"/>
        </type>
        <type type="struct" name="ReplicationController">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ReplicationControllerSpec" name="Spec"/>
          <field type="ident" def="ReplicationControllerStatus" name="Status"/>
        </type>
        <type type="struct" name="ReplicationControllerList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ReplicationController"/>
          </field>
        </type>
        <type type="struct" name="ServiceList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Service"/>
          </field>
        </type>
        <type name="AffinityType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ServiceStatus"/>
        <type type="struct" name="ServiceSpec">
          <field type="slice" name="Ports">
            <elmtype type="ident" def="ServicePort"/>
          </field>
          <field type="map" name="Selector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="PortalIP"/>
          <field type="ident" def="bool" name="CreateExternalLoadBalancer"/>
          <field type="slice" name="PublicIPs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="AffinityType" name="SessionAffinity"/>
        </type>
        <type type="struct" name="ServicePort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="ident" def="int" name="Port"/>
          <field type="selector" name="TargetPort">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
        </type>
        <type type="struct" name="Service">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ServiceSpec" name="Spec"/>
          <field type="ident" def="ServiceStatus" name="Status"/>
        </type>
        <type type="struct" name="Endpoints">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="slice" name="Subsets">
            <elmtype type="ident" def="EndpointSubset"/>
          </field>
        </type>
        <type type="struct" name="EndpointSubset">
          <field type="slice" name="Addresses">
            <elmtype type="ident" def="EndpointAddress"/>
          </field>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="EndpointPort"/>
          </field>
        </type>
        <type type="struct" name="EndpointAddress">
          <field type="ident" def="string" name="IP"/>
          <field type="pointer" name="TargetRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type type="struct" name="EndpointPort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="Protocol" name="Protocol"/>
        </type>
        <type type="struct" name="EndpointsList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Endpoints"/>
          </field>
        </type>
        <type type="struct" name="NodeSpec">
          <field type="ident" def="string" name="PodCIDR"/>
          <field type="ident" def="string" name="ExternalID"/>
          <field type="ident" def="bool" name="Unschedulable"/>
        </type>
        <type type="struct" name="NodeSystemInfo">
          <field type="ident" def="string" name="MachineID"/>
          <field type="ident" def="string" name="SystemUUID"/>
          <field type="ident" def="string" name="BootID"/>
          <field type="ident" def="string" name="KernelVersion"/>
          <field type="ident" def="string" name="OsImage"/>
          <field type="ident" def="string" name="ContainerRuntimeVersion"/>
          <field type="ident" def="string" name="KubeletVersion"/>
          <field type="ident" def="string" name="KubeProxyVersion"/>
        </type>
        <type type="struct" name="NodeStatus">
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="ident" def="NodePhase" name="Phase"/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="NodeCondition"/>
          </field>
          <field type="slice" name="Addresses">
            <elmtype type="ident" def="NodeAddress"/>
          </field>
          <field type="ident" def="NodeSystemInfo" name="NodeInfo"/>
        </type>
        <type name="NodePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="NodeConditionType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NodeCondition">
          <field type="ident" def="NodeConditionType" name="Type"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
          <field type="selector" name="LastHeartbeatTime">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="LastTransitionTime">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
        </type>
        <type name="NodeAddressType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NodeAddress">
          <field type="ident" def="NodeAddressType" name="Type"/>
          <field type="ident" def="string" name="Address"/>
        </type>
        <type type="struct" name="NodeResources">
          <field type="ident" def="ResourceList" name="Capacity"/>
        </type>
        <type name="ResourceName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ResourceList" type="map">
          <keytype type="ident" def="ResourceName"/>
          <valtype type="selector">
            <prefix value="resource"/>
            <item value="Quantity"/>
          </valtype>
        </type>
        <type type="struct" name="Node">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="NodeSpec" name="Spec"/>
          <field type="ident" def="NodeStatus" name="Status"/>
        </type>
        <type type="struct" name="NodeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Node"/>
          </field>
        </type>
        <type type="struct" name="NamespaceSpec">
          <field type="slice" name="Finalizers">
            <elmtype type="ident" def="FinalizerName"/>
          </field>
        </type>
        <type name="FinalizerName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NamespaceStatus">
          <field type="ident" def="NamespacePhase" name="Phase"/>
        </type>
        <type name="NamespacePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Namespace">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="NamespaceSpec" name="Spec"/>
          <field type="ident" def="NamespaceStatus" name="Status"/>
        </type>
        <type type="struct" name="NamespaceList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Namespace"/>
          </field>
        </type>
        <type type="struct" name="Binding">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ObjectReference" name="Target"/>
        </type>
        <type type="struct" name="DeleteOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="pointer" name="GracePeriodSeconds">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="ListOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="selector" name="LabelSelector">
            <prefix value="labels"/>
            <item value="Selector"/>
          </field>
          <field type="selector" name="FieldSelector">
            <prefix value="fields"/>
            <item value="Selector"/>
          </field>
          <field type="ident" def="bool" name="Watch"/>
          <field type="ident" def="string" name="ResourceVersion"/>
        </type>
        <type type="struct" name="PodLogOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Container"/>
          <field type="ident" def="bool" name="Follow"/>
        </type>
        <type type="struct" name="PodExecOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="bool" name="Stdin"/>
          <field type="ident" def="bool" name="Stdout"/>
          <field type="ident" def="bool" name="Stderr"/>
          <field type="ident" def="bool" name="TTY"/>
          <field type="ident" def="string" name="Container"/>
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="PodProxyOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Path"/>
        </type>
        <type type="struct" name="Status">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="StatusReason" name="Reason"/>
          <field type="pointer" name="Details">
            <type type="ident" def="StatusDetails"/>
          </field>
          <field type="ident" def="int" name="Code"/>
        </type>
        <type type="struct" name="StatusDetails">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Kind"/>
          <field type="slice" name="Causes">
            <elmtype type="ident" def="StatusCause"/>
          </field>
          <field type="ident" def="int" name="RetryAfterSeconds"/>
        </type>
        <type name="StatusReason" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="StatusCause">
          <field type="ident" def="CauseType" name="Type"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Field"/>
        </type>
        <type name="CauseType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ObjectReference">
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="UID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="ResourceVersion"/>
          <field type="ident" def="string" name="FieldPath"/>
        </type>
        <type type="struct" name="SerializedReference">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectReference" name="Reference"/>
        </type>
        <type type="struct" name="EventSource">
          <field type="ident" def="string" name="Component"/>
          <field type="ident" def="string" name="Host"/>
        </type>
        <type type="struct" name="Event">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ObjectReference" name="InvolvedObject"/>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="EventSource" name="Source"/>
          <field type="selector" name="FirstTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="LastTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="int" name="Count"/>
        </type>
        <type type="struct" name="EventList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Event"/>
          </field>
        </type>
        <type type="struct" name="ContainerManifest">
          <field type="ident" def="string" name="Version"/>
          <field type="ident" def="string" name="ID"/>
          <field type="selector" name="UUID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="slice" name="Volumes">
            <elmtype type="ident" def="Volume"/>
          </field>
          <field type="slice" name="Containers">
            <elmtype type="ident" def="Container"/>
          </field>
          <field type="ident" def="RestartPolicy" name="RestartPolicy"/>
          <field type="pointer" name="TerminationGracePeriodSeconds">
            <type type="ident" def="int64"/>
          </field>
          <field type="ident" def="DNSPolicy" name="DNSPolicy"/>
          <field type="ident" def="bool" name="HostNetwork"/>
        </type>
        <type type="struct" name="ContainerManifestList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ContainerManifest"/>
          </field>
        </type>
        <type type="struct" name="List">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </elmtype>
          </field>
        </type>
        <type name="LimitType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="LimitRangeItem">
          <field type="ident" def="LimitType" name="Type"/>
          <field type="ident" def="ResourceList" name="Max"/>
          <field type="ident" def="ResourceList" name="Min"/>
          <field type="ident" def="ResourceList" name="Default"/>
        </type>
        <type type="struct" name="LimitRangeSpec">
          <field type="slice" name="Limits">
            <elmtype type="ident" def="LimitRangeItem"/>
          </field>
        </type>
        <type type="struct" name="LimitRange">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="LimitRangeSpec" name="Spec"/>
        </type>
        <type type="struct" name="LimitRangeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="LimitRange"/>
          </field>
        </type>
        <type type="struct" name="ResourceQuotaSpec">
          <field type="ident" def="ResourceList" name="Hard"/>
        </type>
        <type type="struct" name="ResourceQuotaStatus">
          <field type="ident" def="ResourceList" name="Hard"/>
          <field type="ident" def="ResourceList" name="Used"/>
        </type>
        <type type="struct" name="ResourceQuota">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ResourceQuotaSpec" name="Spec"/>
          <field type="ident" def="ResourceQuotaStatus" name="Status"/>
        </type>
        <type type="struct" name="ResourceQuotaList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ResourceQuota"/>
          </field>
        </type>
        <type type="struct" name="Secret">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="map" name="Data">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="ident" def="byte"/>
            </valtype>
          </field>
          <field type="ident" def="SecretType" name="Type"/>
        </type>
        <type name="SecretType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="SecretList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Secret"/>
          </field>
        </type>
        <type name="PatchType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ComponentConditionType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ComponentCondition">
          <field type="ident" def="ComponentConditionType" name="Type"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Error"/>
        </type>
        <type type="struct" name="ComponentStatus">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="ComponentCondition"/>
          </field>
        </type>
        <type type="struct" name="ComponentStatusList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ComponentStatus"/>
          </field>
        </type>
        <type type="struct" name="SecurityContext">
          <field type="pointer" name="Capabilities">
            <type type="ident" def="Capabilities"/>
          </field>
          <field type="pointer" name="Privileged">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="SELinuxOptions">
            <type type="ident" def="SELinuxOptions"/>
          </field>
          <field type="pointer" name="RunAsUser">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="SELinuxOptions">
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="Role"/>
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="Level"/>
        </type>
        <type name="RequestContextMapper" type="interface">
          <method name="Get">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Context"/>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
              <type type="ident" def="Context"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="ConversionError">
          <field type="interface" name="In"/>
          <field type="interface" name="Out"/>
          <field type="ident" def="string" name="Message"/>
        </type>
        <type name="NameGenerator" type="interface">
          <method name="GenerateName">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="Context" type="interface">
          <method name="Value">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="interface"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="PreV1Beta3">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="LabelSelectorQueryParam">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="FieldSelectorQueryParam">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="APIVersions"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="ident" def="APIVersions"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ResourceName"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Cpu">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResourceList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="resource"/>
                <item value="Quantity"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Memory">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResourceList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="resource"/>
                <item value="Quantity"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="GetContainerStatus">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="ContainerStatus"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ContainerStatus"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetExistingContainerStatus">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="ContainerStatus"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ContainerStatus"/>
          </resultsList>
        </function>
        <function name="IsPodReady">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Pod"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewRequestContextMapper">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="RequestContextMapper"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="requestContextMap"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Context"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="requestContextMap"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="Context"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewRequestContextFilter">
          <recvList/>
          <paramsList>
            <type type="ident" def="RequestContextMapper"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsEmpty">
          <recvList/>
          <paramsList>
            <type type="ident" def="RequestContextMapper"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetReference">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ObjectReference"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPartialReference">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ObjectReference"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="FillObjectMetaSystemFields">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
            <type type="pointer">
              <type type="ident" def="ObjectMeta"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HasObjectMetaSystemFieldValues">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ObjectMeta"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ObjectMetaFor">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ObjectMeta"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListMetaFor">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ListMeta"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConversionError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsStandardResourceName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewDeleteOptions">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DeleteOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="IsServiceIPSet">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsServiceIPRequested">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Service"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsStandardFinalizerName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="AddToNodeAddresses">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="slice">
                <elmtype type="ident" def="NodeAddress"/>
              </type>
            </type>
            <type type="ellipsis">
              <type type="ident" def="NodeAddress"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateName">
          <recvList/>
          <paramsList>
            <type type="ident" def="NameGenerator"/>
            <type type="pointer">
              <type type="ident" def="ObjectMeta"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewContext">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Context"/>
          </resultsList>
        </function>
        <function name="NewDefaultContext">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Context"/>
          </resultsList>
        </function>
        <function name="WithValue">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Context"/>
          </resultsList>
        </function>
        <function name="WithNamespace">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Context"/>
          </resultsList>
        </function>
        <function name="NamespaceFrom">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NamespaceValue">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ValidNamespace">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
            <type type="pointer">
              <type type="ident" def="ObjectMeta"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="WithNamespaceDefaultIfNone">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Context"/>
          </resultsList>
        </function>
        <function name="WithUser">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Context"/>
          </resultsList>
        </function>
        <function name="UserFrom">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="NamespaceDefault"/>
        <name value="NamespaceAll"/>
        <name value="NamespaceNone"/>
        <name value="TerminationMessagePathDefault"/>
        <name value="ReadWriteOnce"/>
        <name value="ReadOnlyMany"/>
        <name value="ReadWriteMany"/>
        <name value="VolumePending"/>
        <name value="VolumeAvailable"/>
        <name value="VolumeBound"/>
        <name value="VolumeReleased"/>
        <name value="ClaimPending"/>
        <name value="ClaimBound"/>
        <name value="StorageTypeDefault"/>
        <name value="StorageTypeMemory"/>
        <name value="ProtocolTCP"/>
        <name value="ProtocolUDP"/>
        <name value="PullAlways"/>
        <name value="PullNever"/>
        <name value="PullIfNotPresent"/>
        <name value="ConditionTrue"/>
        <name value="ConditionFalse"/>
        <name value="ConditionUnknown"/>
        <name value="PodPending"/>
        <name value="PodRunning"/>
        <name value="PodSucceeded"/>
        <name value="PodFailed"/>
        <name value="PodUnknown"/>
        <name value="PodReady"/>
        <name value="RestartPolicyAlways"/>
        <name value="RestartPolicyOnFailure"/>
        <name value="RestartPolicyNever"/>
        <name value="DNSClusterFirst"/>
        <name value="DNSDefault"/>
        <name value="PortalIPNone"/>
        <name value="AffinityTypeClientIP"/>
        <name value="AffinityTypeNone"/>
        <name value="NodePending"/>
        <name value="NodeRunning"/>
        <name value="NodeTerminated"/>
        <name value="NodeReady"/>
        <name value="NodeLegacyHostIP"/>
        <name value="NodeHostName"/>
        <name value="NodeExternalIP"/>
        <name value="NodeInternalIP"/>
        <name value="ResourceCPU"/>
        <name value="ResourceMemory"/>
        <name value="ResourceStorage"/>
        <name value="FinalizerKubernetes"/>
        <name value="NamespaceActive"/>
        <name value="NamespaceTerminating"/>
        <name value="StatusSuccess"/>
        <name value="StatusFailure"/>
        <name value="StatusReasonUnknown"/>
        <name value="StatusReasonUnauthorized"/>
        <name value="StatusReasonForbidden"/>
        <name value="StatusReasonNotFound"/>
        <name value="StatusReasonAlreadyExists"/>
        <name value="StatusReasonConflict"/>
        <name value="StatusReasonInvalid"/>
        <name value="StatusReasonServerTimeout"/>
        <name value="StatusReasonTimeout"/>
        <name value="StatusReasonBadRequest"/>
        <name value="StatusReasonMethodNotAllowed"/>
        <name value="StatusReasonInternalError"/>
        <name value="CauseTypeFieldValueNotFound"/>
        <name value="CauseTypeFieldValueRequired"/>
        <name value="CauseTypeFieldValueDuplicate"/>
        <name value="CauseTypeFieldValueInvalid"/>
        <name value="CauseTypeFieldValueNotSupported"/>
        <name value="CauseTypeUnexpectedServerResponse"/>
        <name value="LimitTypePod"/>
        <name value="LimitTypeContainer"/>
        <name value="ResourcePods"/>
        <name value="ResourceServices"/>
        <name value="ResourceReplicationControllers"/>
        <name value="ResourceQuotas"/>
        <name value="ResourceSecrets"/>
        <name value="ResourcePersistentVolumeClaims"/>
        <name value="MaxSecretSize"/>
        <name value="SecretTypeOpaque"/>
        <name value="ExecStdinParam"/>
        <name value="ExecStdoutParam"/>
        <name value="ExecStderrParam"/>
        <name value="ExecTTYParam"/>
        <name value="ExecCommandParamm"/>
        <name value="StreamType"/>
        <name value="StreamTypeStdin"/>
        <name value="StreamTypeStdout"/>
        <name value="StreamTypeStderr"/>
        <name value="StreamTypeData"/>
        <name value="StreamTypeError"/>
        <name value="PortHeader"/>
        <name value="JSONPatchType"/>
        <name value="MergePatchType"/>
        <name value="StrategicMergePatchType"/>
        <name value="ComponentHealthy"/>
        <name value="Scheme"/>
        <name value="ErrNilObject"/>
        <name value="ErrNoSelfLink"/>
        <name value="ForTesting_ReferencesAllowBlankSelfLinks"/>
        <name value="Semantic"/>
        <name value="SimpleNameGenerator"/>
        <name value="Codec"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/client/record">
      <types>
        <type type="struct" name="FakeRecorder"/>
        <type name="EventSink" type="interface">
          <method name="Create">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Event"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Event"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Event"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Event"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="EventRecorder" type="interface">
          <method name="Event">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Eventf">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="PastEventf">
            <paramsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="selector">
                <prefix value="util"/>
                <item value="Time"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="EventBroadcaster" type="interface">
          <method name="StartEventWatcher">
            <paramsList>
              <type type="func">
                <paramsList>
                  <type type="pointer">
                    <type type="selector">
                      <prefix value="api"/>
                      <item value="Event"/>
                    </type>
                  </type>
                </paramsList>
                <resultsList/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
            </resultsList>
          </method>
          <method name="StartRecordingToSink">
            <paramsList>
              <type type="ident" def="EventSink"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
            </resultsList>
          </method>
          <method name="StartLogging">
            <paramsList>
              <type type="func">
                <paramsList>
                  <type type="ident" def="string"/>
                  <type type="ellipsis">
                    <type type="interface"/>
                  </type>
                </paramsList>
                <resultsList/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
            </resultsList>
          </method>
          <method name="NewRecorder">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="EventSource"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="EventRecorder"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Event">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRecorder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Eventf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRecorder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PastEventf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRecorder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="util"/>
              <item value="Time"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewBroadcaster">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="EventBroadcaster"/>
          </resultsList>
        </function>
        <function name="StartRecordingToSink">
          <recvList>
            <type type="pointer">
              <type type="ident" def="eventBroadcasterImpl"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="EventSink"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
        <function name="StartLogging">
          <recvList>
            <type type="pointer">
              <type type="ident" def="eventBroadcasterImpl"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="ident" def="string"/>
                <type type="ellipsis">
                  <type type="interface"/>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
        <function name="StartEventWatcher">
          <recvList>
            <type type="pointer">
              <type type="ident" def="eventBroadcasterImpl"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="api"/>
                    <item value="Event"/>
                  </type>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRecorder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="eventBroadcasterImpl"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="EventSource"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="EventRecorder"/>
          </resultsList>
        </function>
        <function name="Event">
          <recvList>
            <type type="pointer">
              <type type="ident" def="recorderImpl"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Eventf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="recorderImpl"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PastEventf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="recorderImpl"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="util"/>
              <item value="Time"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/prober">
      <types>
        <type type="struct" name="FakeProber"/>
        <type name="Prober" type="interface">
          <method name="Probe">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="selector">
                <prefix value="api"/>
                <item value="PodStatus"/>
              </type>
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="int64"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="probe"/>
                <item value="Result"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ContainerCommandRunner" type="interface">
          <method name="RunInContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ExecInContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="Reader"/>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="WriteCloser"/>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="WriteCloser"/>
              </type>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="PortForward">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="kubecontainer"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="ident" def="uint16"/>
              <type type="selector">
                <prefix value="io"/>
                <item value="ReadWriteCloser"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Probe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeProber"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodStatus"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="Container"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="probe"/>
              <item value="Result"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="ContainerCommandRunner"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="ReadinessManager"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="RefManager"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="record"/>
              <item value="EventRecorder"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Prober"/>
          </resultsList>
        </function>
        <function name="NewTestProber">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="execprobe"/>
              <item value="ExecProber"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="ReadinessManager"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubecontainer"/>
                <item value="RefManager"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="record"/>
              <item value="EventRecorder"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Prober"/>
          </resultsList>
        </function>
        <function name="Probe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="prober"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodStatus"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="Container"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="probe"/>
              <item value="Result"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CombinedOutput">
          <recvList>
            <type type="ident" def="execInContainer"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetDir">
          <recvList>
            <type type="ident" def="execInContainer"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/api/v1">
      <types>
        <type type="struct" name="Policy">
          <field type="selector" name="">
            <prefix value="v1beta3"/>
            <item value="TypeMeta"/>
          </field>
          <field type="slice" name="Predicates">
            <elmtype type="ident" def="PredicatePolicy"/>
          </field>
          <field type="slice" name="Priorities">
            <elmtype type="ident" def="PriorityPolicy"/>
          </field>
        </type>
        <type type="struct" name="PredicatePolicy">
          <field type="ident" def="string" name="Name"/>
          <field type="pointer" name="Argument">
            <type type="ident" def="PredicateArgument"/>
          </field>
        </type>
        <type type="struct" name="PriorityPolicy">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="Weight"/>
          <field type="pointer" name="Argument">
            <type type="ident" def="PriorityArgument"/>
          </field>
        </type>
        <type type="struct" name="PredicateArgument">
          <field type="pointer" name="ServiceAffinity">
            <type type="ident" def="ServiceAffinity"/>
          </field>
          <field type="pointer" name="LabelsPresence">
            <type type="ident" def="LabelsPresence"/>
          </field>
        </type>
        <type type="struct" name="PriorityArgument">
          <field type="pointer" name="ServiceAntiAffinity">
            <type type="ident" def="ServiceAntiAffinity"/>
          </field>
          <field type="pointer" name="LabelPreference">
            <type type="ident" def="LabelPreference"/>
          </field>
        </type>
        <type type="struct" name="ServiceAffinity">
          <field type="slice" name="Labels">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="LabelsPresence">
          <field type="slice" name="Labels">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="Presence"/>
        </type>
        <type type="struct" name="ServiceAntiAffinity">
          <field type="ident" def="string" name="Label"/>
        </type>
        <type type="struct" name="LabelPreference">
          <field type="ident" def="string" name="Label"/>
          <field type="ident" def="bool" name="Presence"/>
        </type>
      </types>
      <functions>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="Codec"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/controller">
      <types>
        <type type="struct" name="ReplicationManager">
          <field type="selector" name="kubeClient">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
          <field type="ident" def="PodControlInterface" name="podControl"/>
          <field type="func" name="syncHandler">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="pointer" name="expectations">
            <type type="ident" def="RCExpectations"/>
          </field>
          <field type="selector" name="controllerStore">
            <prefix value="cache"/>
            <item value="StoreToControllerLister"/>
          </field>
          <field type="selector" name="podStore">
            <prefix value="cache"/>
            <item value="StoreToPodLister"/>
          </field>
          <field type="pointer" name="rcController">
            <type type="selector">
              <prefix value="framework"/>
              <item value="Controller"/>
            </type>
          </field>
          <field type="pointer" name="podController">
            <type type="selector">
              <prefix value="framework"/>
              <item value="Controller"/>
            </type>
          </field>
          <field type="pointer" name="queue">
            <type type="selector">
              <prefix value="workqueue"/>
              <item value="Type"/>
            </type>
          </field>
        </type>
        <type type="struct" name="RCExpectations">
          <field type="selector" name="">
            <prefix value="cache"/>
            <item value="Store"/>
          </field>
        </type>
        <type name="Expectations" type="interface">
          <method name="Fulfilled">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="PodExpectations">
          <field type="ident" def="int64" name="add"/>
          <field type="ident" def="int64" name="del"/>
          <field type="ident" def="string" name="key"/>
        </type>
        <type name="PodControlInterface" type="interface">
          <method name="createReplica">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ReplicationController"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="deletePod">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="RealPodControl">
          <field type="selector" name="kubeClient">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
          <field type="selector" name="recorder">
            <prefix value="record"/>
            <item value="EventRecorder"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewReplicationManager">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ReplicationManager"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReplicationManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetExpectations">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RCExpectations"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PodExpectations"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SatisfiedExpectations">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RCExpectations"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ExpectCreations">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RCExpectations"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExpectDeletions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RCExpectations"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreationObserved">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RCExpectations"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DeletionObserved">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RCExpectations"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Seen">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodExpectations"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fulfilled">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodExpectations"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewRCExpectations">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RCExpectations"/>
            </type>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="activePods"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="activePods"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="activePods"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="FullControllerResyncPeriod"/>
        <name value="PodRelistPeriod"/>
        <name value="ExpectationsTimeout"/>
        <name value="CreatedByAnnotation"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/host_path">
      <types/>
      <functions>
        <function name="ProbeVolumePlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hostPathPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeHost"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hostPathPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CanSupport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hostPathPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetAccessModes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hostPathPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="AccessModeType"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hostPathPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeOptions"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Builder"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hostPathPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Cleaner"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hostPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUpAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hostPath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hostPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TearDown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hostPath"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDownAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hostPath"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/strategicpatch">
      <types>
        <type type="struct" name="SortableSliceOfMaps">
          <field type="slice" name="s">
            <elmtype type="map">
              <keytype type="ident" def="string"/>
              <valtype type="interface"/>
            </elmtype>
          </field>
          <field type="ident" def="string" name="k"/>
        </type>
        <type type="struct" name="SortableSliceOfScalars">
          <field type="slice" name="s">
            <elmtype type="interface"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="StrategicMergePatchData">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="SortableSliceOfMaps"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="SortableSliceOfMaps"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="SortableSliceOfMaps"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="SortableSliceOfScalars"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="SortableSliceOfScalars"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="SortableSliceOfScalars"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/password/allow">
      <types/>
      <functions>
        <function name="NewAllow">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="authenticator"/>
              <item value="Password"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthenticatePassword">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/empty_dir">
      <types/>
      <functions>
        <function name="GetMountMedium">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realMountDetector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="storageMedium"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMountMedium">
          <recvList>
            <type type="pointer">
              <type type="ident" def="realMountDetector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="storageMedium"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ProbeVolumePlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="emptyDirPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeHost"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="emptyDirPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CanSupport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="emptyDirPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="emptyDirPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeOptions"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Builder"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="emptyDirPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Cleaner"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="emptyDir"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUpAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="emptyDir"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="emptyDir"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TearDown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="emptyDir"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDownAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="emptyDir"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/proxy">
      <types>
        <type type="struct" name="LoadBalancerRR">
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="services">
            <keytype type="ident" def="ServicePortName"/>
            <valtype type="pointer">
              <type type="ident" def="balancerState"/>
            </valtype>
          </field>
        </type>
        <type type="struct" name="Proxier">
          <field type="ident" def="LoadBalancer" name="loadBalancer"/>
          <field type="selector" name="mu">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="map" name="serviceMap">
            <keytype type="ident" def="ServicePortName"/>
            <valtype type="pointer">
              <type type="ident" def="serviceInfo"/>
            </valtype>
          </field>
          <field type="ident" def="int32" name="numProxyLoops"/>
          <field type="selector" name="listenIP">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="selector" name="iptables">
            <prefix value="iptables"/>
            <item value="Interface"/>
          </field>
          <field type="selector" name="hostIP">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
        </type>
        <type name="LoadBalancer" type="interface">
          <method name="NextEndpoint">
            <paramsList>
              <type type="ident" def="ServicePortName"/>
              <type type="selector">
                <prefix value="net"/>
                <item value="Addr"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="NewService">
            <paramsList>
              <type type="ident" def="ServicePortName"/>
              <type type="selector">
                <prefix value="api"/>
                <item value="AffinityType"/>
              </type>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CleanupStaleStickySessions">
            <paramsList>
              <type type="ident" def="ServicePortName"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="ServicePortName">
          <field type="selector" name="">
            <prefix value="types"/>
            <item value="NamespacedName"/>
          </field>
          <field type="ident" def="string" name="Port"/>
        </type>
      </types>
      <functions>
        <function name="Loop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="udpEchoServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewLoadBalancerRR">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LoadBalancerRR"/>
            </type>
          </resultsList>
        </function>
        <function name="NewService">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LoadBalancerRR"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ServicePortName"/>
            <type type="selector">
              <prefix value="api"/>
              <item value="AffinityType"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NextEndpoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LoadBalancerRR"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ServicePortName"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="OnUpdate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LoadBalancerRR"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CleanupStaleStickySessions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LoadBalancerRR"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ServicePortName"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ProxyLoop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tcpProxySocket"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ServicePortName"/>
            <type type="pointer">
              <type type="ident" def="serviceInfo"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Proxier"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Addr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="udpProxySocket"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </resultsList>
        </function>
        <function name="ProxyLoop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="udpProxySocket"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ServicePortName"/>
            <type type="pointer">
              <type type="ident" def="serviceInfo"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Proxier"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewProxier">
          <recvList/>
          <paramsList>
            <type type="ident" def="LoadBalancer"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="selector">
              <prefix value="iptables"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Proxier"/>
            </type>
          </resultsList>
        </function>
        <function name="CreateProxier">
          <recvList/>
          <paramsList>
            <type type="ident" def="LoadBalancer"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="selector">
              <prefix value="iptables"/>
              <item value="Interface"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Proxier"/>
            </type>
          </resultsList>
        </function>
        <function name="SyncLoop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Proxier"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="OnUpdate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Proxier"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ServicePortName"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrMissingServiceEntry"/>
        <name value="ErrMissingEndpoints"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/factory">
      <types>
        <type type="struct" name="PluginFactoryArgs">
          <field type="selector" name="">
            <prefix value="algorithm"/>
            <item value="PodLister"/>
          </field>
          <field type="selector" name="">
            <prefix value="algorithm"/>
            <item value="ServiceLister"/>
          </field>
          <field type="selector" name="NodeLister">
            <prefix value="algorithm"/>
            <item value="MinionLister"/>
          </field>
          <field type="selector" name="NodeInfo">
            <prefix value="algorithm"/>
            <item value="NodeInfo"/>
          </field>
        </type>
        <type name="FitPredicateFactory" type="func">
          <paramsList>
            <type type="ident" def="PluginFactoryArgs"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="algorithm"/>
              <item value="FitPredicate"/>
            </type>
          </resultsList>
        </type>
        <type name="PriorityFunctionFactory" type="func">
          <paramsList>
            <type type="ident" def="PluginFactoryArgs"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="algorithm"/>
              <item value="PriorityFunction"/>
            </type>
          </resultsList>
        </type>
        <type type="struct" name="PriorityConfigFactory">
          <field type="ident" def="PriorityFunctionFactory" name="Function"/>
          <field type="ident" def="int" name="Weight"/>
        </type>
        <type type="struct" name="AlgorithmProviderConfig">
          <field type="selector" name="FitPredicateKeys">
            <prefix value="util"/>
            <item value="StringSet"/>
          </field>
          <field type="selector" name="PriorityFunctionKeys">
            <prefix value="util"/>
            <item value="StringSet"/>
          </field>
        </type>
        <type type="struct" name="ConfigFactory">
          <field type="pointer" name="Client">
            <type type="selector">
              <prefix value="client"/>
              <item value="Client"/>
            </type>
          </field>
          <field type="pointer" name="PodQueue">
            <type type="selector">
              <prefix value="cache"/>
              <item value="FIFO"/>
            </type>
          </field>
          <field type="pointer" name="ScheduledPodLister">
            <type type="selector">
              <prefix value="cache"/>
              <item value="StoreToPodLister"/>
            </type>
          </field>
          <field type="selector" name="PodLister">
            <prefix value="algorithm"/>
            <item value="PodLister"/>
          </field>
          <field type="pointer" name="NodeLister">
            <type type="selector">
              <prefix value="cache"/>
              <item value="StoreToNodeLister"/>
            </type>
          </field>
          <field type="pointer" name="ServiceLister">
            <type type="selector">
              <prefix value="cache"/>
              <item value="StoreToServiceLister"/>
            </type>
          </field>
          <field type="channel" dir="3" name="StopEverything">
            <type type="struct" name=""/>
          </field>
          <field type="pointer" name="scheduledPodPopulator">
            <type type="selector">
              <prefix value="framework"/>
              <item value="Controller"/>
            </type>
          </field>
          <field type="selector" name="modeler">
            <prefix value="scheduler"/>
            <item value="SystemModeler"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="RegisterFitPredicate">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="algorithm"/>
              <item value="FitPredicate"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RegisterFitPredicateFactory">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="FitPredicateFactory"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RegisterCustomFitPredicate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="schedulerapi"/>
              <item value="PredicatePolicy"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsFitPredicateRegistered">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="RegisterPriorityFunction">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="algorithm"/>
              <item value="PriorityFunction"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RegisterPriorityConfigFactory">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="PriorityConfigFactory"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RegisterCustomPriorityFunction">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="schedulerapi"/>
              <item value="PriorityPolicy"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsPriorityFunctionRegistered">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="RegisterAlgorithmProvider">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="util"/>
              <item value="StringSet"/>
            </type>
            <type type="selector">
              <prefix value="util"/>
              <item value="StringSet"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAlgorithmProvider">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AlgorithmProviderConfig"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListAlgorithmProviders">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewConfigFactory">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ConfigFactory"/>
            </type>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfigFactory"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="scheduler"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateFromProvider">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfigFactory"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="scheduler"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateFromConfig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfigFactory"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="schedulerapi"/>
              <item value="Policy"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="scheduler"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateFromKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfigFactory"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="util"/>
              <item value="StringSet"/>
            </type>
            <type type="selector">
              <prefix value="util"/>
              <item value="StringSet"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="scheduler"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nodeEnumerator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nodeEnumerator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="Bind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="binder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Binding"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Now">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="DefaultProvider"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/client/cache">
      <types>
        <type type="struct" name="UndeltaStore">
          <field type="ident" def="Store" name=""/>
          <field type="func" name="PushFunc">
            <paramsList>
              <type type="slice">
                <elmtype type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </field>
        </type>
        <type name="ThreadSafeStore" type="interface">
          <method name="Add">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="interface"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Update">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="interface"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="interface"/>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="List">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="interface"/>
              </type>
            </resultsList>
          </method>
          <method name="ListKeys">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="Replace">
            <paramsList>
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Index">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Store" type="interface">
          <method name="Add">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="List">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="interface"/>
              </type>
            </resultsList>
          </method>
          <method name="ListKeys">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="interface"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetByKey">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="interface"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Replace">
            <paramsList>
              <type type="slice">
                <elmtype type="interface"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="KeyFunc" type="func">
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="KeyError">
          <field type="interface" name="Obj"/>
          <field type="ident" def="error" name="Err"/>
        </type>
        <type name="ExplicitKey" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ListerWatcher" type="interface">
          <method name="List">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Reflector">
          <field type="selector" name="expectedType">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
          <field type="ident" def="Store" name="store"/>
          <field type="ident" def="ListerWatcher" name="listerWatcher"/>
          <field type="selector" name="period">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="resyncPeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="lastSyncResourceVersion"/>
        </type>
        <type name="Enumerator" type="interface">
          <method name="Len">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="interface"/>
            </resultsList>
          </method>
        </type>
        <type name="GetFunc" type="func">
          <paramsList/>
          <resultsList>
            <type type="ident" def="Enumerator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="Poller">
          <field type="ident" def="GetFunc" name="getFunc"/>
          <field type="selector" name="period">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="Store" name="store"/>
        </type>
        <type name="ListFunc" type="func">
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="WatchFunc" type="func">
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="ListWatch">
          <field type="ident" def="ListFunc" name="ListFunc"/>
          <field type="ident" def="WatchFunc" name="WatchFunc"/>
        </type>
        <type type="struct" name="StoreToPodLister">
          <field type="ident" def="Store" name=""/>
        </type>
        <type type="struct" name="StoreToNodeLister">
          <field type="ident" def="Store" name=""/>
        </type>
        <type type="struct" name="StoreToControllerLister">
          <field type="ident" def="Store" name=""/>
        </type>
        <type type="struct" name="StoreToServiceLister">
          <field type="ident" def="Store" name=""/>
        </type>
        <type name="Indexer" type="interface">
          <method name="Index">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="IndexFunc" type="func">
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="Index" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="selector">
            <prefix value="util"/>
            <item value="StringSet"/>
          </valtype>
        </type>
        <type name="Indexers" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="IndexFunc"/>
        </type>
        <type name="Indices" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="Index"/>
        </type>
        <type name="Queue" type="interface">
          <method name="Pop">
            <paramsList/>
            <resultsList>
              <type type="interface"/>
            </resultsList>
          </method>
          <method name="AddIfNotPresent">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="FIFO">
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="selector" name="cond">
            <prefix value="sync"/>
            <item value="Cond"/>
          </field>
          <field type="map" name="items">
            <keytype type="ident" def="string"/>
            <valtype type="interface"/>
          </field>
          <field type="slice" name="queue">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="KeyFunc" name="keyFunc"/>
        </type>
        <type type="struct" name="FakeExpirationPolicy">
          <field type="selector" name="NeverExpire">
            <prefix value="util"/>
            <item value="StringSet"/>
          </field>
          <field type="ident" def="KeyFunc" name="RetrieveKeyFunc"/>
        </type>
        <type type="struct" name="ExpirationCache">
          <field type="ident" def="ThreadSafeStore" name="cacheStorage"/>
          <field type="ident" def="KeyFunc" name="keyFunc"/>
          <field type="selector" name="clock">
            <prefix value="util"/>
            <item value="Clock"/>
          </field>
          <field type="ident" def="ExpirationPolicy" name="expirationPolicy"/>
        </type>
        <type name="ExpirationPolicy" type="interface">
          <method name="IsExpired">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="timestampedEntry"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="TTLPolicy">
          <field type="selector" name="Ttl">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="Clock">
            <prefix value="util"/>
            <item value="Clock"/>
          </field>
        </type>
        <type type="struct" name="DeltaFIFO">
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="selector" name="cond">
            <prefix value="sync"/>
            <item value="Cond"/>
          </field>
          <field type="map" name="items">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="Deltas"/>
          </field>
          <field type="slice" name="queue">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="KeyFunc" name="keyFunc"/>
          <field type="ident" def="DeltaCompressor" name="deltaCompressor"/>
          <field type="ident" def="KeyLister" name="knownObjectKeys"/>
        </type>
        <type name="KeyLister" type="interface">
          <method name="ListKeys">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="KeyListerFunc" type="func">
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </type>
        <type name="DeltaCompressor" type="interface">
          <method name="Compress">
            <paramsList>
              <type type="ident" def="Deltas"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Deltas"/>
            </resultsList>
          </method>
        </type>
        <type name="DeltaCompressorFunc" type="func">
          <paramsList>
            <type type="ident" def="Deltas"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Deltas"/>
          </resultsList>
        </type>
        <type name="DeltaType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Delta">
          <field type="ident" def="DeltaType" name="Type"/>
          <field type="interface" name="Object"/>
        </type>
        <type name="Deltas" type="slice">
          <elmtype type="ident" def="Delta"/>
        </type>
        <type type="struct" name="DeletedFinalStateUnknown">
          <field type="ident" def="string" name="Key"/>
        </type>
      </types>
      <functions>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UndeltaStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UndeltaStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UndeltaStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Replace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UndeltaStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewUndeltaStore">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="slice">
                  <elmtype type="interface"/>
                </type>
              </paramsList>
              <resultsList/>
            </type>
            <type type="ident" def="KeyFunc"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="UndeltaStore"/>
            </type>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="threadSafeMap"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="threadSafeMap"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="threadSafeMap"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="threadSafeMap"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="threadSafeMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </resultsList>
        </function>
        <function name="ListKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="threadSafeMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Replace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="threadSafeMap"/>
            </type>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="threadSafeMap"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewThreadSafeStore">
          <recvList/>
          <paramsList>
            <type type="ident" def="Indexers"/>
            <type type="ident" def="Indices"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ThreadSafeStore"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="KeyError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="MetaNamespaceKeyFunc">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SplitMetaNamespaceKey">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cache"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </resultsList>
        </function>
        <function name="ListKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cache"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetByKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Replace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewStore">
          <recvList/>
          <paramsList>
            <type type="ident" def="KeyFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Store"/>
          </resultsList>
        </function>
        <function name="NewIndexer">
          <recvList/>
          <paramsList>
            <type type="ident" def="KeyFunc"/>
            <type type="ident" def="Indexers"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Indexer"/>
          </resultsList>
        </function>
        <function name="NewNamespaceKeyedIndexerAndReflector">
          <recvList/>
          <paramsList>
            <type type="ident" def="ListerWatcher"/>
            <type type="interface"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Indexer"/>
            <type type="pointer">
              <type type="ident" def="Reflector"/>
            </type>
          </resultsList>
        </function>
        <function name="NewReflector">
          <recvList/>
          <paramsList>
            <type type="ident" def="ListerWatcher"/>
            <type type="interface"/>
            <type type="ident" def="Store"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Reflector"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reflector"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="RunUntil">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reflector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="LastSyncResourceVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reflector"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewPoller">
          <recvList/>
          <paramsList>
            <type type="ident" def="GetFunc"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="Store"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Poller"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Poller"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="RunUntil">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Poller"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewListWatchFromClient">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ListWatch"/>
            </type>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListWatch"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListWatch"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StoreToPodLister"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Pods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StoreToPodLister"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="storePodsNamespacer"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="ident" def="storePodsNamespacer"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodList"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Exists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StoreToPodLister"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StoreToNodeLister"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="NodeList"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNodeInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StoreToNodeLister"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Exists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StoreToControllerLister"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StoreToControllerLister"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPodControllers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StoreToControllerLister"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StoreToServiceLister"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="ServiceList"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPodServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StoreToServiceLister"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MetaNamespaceIndexFunc">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddIfNotPresent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FIFO"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </resultsList>
        </function>
        <function name="ListKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FIFO"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetByKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Pop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FIFO"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="Replace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFIFO">
          <recvList/>
          <paramsList>
            <type type="ident" def="KeyFunc"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FIFO"/>
            </type>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="fakeThreadSafeMap"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="IsExpired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeExpirationPolicy"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="timestampedEntry"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewFakeExpirationStore">
          <recvList/>
          <paramsList>
            <type type="ident" def="KeyFunc"/>
            <type type="channel" dir="1">
              <type type="ident" def="string"/>
            </type>
            <type type="ident" def="ExpirationPolicy"/>
            <type type="selector">
              <prefix value="util"/>
              <item value="Clock"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Store"/>
          </resultsList>
        </function>
        <function name="IsExpired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TTLPolicy"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="timestampedEntry"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetByKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExpirationCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExpirationCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExpirationCache"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </resultsList>
        </function>
        <function name="ListKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExpirationCache"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExpirationCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExpirationCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExpirationCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Replace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExpirationCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewTTLStore">
          <recvList/>
          <paramsList>
            <type type="ident" def="KeyFunc"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Store"/>
          </resultsList>
        </function>
        <function name="NewDeltaFIFO">
          <recvList/>
          <paramsList>
            <type type="ident" def="KeyFunc"/>
            <type type="ident" def="DeltaCompressor"/>
            <type type="ident" def="KeyLister"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DeltaFIFO"/>
            </type>
          </resultsList>
        </function>
        <function name="KeyOf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeltaFIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeltaFIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeltaFIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeltaFIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddIfNotPresent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeltaFIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeltaFIFO"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </resultsList>
        </function>
        <function name="ListKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeltaFIFO"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeltaFIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetByKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeltaFIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Pop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeltaFIFO"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="Replace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeltaFIFO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListKeys">
          <recvList>
            <type type="ident" def="KeyListerFunc"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Compress">
          <recvList>
            <type type="ident" def="DeltaCompressorFunc"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Deltas"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Deltas"/>
          </resultsList>
        </function>
        <function name="Oldest">
          <recvList>
            <type type="ident" def="Deltas"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Delta"/>
            </type>
          </resultsList>
        </function>
        <function name="Newest">
          <recvList>
            <type type="ident" def="Deltas"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Delta"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrZeroLengthDeltasObject"/>
        <name value="Added"/>
        <name value="Updated"/>
        <name value="Deleted"/>
        <name value="Sync"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/glusterfs">
      <types/>
      <functions>
        <function name="ProbeVolumePlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="glusterfsPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeHost"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="glusterfsPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CanSupport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="glusterfsPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetAccessModes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="glusterfsPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="AccessModeType"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="glusterfsPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeOptions"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Builder"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="glusterfsPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Cleaner"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="glusterfs"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUpAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="glusterfs"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="glusterfs"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TearDown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="glusterfs"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDownAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="glusterfs"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/config">
      <types>
        <type name="PodConfigNotificationMode" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="PodConfig">
          <field type="pointer" name="pods">
            <type type="ident" def="podStorage"/>
          </field>
          <field type="pointer" name="mux">
            <type type="selector">
              <prefix value="config"/>
              <item value="Mux"/>
            </type>
          </field>
          <field type="channel" dir="3" name="updates">
            <type type="selector">
              <prefix value="kubelet"/>
              <item value="PodUpdate"/>
            </type>
          </field>
          <field type="selector" name="sourcesLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="selector" name="sources">
            <prefix value="util"/>
            <item value="StringSet"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewSourceURL">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="channel" dir="1">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewSourceFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="channel" dir="1">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewPodConfig">
          <recvList/>
          <paramsList>
            <type type="ident" def="PodConfigNotificationMode"/>
            <type type="selector">
              <prefix value="record"/>
              <item value="EventRecorder"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PodConfig"/>
            </type>
          </resultsList>
        </function>
        <function name="Channel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodConfig"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="channel" dir="1">
              <type type="interface"/>
            </type>
          </resultsList>
        </function>
        <function name="SeenAllSources">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Updates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="selector">
                <prefix value="kubelet"/>
                <item value="PodUpdate"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Sync">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PodConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Merge">
          <recvList>
            <type type="pointer">
              <type type="ident" def="podStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Sync">
          <recvList>
            <type type="pointer">
              <type type="ident" def="podStorage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="MergedState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="podStorage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="NewSourceApiserver">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="channel" dir="1">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="PodConfigNotificationSnapshot"/>
        <name value="PodConfigNotificationSnapshotAndUpdates"/>
        <name value="PodConfigNotificationIncremental"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/client/clientcmd/api/latest">
      <types/>
      <functions/>
      <names>
        <name value="Version"/>
        <name value="OldestVersion"/>
        <name value="Versions"/>
        <name value="Codec"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider">
      <types>
        <type name="Factory" type="func">
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="Interface" type="interface">
          <method name="TCPLoadBalancer">
            <paramsList/>
            <resultsList>
              <type type="ident" def="TCPLoadBalancer"/>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Instances">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Instances"/>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Zones">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Zones"/>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Clusters">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Clusters"/>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type name="Clusters" type="interface">
          <method name="ListClusters">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Master">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="TCPLoadBalancer" type="interface">
          <method name="GetTCPLoadBalancer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateTCPLoadBalancer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="net"/>
                <item value="IP"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="int"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="selector">
                <prefix value="api"/>
                <item value="AffinityType"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateTCPLoadBalancer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteTCPLoadBalancer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Instances" type="interface">
          <method name="NodeAddresses">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="api"/>
                  <item value="NodeAddress"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ExternalID">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="List">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetNodeResources">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="NodeResources"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Configure">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="NodeSpec"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Release">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Zone">
          <field type="ident" def="string" name="FailureDomain"/>
          <field type="ident" def="string" name="Region"/>
        </type>
        <type name="Zones" type="interface">
          <method name="GetZone">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Zone"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="RegisterCloudProvider">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Factory"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetCloudProvider">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InitCloudProvider">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Interface"/>
          </resultsList>
        </function>
        <function name="GetLoadBalancerName">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/pod">
      <types>
        <type name="ResourceGetter" type="interface">
          <method name="Get">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Registry" type="interface">
          <method name="ListPods">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PodList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WatchPods">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetPod">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreatePod">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdatePod">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeletePod">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NamespaceScoped">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForCreate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Validate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="AllowCreateOnUpdate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="CheckGracefulDelete">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="DeleteOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="MatchPod">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
          </resultsList>
        </function>
        <function name="PodToSelectableFields">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Set"/>
            </type>
          </resultsList>
        </function>
        <function name="ResourceLocation">
          <recvList/>
          <paramsList>
            <type type="ident" def="ResourceGetter"/>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LogLocation">
          <recvList/>
          <paramsList>
            <type type="ident" def="ResourceGetter"/>
            <type type="selector">
              <prefix value="client"/>
              <item value="ConnectionInfoGetter"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodLogOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExecLocation">
          <recvList/>
          <paramsList>
            <type type="ident" def="ResourceGetter"/>
            <type type="selector">
              <prefix value="client"/>
              <item value="ConnectionInfoGetter"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodExecOptions"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PortForwardLocation">
          <recvList/>
          <paramsList>
            <type type="ident" def="ResourceGetter"/>
            <type type="selector">
              <prefix value="client"/>
              <item value="ConnectionInfoGetter"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="StandardStorage"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Registry"/>
          </resultsList>
        </function>
        <function name="ListPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreatePod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdatePod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeletePod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Strategy"/>
        <name value="StatusStrategy"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/fieldpath">
      <types/>
      <functions>
        <function name="ExtractFieldPathAsString">
          <recvList/>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/lifecycle">
      <types>
        <type type="struct" name="HandlerRunner">
          <field type="selector" name="httpGetter">
            <prefix value="kubeletTypes"/>
            <item value="HttpGetter"/>
          </field>
          <field type="selector" name="commandRunner">
            <prefix value="prober"/>
            <item value="ContainerCommandRunner"/>
          </field>
          <field type="ident" def="podStatusProvider" name="containerManager"/>
        </type>
      </types>
      <functions>
        <function name="NewHandlerRunner">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="kubeletTypes"/>
              <item value="HttpGetter"/>
            </type>
            <type type="selector">
              <prefix value="prober"/>
              <item value="ContainerCommandRunner"/>
            </type>
            <type type="ident" def="podStatusProvider"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="HandlerRunner"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HandlerRunner"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Handler"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/namespace">
      <types>
        <type type="struct" name="NamespaceManager">
          <field type="pointer" name="controller">
            <type type="selector">
              <prefix value="framework"/>
              <item value="Controller"/>
            </type>
          </field>
          <field type="channel" dir="3" name="StopEverything">
            <type type="struct" name=""/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewNamespaceManager">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="NamespaceManager"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NamespaceManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NamespaceManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/vagrant">
      <types>
        <type type="struct" name="VagrantCloud">
          <field type="ident" def="string" name="saltURL"/>
          <field type="ident" def="string" name="saltUser"/>
          <field type="ident" def="string" name="saltPass"/>
          <field type="ident" def="string" name="saltAuth"/>
        </type>
        <type type="struct" name="SaltToken">
          <field type="ident" def="string" name="Token"/>
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="EAuth"/>
        </type>
        <type type="struct" name="SaltLoginResponse">
          <field type="slice" name="Data">
            <elmtype type="ident" def="SaltToken"/>
          </field>
        </type>
        <type type="struct" name="SaltMinion">
          <field type="slice" name="Roles">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="IP"/>
          <field type="ident" def="string" name="Host"/>
        </type>
        <type name="SaltMinions" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="SaltMinion"/>
        </type>
        <type type="struct" name="SaltMinionsResponse">
          <field type="slice" name="Minions">
            <elmtype type="ident" def="SaltMinions"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Clusters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VagrantCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Clusters"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="TCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VagrantCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="TCPLoadBalancer"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Instances">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VagrantCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Instances"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Zones">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VagrantCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Zones"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NodeAddresses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VagrantCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="NodeAddress"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExternalID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VagrantCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VagrantCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNodeResources">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VagrantCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeResources"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Configure">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VagrantCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeSpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VagrantCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/api/validation">
      <types/>
      <functions>
        <function name="ValidatePolicy">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="schedulerapi"/>
              <item value="Policy"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3">
      <types>
        <type type="struct" name="TypeMeta">
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="APIVersion"/>
        </type>
        <type type="struct" name="ListMeta">
          <field type="ident" def="string" name="SelfLink"/>
          <field type="ident" def="string" name="ResourceVersion"/>
        </type>
        <type type="struct" name="ObjectMeta">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="GenerateName"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="SelfLink"/>
          <field type="selector" name="UID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="ident" def="string" name="ResourceVersion"/>
          <field type="selector" name="CreationTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="pointer" name="DeletionTimestamp">
            <type type="selector">
              <prefix value="util"/>
              <item value="Time"/>
            </type>
          </field>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Annotations">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Volume">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="VolumeSource" name=""/>
        </type>
        <type type="struct" name="VolumeSource">
          <field type="pointer" name="HostPath">
            <type type="ident" def="HostPathVolumeSource"/>
          </field>
          <field type="pointer" name="EmptyDir">
            <type type="ident" def="EmptyDirVolumeSource"/>
          </field>
          <field type="pointer" name="GCEPersistentDisk">
            <type type="ident" def="GCEPersistentDiskVolumeSource"/>
          </field>
          <field type="pointer" name="AWSElasticBlockStore">
            <type type="ident" def="AWSElasticBlockStoreVolumeSource"/>
          </field>
          <field type="pointer" name="GitRepo">
            <type type="ident" def="GitRepoVolumeSource"/>
          </field>
          <field type="pointer" name="Secret">
            <type type="ident" def="SecretVolumeSource"/>
          </field>
          <field type="pointer" name="NFS">
            <type type="ident" def="NFSVolumeSource"/>
          </field>
          <field type="pointer" name="ISCSI">
            <type type="ident" def="ISCSIVolumeSource"/>
          </field>
          <field type="pointer" name="Glusterfs">
            <type type="ident" def="GlusterfsVolumeSource"/>
          </field>
          <field type="pointer" name="PersistentVolumeClaimVolumeSource">
            <type type="ident" def="PersistentVolumeClaimVolumeSource"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaimVolumeSource">
          <field type="ident" def="string" name="ClaimName"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="PersistentVolumeSource">
          <field type="pointer" name="GCEPersistentDisk">
            <type type="ident" def="GCEPersistentDiskVolumeSource"/>
          </field>
          <field type="pointer" name="AWSElasticBlockStore">
            <type type="ident" def="AWSElasticBlockStoreVolumeSource"/>
          </field>
          <field type="pointer" name="HostPath">
            <type type="ident" def="HostPathVolumeSource"/>
          </field>
          <field type="pointer" name="Glusterfs">
            <type type="ident" def="GlusterfsVolumeSource"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolume">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PersistentVolumeSpec" name="Spec"/>
          <field type="ident" def="PersistentVolumeStatus" name="Status"/>
        </type>
        <type type="struct" name="PersistentVolumeSpec">
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="ident" def="PersistentVolumeSource" name=""/>
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="pointer" name="ClaimRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeStatus">
          <field type="ident" def="PersistentVolumePhase" name="Phase"/>
        </type>
        <type type="struct" name="PersistentVolumeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PersistentVolume"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaim">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PersistentVolumeClaimSpec" name="Spec"/>
          <field type="ident" def="PersistentVolumeClaimStatus" name="Status"/>
        </type>
        <type type="struct" name="PersistentVolumeClaimList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PersistentVolumeClaim"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaimSpec">
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="ident" def="ResourceRequirements" name="Resources"/>
        </type>
        <type type="struct" name="PersistentVolumeClaimStatus">
          <field type="ident" def="PersistentVolumeClaimPhase" name="Phase"/>
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="pointer" name="VolumeRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type name="AccessModeType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PersistentVolumePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PersistentVolumeClaimPhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="HostPathVolumeSource">
          <field type="ident" def="string" name="Path"/>
        </type>
        <type type="struct" name="EmptyDirVolumeSource">
          <field type="ident" def="StorageType" name="Medium"/>
        </type>
        <type type="struct" name="GlusterfsVolumeSource">
          <field type="ident" def="string" name="EndpointsName"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type name="StorageType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="Protocol" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="GCEPersistentDiskVolumeSource">
          <field type="ident" def="string" name="PDName"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="int" name="Partition"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="AWSElasticBlockStoreVolumeSource">
          <field type="ident" def="string" name="VolumeID"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="int" name="Partition"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="GitRepoVolumeSource">
          <field type="ident" def="string" name="Repository"/>
          <field type="ident" def="string" name="Revision"/>
        </type>
        <type type="struct" name="SecretVolumeSource">
          <field type="ident" def="string" name="SecretName"/>
        </type>
        <type type="struct" name="NFSVolumeSource">
          <field type="ident" def="string" name="Server"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="ISCSIVolumeSource">
          <field type="ident" def="string" name="TargetPortal"/>
          <field type="ident" def="string" name="IQN"/>
          <field type="ident" def="int" name="Lun"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="ContainerPort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="HostPort"/>
          <field type="ident" def="int" name="ContainerPort"/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="ident" def="string" name="HostIP"/>
        </type>
        <type type="struct" name="VolumeMount">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="bool" name="ReadOnly"/>
          <field type="ident" def="string" name="MountPath"/>
        </type>
        <type type="struct" name="EnvVar">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Value"/>
          <field type="pointer" name="ValueFrom">
            <type type="ident" def="EnvVarSource"/>
          </field>
        </type>
        <type type="struct" name="EnvVarSource">
          <field type="pointer" name="FieldRef">
            <type type="ident" def="ObjectFieldSelector"/>
          </field>
        </type>
        <type type="struct" name="ObjectFieldSelector">
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="FieldPath"/>
        </type>
        <type type="struct" name="HTTPGetAction">
          <field type="ident" def="string" name="Path"/>
          <field type="selector" name="Port">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
          <field type="ident" def="string" name="Host"/>
        </type>
        <type type="struct" name="TCPSocketAction">
          <field type="selector" name="Port">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
        </type>
        <type type="struct" name="ExecAction">
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Probe">
          <field type="ident" def="Handler" name=""/>
          <field type="ident" def="int64" name="InitialDelaySeconds"/>
          <field type="ident" def="int64" name="TimeoutSeconds"/>
        </type>
        <type name="PullPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="CapabilityType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Capabilities">
          <field type="slice" name="Add">
            <elmtype type="ident" def="CapabilityType"/>
          </field>
          <field type="slice" name="Drop">
            <elmtype type="ident" def="CapabilityType"/>
          </field>
        </type>
        <type type="struct" name="ResourceRequirements">
          <field type="ident" def="ResourceList" name="Limits"/>
          <field type="ident" def="ResourceList" name="Requests"/>
        </type>
        <type type="struct" name="Container">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Image"/>
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="WorkingDir"/>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="ContainerPort"/>
          </field>
          <field type="slice" name="Env">
            <elmtype type="ident" def="EnvVar"/>
          </field>
          <field type="ident" def="ResourceRequirements" name="Resources"/>
          <field type="slice" name="VolumeMounts">
            <elmtype type="ident" def="VolumeMount"/>
          </field>
          <field type="pointer" name="LivenessProbe">
            <type type="ident" def="Probe"/>
          </field>
          <field type="pointer" name="ReadinessProbe">
            <type type="ident" def="Probe"/>
          </field>
          <field type="pointer" name="Lifecycle">
            <type type="ident" def="Lifecycle"/>
          </field>
          <field type="ident" def="string" name="TerminationMessagePath"/>
          <field type="ident" def="bool" name="Privileged"/>
          <field type="ident" def="PullPolicy" name="ImagePullPolicy"/>
          <field type="ident" def="Capabilities" name="Capabilities"/>
          <field type="pointer" name="SecurityContext">
            <type type="ident" def="SecurityContext"/>
          </field>
        </type>
        <type type="struct" name="Handler">
          <field type="pointer" name="Exec">
            <type type="ident" def="ExecAction"/>
          </field>
          <field type="pointer" name="HTTPGet">
            <type type="ident" def="HTTPGetAction"/>
          </field>
          <field type="pointer" name="TCPSocket">
            <type type="ident" def="TCPSocketAction"/>
          </field>
        </type>
        <type type="struct" name="Lifecycle">
          <field type="pointer" name="PostStart">
            <type type="ident" def="Handler"/>
          </field>
          <field type="pointer" name="PreStop">
            <type type="ident" def="Handler"/>
          </field>
        </type>
        <type name="ConditionStatus" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ContainerStateWaiting">
          <field type="ident" def="string" name="Reason"/>
        </type>
        <type type="struct" name="ContainerStateRunning">
          <field type="selector" name="StartedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="ContainerStateTerminated">
          <field type="ident" def="int" name="ExitCode"/>
          <field type="ident" def="int" name="Signal"/>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
          <field type="selector" name="StartedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="FinishedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="ContainerID"/>
        </type>
        <type type="struct" name="ContainerState">
          <field type="pointer" name="Waiting">
            <type type="ident" def="ContainerStateWaiting"/>
          </field>
          <field type="pointer" name="Running">
            <type type="ident" def="ContainerStateRunning"/>
          </field>
          <field type="pointer" name="Termination">
            <type type="ident" def="ContainerStateTerminated"/>
          </field>
        </type>
        <type type="struct" name="ContainerStatus">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="ContainerState" name="State"/>
          <field type="ident" def="ContainerState" name="LastTerminationState"/>
          <field type="ident" def="bool" name="Ready"/>
          <field type="ident" def="int" name="RestartCount"/>
          <field type="ident" def="string" name="Image"/>
          <field type="ident" def="string" name="ImageID"/>
          <field type="ident" def="string" name="ContainerID"/>
        </type>
        <type name="PodPhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PodConditionType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="PodCondition">
          <field type="ident" def="PodConditionType" name="Type"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
        </type>
        <type name="RestartPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="DNSPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="PodSpec">
          <field type="slice" name="Volumes">
            <elmtype type="ident" def="Volume"/>
          </field>
          <field type="slice" name="Containers">
            <elmtype type="ident" def="Container"/>
          </field>
          <field type="ident" def="RestartPolicy" name="RestartPolicy"/>
          <field type="pointer" name="TerminationGracePeriodSeconds">
            <type type="ident" def="int64"/>
          </field>
          <field type="ident" def="DNSPolicy" name="DNSPolicy"/>
          <field type="map" name="NodeSelector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Host"/>
          <field type="ident" def="bool" name="HostNetwork"/>
        </type>
        <type type="struct" name="PodStatus">
          <field type="ident" def="PodPhase" name="Phase"/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="PodCondition"/>
          </field>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="HostIP"/>
          <field type="ident" def="string" name="PodIP"/>
          <field type="slice" name="ContainerStatuses">
            <elmtype type="ident" def="ContainerStatus"/>
          </field>
        </type>
        <type type="struct" name="PodStatusResult">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PodStatus" name="Status"/>
        </type>
        <type type="struct" name="Pod">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PodSpec" name="Spec"/>
          <field type="ident" def="PodStatus" name="Status"/>
        </type>
        <type type="struct" name="PodList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Pod"/>
          </field>
        </type>
        <type type="struct" name="PodTemplateSpec">
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PodSpec" name="Spec"/>
        </type>
        <type type="struct" name="PodTemplate">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="PodTemplateSpec" name="Template"/>
        </type>
        <type type="struct" name="PodTemplateList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PodTemplate"/>
          </field>
        </type>
        <type type="struct" name="ReplicationControllerSpec">
          <field type="ident" def="int" name="Replicas"/>
          <field type="map" name="Selector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="TemplateRef">
            <type type="ident" def="ObjectReference"/>
          </field>
          <field type="pointer" name="Template">
            <type type="ident" def="PodTemplateSpec"/>
          </field>
        </type>
        <type type="struct" name="ReplicationControllerStatus">
          <field type="ident" def="int" name="Replicas"/>
        </type>
        <type type="struct" name="ReplicationController">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ReplicationControllerSpec" name="Spec"/>
          <field type="ident" def="ReplicationControllerStatus" name="Status"/>
        </type>
        <type type="struct" name="ReplicationControllerList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ReplicationController"/>
          </field>
        </type>
        <type name="AffinityType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ServiceStatus"/>
        <type type="struct" name="ServiceSpec">
          <field type="slice" name="Ports">
            <elmtype type="ident" def="ServicePort"/>
          </field>
          <field type="map" name="Selector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="PortalIP"/>
          <field type="ident" def="bool" name="CreateExternalLoadBalancer"/>
          <field type="slice" name="PublicIPs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="AffinityType" name="SessionAffinity"/>
        </type>
        <type type="struct" name="ServicePort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="ident" def="int" name="Port"/>
          <field type="selector" name="TargetPort">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
        </type>
        <type type="struct" name="Service">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ServiceSpec" name="Spec"/>
          <field type="ident" def="ServiceStatus" name="Status"/>
        </type>
        <type type="struct" name="ServiceList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Service"/>
          </field>
        </type>
        <type type="struct" name="Endpoints">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="slice" name="Subsets">
            <elmtype type="ident" def="EndpointSubset"/>
          </field>
        </type>
        <type type="struct" name="EndpointSubset">
          <field type="slice" name="Addresses">
            <elmtype type="ident" def="EndpointAddress"/>
          </field>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="EndpointPort"/>
          </field>
        </type>
        <type type="struct" name="EndpointAddress">
          <field type="ident" def="string" name="IP"/>
          <field type="pointer" name="TargetRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type type="struct" name="EndpointPort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="Protocol" name="Protocol"/>
        </type>
        <type type="struct" name="EndpointsList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Endpoints"/>
          </field>
        </type>
        <type type="struct" name="NodeSpec">
          <field type="ident" def="string" name="PodCIDR"/>
          <field type="ident" def="string" name="ExternalID"/>
          <field type="ident" def="bool" name="Unschedulable"/>
        </type>
        <type type="struct" name="NodeSystemInfo">
          <field type="ident" def="string" name="MachineID"/>
          <field type="ident" def="string" name="SystemUUID"/>
          <field type="ident" def="string" name="BootID"/>
          <field type="ident" def="string" name="KernelVersion"/>
          <field type="ident" def="string" name="OsImage"/>
          <field type="ident" def="string" name="ContainerRuntimeVersion"/>
          <field type="ident" def="string" name="KubeletVersion"/>
          <field type="ident" def="string" name="KubeProxyVersion"/>
        </type>
        <type type="struct" name="NodeStatus">
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="ident" def="NodePhase" name="Phase"/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="NodeCondition"/>
          </field>
          <field type="slice" name="Addresses">
            <elmtype type="ident" def="NodeAddress"/>
          </field>
          <field type="ident" def="NodeSystemInfo" name="NodeInfo"/>
        </type>
        <type name="NodePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="NodeConditionType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NodeCondition">
          <field type="ident" def="NodeConditionType" name="Type"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
          <field type="selector" name="LastHeartbeatTime">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="LastTransitionTime">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
        </type>
        <type name="NodeAddressType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NodeAddress">
          <field type="ident" def="NodeAddressType" name="Type"/>
          <field type="ident" def="string" name="Address"/>
        </type>
        <type name="ResourceName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ResourceList" type="map">
          <keytype type="ident" def="ResourceName"/>
          <valtype type="selector">
            <prefix value="resource"/>
            <item value="Quantity"/>
          </valtype>
        </type>
        <type type="struct" name="Node">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="NodeSpec" name="Spec"/>
          <field type="ident" def="NodeStatus" name="Status"/>
        </type>
        <type type="struct" name="NodeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Node"/>
          </field>
        </type>
        <type name="FinalizerName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NamespaceSpec">
          <field type="slice" name="Finalizers">
            <elmtype type="ident" def="FinalizerName"/>
          </field>
        </type>
        <type type="struct" name="NamespaceStatus">
          <field type="ident" def="NamespacePhase" name="Phase"/>
        </type>
        <type name="NamespacePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Namespace">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="NamespaceSpec" name="Spec"/>
          <field type="ident" def="NamespaceStatus" name="Status"/>
        </type>
        <type type="struct" name="NamespaceList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Namespace"/>
          </field>
        </type>
        <type type="struct" name="Binding">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ObjectReference" name="Target"/>
        </type>
        <type type="struct" name="DeleteOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="pointer" name="GracePeriodSeconds">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="ListOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="LabelSelector"/>
          <field type="ident" def="string" name="FieldSelector"/>
          <field type="ident" def="bool" name="Watch"/>
          <field type="ident" def="string" name="ResourceVersion"/>
        </type>
        <type type="struct" name="PodLogOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Container"/>
          <field type="ident" def="bool" name="Follow"/>
        </type>
        <type type="struct" name="PodExecOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="bool" name="Stdin"/>
          <field type="ident" def="bool" name="Stdout"/>
          <field type="ident" def="bool" name="Stderr"/>
          <field type="ident" def="bool" name="TTY"/>
          <field type="ident" def="string" name="Container"/>
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="PodProxyOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Path"/>
        </type>
        <type type="struct" name="Status">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="StatusReason" name="Reason"/>
          <field type="pointer" name="Details">
            <type type="ident" def="StatusDetails"/>
          </field>
          <field type="ident" def="int" name="Code"/>
        </type>
        <type type="struct" name="StatusDetails">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Kind"/>
          <field type="slice" name="Causes">
            <elmtype type="ident" def="StatusCause"/>
          </field>
          <field type="ident" def="int" name="RetryAfterSeconds"/>
        </type>
        <type name="StatusReason" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="StatusCause">
          <field type="ident" def="CauseType" name="Type"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Field"/>
        </type>
        <type name="CauseType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ObjectReference">
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="UID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="ResourceVersion"/>
          <field type="ident" def="string" name="FieldPath"/>
        </type>
        <type type="struct" name="SerializedReference">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectReference" name="Reference"/>
        </type>
        <type type="struct" name="EventSource">
          <field type="ident" def="string" name="Component"/>
          <field type="ident" def="string" name="Host"/>
        </type>
        <type type="struct" name="Event">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ObjectReference" name="InvolvedObject"/>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="EventSource" name="Source"/>
          <field type="selector" name="FirstTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="LastTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="int" name="Count"/>
        </type>
        <type type="struct" name="EventList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Event"/>
          </field>
        </type>
        <type type="struct" name="List">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="selector">
              <prefix value="runtime"/>
              <item value="RawExtension"/>
            </elmtype>
          </field>
        </type>
        <type name="LimitType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="LimitRangeItem">
          <field type="ident" def="LimitType" name="Type"/>
          <field type="ident" def="ResourceList" name="Max"/>
          <field type="ident" def="ResourceList" name="Min"/>
          <field type="ident" def="ResourceList" name="Default"/>
        </type>
        <type type="struct" name="LimitRangeSpec">
          <field type="slice" name="Limits">
            <elmtype type="ident" def="LimitRangeItem"/>
          </field>
        </type>
        <type type="struct" name="LimitRange">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="LimitRangeSpec" name="Spec"/>
        </type>
        <type type="struct" name="LimitRangeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="LimitRange"/>
          </field>
        </type>
        <type type="struct" name="ResourceQuotaSpec">
          <field type="ident" def="ResourceList" name="Hard"/>
        </type>
        <type type="struct" name="ResourceQuotaStatus">
          <field type="ident" def="ResourceList" name="Hard"/>
          <field type="ident" def="ResourceList" name="Used"/>
        </type>
        <type type="struct" name="ResourceQuota">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="ident" def="ResourceQuotaSpec" name="Spec"/>
          <field type="ident" def="ResourceQuotaStatus" name="Status"/>
        </type>
        <type type="struct" name="ResourceQuotaList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ResourceQuota"/>
          </field>
        </type>
        <type type="struct" name="Secret">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="map" name="Data">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="ident" def="byte"/>
            </valtype>
          </field>
          <field type="ident" def="SecretType" name="Type"/>
        </type>
        <type name="SecretType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="SecretList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Secret"/>
          </field>
        </type>
        <type name="ComponentConditionType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ComponentCondition">
          <field type="ident" def="ComponentConditionType" name="Type"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Error"/>
        </type>
        <type type="struct" name="ComponentStatus">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectMeta" name=""/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="ComponentCondition"/>
          </field>
        </type>
        <type type="struct" name="ComponentStatusList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ListMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ComponentStatus"/>
          </field>
        </type>
        <type type="struct" name="SecurityContext">
          <field type="pointer" name="Capabilities">
            <type type="ident" def="Capabilities"/>
          </field>
          <field type="pointer" name="Privileged">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="SELinuxOptions">
            <type type="ident" def="SELinuxOptions"/>
          </field>
          <field type="pointer" name="RunAsUser">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="SELinuxOptions">
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="Role"/>
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="Level"/>
        </type>
      </types>
      <functions>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="NamespaceDefault"/>
        <name value="NamespaceAll"/>
        <name value="ReadWriteOnce"/>
        <name value="ReadOnlyMany"/>
        <name value="ReadWriteMany"/>
        <name value="VolumePending"/>
        <name value="VolumeAvailable"/>
        <name value="VolumeBound"/>
        <name value="VolumeReleased"/>
        <name value="ClaimPending"/>
        <name value="ClaimBound"/>
        <name value="StorageTypeDefault"/>
        <name value="StorageTypeMemory"/>
        <name value="ProtocolTCP"/>
        <name value="ProtocolUDP"/>
        <name value="PullAlways"/>
        <name value="PullNever"/>
        <name value="PullIfNotPresent"/>
        <name value="TerminationMessagePathDefault"/>
        <name value="ConditionTrue"/>
        <name value="ConditionFalse"/>
        <name value="ConditionUnknown"/>
        <name value="PodPending"/>
        <name value="PodRunning"/>
        <name value="PodSucceeded"/>
        <name value="PodFailed"/>
        <name value="PodUnknown"/>
        <name value="PodReady"/>
        <name value="RestartPolicyAlways"/>
        <name value="RestartPolicyOnFailure"/>
        <name value="RestartPolicyNever"/>
        <name value="DNSClusterFirst"/>
        <name value="DNSDefault"/>
        <name value="AffinityTypeClientIP"/>
        <name value="AffinityTypeNone"/>
        <name value="PortalIPNone"/>
        <name value="NodePending"/>
        <name value="NodeRunning"/>
        <name value="NodeTerminated"/>
        <name value="NodeReady"/>
        <name value="NodeHostName"/>
        <name value="NodeExternalIP"/>
        <name value="NodeInternalIP"/>
        <name value="ResourceCPU"/>
        <name value="ResourceMemory"/>
        <name value="ResourceStorage"/>
        <name value="FinalizerKubernetes"/>
        <name value="NamespaceActive"/>
        <name value="NamespaceTerminating"/>
        <name value="StatusSuccess"/>
        <name value="StatusFailure"/>
        <name value="StatusReasonUnknown"/>
        <name value="StatusReasonNotFound"/>
        <name value="StatusReasonAlreadyExists"/>
        <name value="StatusReasonConflict"/>
        <name value="StatusReasonInvalid"/>
        <name value="StatusReasonServerTimeout"/>
        <name value="CauseTypeFieldValueNotFound"/>
        <name value="CauseTypeFieldValueRequired"/>
        <name value="CauseTypeFieldValueDuplicate"/>
        <name value="CauseTypeFieldValueInvalid"/>
        <name value="CauseTypeFieldValueNotSupported"/>
        <name value="LimitTypePod"/>
        <name value="LimitTypeContainer"/>
        <name value="ResourcePods"/>
        <name value="ResourceServices"/>
        <name value="ResourceReplicationControllers"/>
        <name value="ResourceQuotas"/>
        <name value="ResourceSecrets"/>
        <name value="ResourcePersistentVolumeClaims"/>
        <name value="MaxSecretSize"/>
        <name value="SecretTypeOpaque"/>
        <name value="ComponentHealthy"/>
        <name value="Codec"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/minion">
      <types>
        <type name="ResourceGetter" type="interface">
          <method name="Get">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Registry" type="interface">
          <method name="ListMinions">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="NodeList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateMinion">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Node"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateMinion">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Node"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetMinion">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Node"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteMinion">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WatchMinions">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NamespaceScoped">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="AllowCreateOnUpdate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForCreate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Validate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="PrepareForCreate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="NodeToSelectableFields">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Set"/>
            </type>
          </resultsList>
        </function>
        <function name="MatchNode">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
          </resultsList>
        </function>
        <function name="ResourceLocation">
          <recvList/>
          <paramsList>
            <type type="ident" def="ResourceGetter"/>
            <type type="selector">
              <prefix value="client"/>
              <item value="ConnectionInfoGetter"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="StandardStorage"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Registry"/>
          </resultsList>
        </function>
        <function name="ListMinions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateMinion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateMinion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchMinions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMinion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteMinion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Strategy"/>
        <name value="StatusStrategy"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/errors">
      <types>
        <type name="Aggregate" type="interface">
          <method name="Errors">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="error"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="Matcher" type="func">
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </type>
      </types>
      <functions>
        <function name="NewAggregate">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="error"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregate"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="aggregate"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Errors">
          <recvList>
            <type type="ident" def="aggregate"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="error"/>
            </type>
          </resultsList>
        </function>
        <function name="FilterOut">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="ident" def="Matcher"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Flatten">
          <recvList/>
          <paramsList>
            <type type="ident" def="Aggregate"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregate"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/event">
      <types>
        <type type="struct" name="REST">
          <field type="selector" name="registry">
            <prefix value="generic"/>
            <item value="Registry"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Registry"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="NewList">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="NewEtcdRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Registry"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/client/clientcmd/api">
      <types>
        <type type="struct" name="Config">
          <field type="selector" name="">
            <prefix value="api"/>
            <item value="TypeMeta"/>
          </field>
          <field type="ident" def="Preferences" name="Preferences"/>
          <field type="map" name="Clusters">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="Cluster"/>
          </field>
          <field type="map" name="AuthInfos">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="AuthInfo"/>
          </field>
          <field type="map" name="Contexts">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="Context"/>
          </field>
          <field type="ident" def="string" name="CurrentContext"/>
          <field type="map" name="Extensions">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="runtime"/>
              <item value="EmbeddedObject"/>
            </valtype>
          </field>
        </type>
        <type type="struct" name="Preferences">
          <field type="ident" def="bool" name="Colors"/>
          <field type="map" name="Extensions">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="runtime"/>
              <item value="EmbeddedObject"/>
            </valtype>
          </field>
        </type>
        <type type="struct" name="Cluster">
          <field type="ident" def="string" name="LocationOfOrigin"/>
          <field type="ident" def="string" name="Server"/>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="bool" name="InsecureSkipTLSVerify"/>
          <field type="ident" def="string" name="CertificateAuthority"/>
          <field type="slice" name="CertificateAuthorityData">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="map" name="Extensions">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="runtime"/>
              <item value="EmbeddedObject"/>
            </valtype>
          </field>
        </type>
        <type type="struct" name="AuthInfo">
          <field type="ident" def="string" name="LocationOfOrigin"/>
          <field type="ident" def="string" name="AuthPath"/>
          <field type="ident" def="string" name="ClientCertificate"/>
          <field type="slice" name="ClientCertificateData">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="string" name="ClientKey"/>
          <field type="slice" name="ClientKeyData">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="string" name="Token"/>
          <field type="ident" def="string" name="Username"/>
          <field type="ident" def="string" name="Password"/>
          <field type="map" name="Extensions">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="runtime"/>
              <item value="EmbeddedObject"/>
            </valtype>
          </field>
        </type>
        <type type="struct" name="Context">
          <field type="ident" def="string" name="LocationOfOrigin"/>
          <field type="ident" def="string" name="Cluster"/>
          <field type="ident" def="string" name="AuthInfo"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="map" name="Extensions">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="runtime"/>
              <item value="EmbeddedObject"/>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewConfig">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </resultsList>
        </function>
        <function name="NewContext">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Context"/>
            </type>
          </resultsList>
        </function>
        <function name="NewCluster">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cluster"/>
            </type>
          </resultsList>
        </function>
        <function name="NewAuthInfo">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AuthInfo"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPreferences">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Preferences"/>
            </type>
          </resultsList>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="MinifyConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ShortenConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="FlattenConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FlattenContent">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResolvePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="MakeAbs">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Scheme"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/nfs">
      <types/>
      <functions>
        <function name="ProbeVolumePlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nfsPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeHost"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nfsPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CanSupport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nfsPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetAccessModes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nfsPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="AccessModeType"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nfsPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeOptions"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Builder"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nfsPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Cleaner"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nfs"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUpAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nfs"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nfs"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TearDown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nfs"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDownAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nfs"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubectl/cmd">
      <types/>
      <functions>
        <function name="NewCmdVersion">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunVersion">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="util"/>
              <item value="StringList"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdStop">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunStop">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="util"/>
              <item value="StringList"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdRunContainer">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunRunContainer">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdRollingUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunRollingUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdResize">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunResize">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdProxy">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunProxy">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdPortForward">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunPortForward">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdNamespace">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewCmdLog">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunLog">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdLabel">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunLabel">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdGet">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunGet">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdExposeService">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunExpose">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdExec">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunExec">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdDescribe">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunDescribe">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DescribeMatchingResources">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="meta"/>
              <item value="RESTMapper"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="ObjectTyper"/>
            </type>
            <type type="selector">
              <prefix value="kubectl"/>
              <item value="Describer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdDelete">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunDelete">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="util"/>
              <item value="StringList"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReapResult">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="resource"/>
                <item value="Result"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteResult">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="resource"/>
                <item value="Result"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdCreate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="ValidateArgs">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RunCreate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="util"/>
              <item value="StringList"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewKubectlCommand">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewCmdClusterInfo">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunClusterInfo">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCmdApiVersions">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cobra"/>
                <item value="Command"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RunApiVersions">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cmdutil"/>
                <item value="Factory"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="MaxRetries"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/labels">
      <types>
        <type name="Selector" type="interface">
          <method name="Matches">
            <paramsList>
              <type type="ident" def="Labels"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Empty">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Add">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="Operator"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Selector"/>
            </resultsList>
          </method>
        </type>
        <type name="Operator" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="LabelSelector" type="slice">
          <elmtype type="ident" def="Requirement"/>
        </type>
        <type name="ByKey" type="slice">
          <elmtype type="ident" def="Requirement"/>
        </type>
        <type type="struct" name="Requirement">
          <field type="ident" def="string" name="key"/>
          <field type="ident" def="Operator" name="operator"/>
          <field type="selector" name="strValues">
            <prefix value="util"/>
            <item value="StringSet"/>
          </field>
        </type>
        <type name="Token" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="ScannedItem">
          <field type="ident" def="Token" name="tok"/>
          <field type="ident" def="string" name="literal"/>
        </type>
        <type type="struct" name="Lexer">
          <field type="ident" def="string" name="s"/>
          <field type="ident" def="int" name="pos"/>
        </type>
        <type type="struct" name="Parser">
          <field type="pointer" name="l">
            <type type="ident" def="Lexer"/>
          </field>
          <field type="slice" name="scannedItems">
            <elmtype type="ident" def="ScannedItem"/>
          </field>
          <field type="ident" def="int" name="position"/>
        </type>
        <type name="ParserContext" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="Labels" type="interface">
          <method name="Has">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="Set" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="Everything">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Selector"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="ByKey"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="ByKey"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="ByKey"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewRequirement">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Operator"/>
            <type type="selector">
              <prefix value="util"/>
              <item value="StringSet"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Requirement"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Matches">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Requirement"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="ident" def="LabelSelector"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Requirement"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="ident" def="LabelSelector"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Operator"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Selector"/>
          </resultsList>
        </function>
        <function name="Matches">
          <recvList>
            <type type="ident" def="LabelSelector"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="LabelSelector"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Lex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Lexer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Token"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Parse">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Selector"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SelectorFromSet">
          <recvList/>
          <paramsList>
            <type type="ident" def="Set"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Selector"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Has">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="AsSelector">
          <recvList>
            <type type="ident" def="Set"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Selector"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="EqualsOperator"/>
        <name value="DoubleEqualsOperator"/>
        <name value="InOperator"/>
        <name value="NotEqualsOperator"/>
        <name value="NotInOperator"/>
        <name value="ExistsOperator"/>
        <name value="ErrorToken"/>
        <name value="EndOfStringToken"/>
        <name value="ClosedParToken"/>
        <name value="CommaToken"/>
        <name value="DoubleEqualsToken"/>
        <name value="EqualsToken"/>
        <name value="IdentifierToken"/>
        <name value="InToken"/>
        <name value="NotEqualsToken"/>
        <name value="NotInToken"/>
        <name value="OpenParToken"/>
        <name value="KeyAndOperator"/>
        <name value="Values"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/clientauth">
      <types>
        <type type="struct" name="Info">
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="Password"/>
          <field type="ident" def="string" name="CAFile"/>
          <field type="ident" def="string" name="CertFile"/>
          <field type="ident" def="string" name="KeyFile"/>
          <field type="ident" def="string" name="BearerToken"/>
          <field type="pointer" name="Insecure">
            <type type="ident" def="bool"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="LoadFromFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MergeWithConfig">
          <recvList>
            <type type="ident" def="Info"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Config"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Complete">
          <recvList>
            <type type="ident" def="Info"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/test/e2e">
      <types>
        <type type="struct" name="TestContextType">
          <field type="ident" def="string" name="KubeConfig"/>
          <field type="ident" def="string" name="KubeContext"/>
          <field type="ident" def="string" name="AuthConfig"/>
          <field type="ident" def="string" name="CertDir"/>
          <field type="ident" def="string" name="Host"/>
          <field type="ident" def="string" name="RepoRoot"/>
          <field type="ident" def="string" name="Provider"/>
          <field type="ident" def="CloudConfig" name="CloudConfig"/>
        </type>
        <type type="struct" name="LatencyMetric">
          <field type="ident" def="string" name="verb"/>
          <field type="ident" def="string" name="resource"/>
          <field type="ident" def="float64" name="quantile"/>
          <field type="selector" name="latency">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="CloudConfig">
          <field type="ident" def="string" name="ProjectID"/>
          <field type="ident" def="string" name="Zone"/>
          <field type="ident" def="string" name="MasterName"/>
          <field type="selector" name="Provider">
            <prefix value="cloudprovider"/>
            <item value="Interface"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Logf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Failf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DeleteRC">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RunRC">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VerifyContainersAreNotFailed">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Pod"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="BadEvents">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Event"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="SSH">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReadLatencyMetrics">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="LatencyMetric"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HighLatencyRequests">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServeImageOrFail">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="LaunchNetTestPodPerNode">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeList"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="ClusterLevelLoggingWithElasticsearch">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="testResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="RunE2ETests">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="TestContextType"/>
            </type>
            <type type="ident" def="int64"/>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CheckCadvisorHealthOnAllNodes">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/conversion">
      <types>
        <type type="struct" name="Scheme">
          <field type="map" name="versionMap">
            <keytype type="ident" def="string"/>
            <valtype type="map">
              <keytype type="ident" def="string"/>
              <valtype type="selector">
                <prefix value="reflect"/>
                <item value="Type"/>
              </valtype>
            </valtype>
          </field>
          <field type="map" name="typeToVersion">
            <keytype type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </keytype>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="typeToKind">
            <keytype type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </keytype>
            <valtype type="slice">
              <elmtype type="ident" def="string"/>
            </valtype>
          </field>
          <field type="pointer" name="converter">
            <type type="ident" def="Converter"/>
          </field>
          <field type="ident" def="bool" name="Indent"/>
          <field type="ident" def="string" name="InternalVersion"/>
          <field type="ident" def="MetaFactory" name="MetaFactory"/>
        </type>
        <type name="MetaFactory" type="interface">
          <method name="Update">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Interpret">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="SimpleMetaFactory">
          <field type="ident" def="string" name="VersionField"/>
          <field type="ident" def="string" name="KindField"/>
          <field type="slice" name="BaseFields">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type name="Generator" type="interface">
          <method name="GenerateConversionsForType">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="reflect"/>
                <item value="Type"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WriteConversionFunctions">
            <paramsList>
              <type type="selector">
                <prefix value="io"/>
                <item value="Writer"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WriteConversionFunctionNames">
            <paramsList>
              <type type="selector">
                <prefix value="io"/>
                <item value="Writer"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="OverwritePackage">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Equalities">
          <field type="selector" name="">
            <prefix value="reflect"/>
            <item value="Equalities"/>
          </field>
        </type>
        <type name="DebugLogger" type="interface">
          <method name="Logf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Converter">
          <field type="map" name="conversionFuncs">
            <keytype type="ident" def="typePair"/>
            <valtype type="selector">
              <prefix value="reflect"/>
              <item value="Value"/>
            </valtype>
          </field>
          <field type="map" name="structFieldDests">
            <keytype type="ident" def="typeNamePair"/>
            <valtype type="slice">
              <elmtype type="ident" def="typeNamePair"/>
            </valtype>
          </field>
          <field type="map" name="structFieldSources">
            <keytype type="ident" def="typeNamePair"/>
            <valtype type="slice">
              <elmtype type="ident" def="typeNamePair"/>
            </valtype>
          </field>
          <field type="map" name="defaultingFuncs">
            <keytype type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </keytype>
            <valtype type="selector">
              <prefix value="reflect"/>
              <item value="Value"/>
            </valtype>
          </field>
          <field type="map" name="inputFieldMappingFuncs">
            <keytype type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </keytype>
            <valtype type="ident" def="FieldMappingFunc"/>
          </field>
          <field type="map" name="inputDefaultFlags">
            <keytype type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </keytype>
            <valtype type="ident" def="FieldMatchingFlags"/>
          </field>
          <field type="ident" def="DebugLogger" name="Debug"/>
          <field type="func" name="nameFunc">
            <paramsList>
              <type type="selector">
                <prefix value="reflect"/>
                <item value="Type"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </field>
        </type>
        <type name="Scope" type="interface">
          <method name="Convert">
            <paramsList>
              <type type="interface"/>
              <type type="interface"/>
              <type type="ident" def="FieldMatchingFlags"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DefaultConvert">
            <paramsList>
              <type type="interface"/>
              <type type="interface"/>
              <type type="ident" def="FieldMatchingFlags"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SrcTag">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="reflect"/>
                <item value="StructTag"/>
              </type>
            </resultsList>
          </method>
          <method name="DestTag">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="reflect"/>
                <item value="StructTag"/>
              </type>
            </resultsList>
          </method>
          <method name="Flags">
            <paramsList/>
            <resultsList>
              <type type="ident" def="FieldMatchingFlags"/>
            </resultsList>
          </method>
          <method name="Meta">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Meta"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="FieldMappingFunc" type="func">
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="StructTag"/>
            </type>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="StructTag"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </resultsList>
        </type>
        <type type="struct" name="Meta">
          <field type="ident" def="string" name="SrcVersion"/>
          <field type="ident" def="string" name="DestVersion"/>
          <field type="ident" def="FieldMappingFunc" name="KeyNameMapping"/>
        </type>
        <type name="FieldMatchingFlags" type="ident">
          <type type="ident" def="int"/>
        </type>
      </types>
      <functions>
        <function name="NewScheme">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </resultsList>
        </function>
        <function name="Log">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="DebugLogger"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddKnownTypes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddKnownTypeWithName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="KnownTypes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="selector">
                <prefix value="reflect"/>
                <item value="Type"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="NewObject">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddConversionFuncs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddGeneratedConversionFuncs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddStructFieldConversion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddDefaultingFuncs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Recognizes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="RegisterInputDefaults">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="FieldMappingFunc"/>
            <type type="ident" def="FieldMatchingFlags"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Convert">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ConvertToVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Converter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Converter"/>
            </type>
          </resultsList>
        </function>
        <function name="DataVersionAndKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ObjectVersionAndKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetVersionAndKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Interpret">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="ident" def="SimpleMetaFactory"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateVersionAndKind">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EnforcePtr">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Value"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewGenerator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Generator"/>
          </resultsList>
        </function>
        <function name="GenerateConversionsForType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="byName"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="byName"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="byName"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WriteConversionFunctions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteConversionFunctionNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="OverwritePackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="notRegisteredErr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsNotRegisteredError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewMissingKindErr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="missingKindErr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsMissingKind">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewMissingVersionErr">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="missingVersionErr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsMissingVersion">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="EncodeToVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EqualitiesOrDie">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Equalities"/>
          </resultsList>
        </function>
        <function name="DeepCopy">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CopyInto">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gobCopier"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeInto">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheme"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewConverter">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Converter"/>
            </type>
          </resultsList>
        </function>
        <function name="Convert">
          <recvList>
            <type type="pointer">
              <type type="ident" def="scope"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="FieldMatchingFlags"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DefaultConvert">
          <recvList>
            <type type="pointer">
              <type type="ident" def="scope"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="FieldMatchingFlags"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SrcTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="scope"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="StructTag"/>
            </type>
          </resultsList>
        </function>
        <function name="DestTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="scope"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="StructTag"/>
            </type>
          </resultsList>
        </function>
        <function name="Flags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="scope"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FieldMatchingFlags"/>
          </resultsList>
        </function>
        <function name="Meta">
          <recvList>
            <type type="pointer">
              <type type="ident" def="scope"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Meta"/>
            </type>
          </resultsList>
        </function>
        <function name="RegisterConversionFunc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Converter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetStructFieldCopy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Converter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterDefaultingFunc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Converter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterInputDefaults">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Converter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="FieldMappingFunc"/>
            <type type="ident" def="FieldMatchingFlags"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsSet">
          <recvList>
            <type type="ident" def="FieldMatchingFlags"/>
          </recvList>
          <paramsList>
            <type type="ident" def="FieldMatchingFlags"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Convert">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Converter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="FieldMatchingFlags"/>
            <type type="pointer">
              <type type="ident" def="Meta"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DefaultConvert">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Converter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="FieldMatchingFlags"/>
            <type type="pointer">
              <type type="ident" def="Meta"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="DefaultMetaFactory"/>
        <name value="DestFromSource"/>
        <name value="SourceToDest"/>
        <name value="IgnoreMissingFields"/>
        <name value="AllowDifferentFieldTypeNames"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/secret/etcd">
      <types>
        <type type="struct" name="REST">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/hyperkube">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/leaky">
      <types/>
      <functions/>
      <names>
        <name value="PodInfraContainerName"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/limitranger">
      <types>
        <type name="LimitFunc" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
      </types>
      <functions>
        <function name="Admit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="limitRanger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Attributes"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewLimitRanger">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="LimitFunc"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="admission"/>
              <item value="Interface"/>
            </type>
          </resultsList>
        </function>
        <function name="Min">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Max">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Limit">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PodLimitFunc">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/util">
      <types/>
      <functions>
        <function name="IsReady">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetReady">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/resourcequota/etcd">
      <types>
        <type type="struct" name="REST">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
        <type type="struct" name="StatusREST">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="etcdgeneric"/>
              <item value="Etcd"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </resultsList>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StatusREST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/persistentvolume">
      <types>
        <type name="Registry" type="interface">
          <method name="ListPersistentVolumes">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolumeList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WatchPersistentVolumes">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetPersistentVolume">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolume"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreatePersistentVolume">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolume"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdatePersistentVolume">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PersistentVolume"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeletePersistentVolume">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NamespaceScoped">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForCreate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Validate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="AllowCreateOnUpdate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="MatchPersistentVolumes">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
          </resultsList>
        </function>
        <function name="PersistentVolumeToSelectableFields">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Set"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="StandardStorage"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Registry"/>
          </resultsList>
        </function>
        <function name="ListPersistentVolumes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchPersistentVolumes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPersistentVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreatePersistentVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdatePersistentVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeletePersistentVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Strategy"/>
        <name value="StatusStrategy"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/master">
      <types>
        <type type="struct" name="Config">
          <field type="selector" name="EtcdHelper">
            <prefix value="tools"/>
            <item value="EtcdHelper"/>
          </field>
          <field type="selector" name="EventTTL">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="MinionRegexp"/>
          <field type="selector" name="KubeletClient">
            <prefix value="client"/>
            <item value="KubeletClient"/>
          </field>
          <field type="pointer" name="PortalNet">
            <type type="selector">
              <prefix value="net"/>
              <item value="IPNet"/>
            </type>
          </field>
          <field type="ident" def="bool" name="EnableLogsSupport"/>
          <field type="ident" def="bool" name="EnableUISupport"/>
          <field type="ident" def="bool" name="EnableSwaggerSupport"/>
          <field type="ident" def="bool" name="DisableV1Beta3"/>
          <field type="ident" def="bool" name="EnableV1"/>
          <field type="ident" def="bool" name="EnableIndex"/>
          <field type="ident" def="bool" name="EnableProfiling"/>
          <field type="ident" def="string" name="APIPrefix"/>
          <field type="selector" name="CorsAllowedOriginList">
            <prefix value="util"/>
            <item value="StringList"/>
          </field>
          <field type="selector" name="Authenticator">
            <prefix value="authenticator"/>
            <item value="Request"/>
          </field>
          <field type="ident" def="bool" name="SupportsBasicAuth"/>
          <field type="selector" name="Authorizer">
            <prefix value="authorizer"/>
            <item value="Authorizer"/>
          </field>
          <field type="selector" name="AdmissionControl">
            <prefix value="admission"/>
            <item value="Interface"/>
          </field>
          <field type="ident" def="string" name="MasterServiceNamespace"/>
          <field type="selector" name="RequestContextMapper">
            <prefix value="api"/>
            <item value="RequestContextMapper"/>
          </field>
          <field type="pointer" name="RestfulContainer">
            <type type="selector">
              <prefix value="restful"/>
              <item value="Container"/>
            </type>
          </field>
          <field type="ident" def="int" name="MasterCount"/>
          <field type="ident" def="int" name="ReadOnlyPort"/>
          <field type="ident" def="int" name="ReadWritePort"/>
          <field type="ident" def="string" name="ExternalHost"/>
          <field type="selector" name="PublicAddress">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="selector" name="CacheTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="ClusterName"/>
        </type>
        <type type="struct" name="Master">
          <field type="pointer" name="portalNet">
            <type type="selector">
              <prefix value="net"/>
              <item value="IPNet"/>
            </type>
          </field>
          <field type="selector" name="cacheTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="mux">
            <prefix value="apiserver"/>
            <item value="Mux"/>
          </field>
          <field type="pointer" name="muxHelper">
            <type type="selector">
              <prefix value="apiserver"/>
              <item value="MuxHelper"/>
            </type>
          </field>
          <field type="pointer" name="handlerContainer">
            <type type="selector">
              <prefix value="restful"/>
              <item value="Container"/>
            </type>
          </field>
          <field type="pointer" name="rootWebService">
            <type type="selector">
              <prefix value="restful"/>
              <item value="WebService"/>
            </type>
          </field>
          <field type="ident" def="bool" name="enableLogsSupport"/>
          <field type="ident" def="bool" name="enableUISupport"/>
          <field type="ident" def="bool" name="enableSwaggerSupport"/>
          <field type="ident" def="bool" name="enableProfiling"/>
          <field type="ident" def="string" name="apiPrefix"/>
          <field type="selector" name="corsAllowedOriginList">
            <prefix value="util"/>
            <item value="StringList"/>
          </field>
          <field type="selector" name="authenticator">
            <prefix value="authenticator"/>
            <item value="Request"/>
          </field>
          <field type="selector" name="authorizer">
            <prefix value="authorizer"/>
            <item value="Authorizer"/>
          </field>
          <field type="selector" name="admissionControl">
            <prefix value="admission"/>
            <item value="Interface"/>
          </field>
          <field type="ident" def="int" name="masterCount"/>
          <field type="ident" def="bool" name="v1beta3"/>
          <field type="ident" def="bool" name="v1"/>
          <field type="selector" name="requestContextMapper">
            <prefix value="api"/>
            <item value="RequestContextMapper"/>
          </field>
          <field type="ident" def="string" name="externalHost"/>
          <field type="selector" name="clusterIP">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="int" name="publicReadOnlyPort"/>
          <field type="ident" def="int" name="publicReadWritePort"/>
          <field type="selector" name="serviceReadOnlyIP">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="int" name="serviceReadOnlyPort"/>
          <field type="selector" name="serviceReadWriteIP">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="int" name="serviceReadWritePort"/>
          <field type="pointer" name="masterServices">
            <type type="selector">
              <prefix value="util"/>
              <item value="Runner"/>
            </type>
          </field>
          <field type="map" name="storage">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="rest"/>
              <item value="Storage"/>
            </valtype>
          </field>
          <field type="selector" name="nodeRegistry">
            <prefix value="minion"/>
            <item value="Registry"/>
          </field>
          <field type="selector" name="namespaceRegistry">
            <prefix value="namespace"/>
            <item value="Registry"/>
          </field>
          <field type="selector" name="serviceRegistry">
            <prefix value="service"/>
            <item value="Registry"/>
          </field>
          <field type="selector" name="endpointRegistry">
            <prefix value="endpoint"/>
            <item value="Registry"/>
          </field>
          <field type="selector" name="Handler">
            <prefix value="http"/>
            <item value="Handler"/>
          </field>
          <field type="selector" name="InsecureHandler">
            <prefix value="http"/>
            <item value="Handler"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewEtcdHelper">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdGetSet"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="tools"/>
              <item value="EtcdHelper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Master"/>
            </type>
          </resultsList>
        </function>
        <function name="HandleWithAuth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Master"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HandleFuncWithAuth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Master"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="http"/>
                  <item value="ResponseWriter"/>
                </type>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="Request"/>
                  </type>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewHandlerContainer">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="ServeMux"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="restful"/>
                <item value="Container"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="InstallSwaggerAPI">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Master"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="DefaultEtcdPathPrefix"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler">
      <types>
        <type name="Binder" type="interface">
          <method name="Bind">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Binding"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="SystemModeler" type="interface">
          <method name="AssumePod">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ForgetPod">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ForgetPodByKey">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="LockedAction">
            <paramsList>
              <type type="func">
                <paramsList/>
                <resultsList/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Scheduler">
          <field type="pointer" name="config">
            <type type="ident" def="Config"/>
          </field>
        </type>
        <type type="struct" name="Config">
          <field type="ident" def="SystemModeler" name="Modeler"/>
          <field type="selector" name="MinionLister">
            <prefix value="scheduler"/>
            <item value="MinionLister"/>
          </field>
          <field type="selector" name="Algorithm">
            <prefix value="scheduler"/>
            <item value="Scheduler"/>
          </field>
          <field type="ident" def="Binder" name="Binder"/>
          <field type="func" name="NextPod">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </resultsList>
          </field>
          <field type="func" name="Error">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </paramsList>
            <resultsList/>
          </field>
          <field type="selector" name="Recorder">
            <prefix value="record"/>
            <item value="EventRecorder"/>
          </field>
          <field type="channel" dir="3" name="StopEverything">
            <type type="struct" name=""/>
          </field>
        </type>
        <type name="ExtendedPodLister" type="interface">
          <method name="Exists">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="FakeModeler">
          <field type="func" name="AssumePodFunc">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </field>
          <field type="func" name="ForgetPodFunc">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </field>
          <field type="func" name="ForgetPodByKeyFunc">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </field>
          <field type="ident" def="actionLocker" name=""/>
        </type>
        <type type="struct" name="SimpleModeler">
          <field type="ident" def="ExtendedPodLister" name="queuedPods"/>
          <field type="ident" def="ExtendedPodLister" name="scheduledPods"/>
          <field type="pointer" name="assumedPods">
            <type type="selector">
              <prefix value="cache"/>
              <item value="StoreToPodLister"/>
            </type>
          </field>
          <field type="ident" def="actionLocker" name=""/>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Scheduler"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scheduler"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="LockedAction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="actionLocker"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AssumePod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeModeler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ForgetPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeModeler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ForgetPodByKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeModeler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewSimpleModeler">
          <recvList/>
          <paramsList>
            <type type="ident" def="ExtendedPodLister"/>
            <type type="ident" def="ExtendedPodLister"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SimpleModeler"/>
            </type>
          </resultsList>
        </function>
        <function name="AssumePod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SimpleModeler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ForgetPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SimpleModeler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ForgetPodByKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SimpleModeler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PodLister">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SimpleModeler"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="algorithm"/>
              <item value="PodLister"/>
            </type>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="ident" def="simpleModelerPods"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/auth/authenticator">
      <types>
        <type name="Token" type="interface">
          <method name="AuthenticateToken">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="user"/>
                <item value="Info"/>
              </type>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Request" type="interface">
          <method name="AuthenticateRequest">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="user"/>
                <item value="Info"/>
              </type>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Password" type="interface">
          <method name="AuthenticatePassword">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="user"/>
                <item value="Info"/>
              </type>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="TokenFunc" type="func">
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="RequestFunc" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="PasswordFunc" type="func">
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
      </types>
      <functions>
        <function name="AuthenticateToken">
          <recvList>
            <type type="ident" def="TokenFunc"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AuthenticateRequest">
          <recvList>
            <type type="ident" def="RequestFunc"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AuthenticatePassword">
          <recvList>
            <type type="ident" def="PasswordFunc"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/secret">
      <types>
        <type name="Registry" type="interface">
          <method name="ListSecrets">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="SecretList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WatchSecrets">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetSecret">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Secret"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateSecret">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Secret"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Secret"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateSecret">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Secret"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Secret"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteSecret">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NamespaceScoped">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForCreate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Validate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="AllowCreateOnUpdate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrepareForUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateUpdate">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="fielderrors"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="Matcher">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="generic"/>
              <item value="Matcher"/>
            </type>
          </resultsList>
        </function>
        <function name="SelectableFields">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Set"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRegistry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="rest"/>
              <item value="StandardStorage"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Registry"/>
          </resultsList>
        </function>
        <function name="ListSecrets">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="SecretList"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchSecrets">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetSecret">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateSecret">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateSecret">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteSecret">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Strategy"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/container">
      <types>
        <type name="RuntimeCache" type="interface">
          <method name="GetPods">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="ident" def="Pod"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ForceUpdateIfOlder">
            <paramsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Version" type="interface">
          <method name="Compare">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="int"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="Runtime" type="interface">
          <method name="Version">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Version"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetPods">
            <paramsList>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="ident" def="Pod"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SyncPod">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="ident" def="Pod"/>
              <type type="selector">
                <prefix value="api"/>
                <item value="PodStatus"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="KillPod">
            <paramsList>
              <type type="ident" def="Pod"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetPodStatus">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="PodStatus"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RunInContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ExecInContainer">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="Reader"/>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="WriteCloser"/>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="WriteCloser"/>
              </type>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="PortForward">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Pod"/>
              </type>
              <type type="ident" def="uint16"/>
              <type type="selector">
                <prefix value="io"/>
                <item value="ReadWriteCloser"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="PullImage">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="IsImagePresent">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ListImages">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="Image"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RemoveImage">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetContainerLogs">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="selector">
                <prefix value="io"/>
                <item value="Writer"/>
              </type>
              <type type="selector">
                <prefix value="io"/>
                <item value="Writer"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="RuntimeHooks" type="interface">
          <method name="ShouldPullImage">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Container"/>
                </type>
              </type>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="ReportImagePull">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Container"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Pod">
          <field type="selector" name="ID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="slice" name="Containers">
            <elmtype type="pointer">
              <type type="ident" def="Container"/>
            </elmtype>
          </field>
          <field type="selector" name="Status">
            <prefix value="api"/>
            <item value="PodStatus"/>
          </field>
        </type>
        <type type="struct" name="ContainerID">
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="ID"/>
        </type>
        <type type="struct" name="Container">
          <field type="selector" name="ID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Image"/>
          <field type="ident" def="uint64" name="Hash"/>
          <field type="ident" def="int64" name="Created"/>
        </type>
        <type type="struct" name="Image">
          <field type="ident" def="string" name="ID"/>
          <field type="slice" name="Tags">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int64" name="Size"/>
        </type>
        <type type="struct" name="RunContainerOptions">
          <field type="slice" name="Envs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Binds">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="PodContainerDir"/>
          <field type="slice" name="DNS">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="DNSSearch">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="NetMode"/>
          <field type="ident" def="string" name="IpcMode"/>
          <field type="ident" def="string" name="CgroupParent"/>
        </type>
        <type name="Pods" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="Pod"/>
          </elmtype>
        </type>
        <type type="struct" name="ReadinessManager">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="states">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="bool"/>
          </field>
        </type>
        <type name="OSInterface" type="interface">
          <method name="Mkdir">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="os"/>
                <item value="FileMode"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Symlink">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="RealOS"/>
        <type type="struct" name="FakeOS"/>
        <type name="HandlerRunner" type="interface">
          <method name="Run">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Container"/>
                </type>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Handler"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="RunContainerOptionsGenerator" type="interface">
          <method name="GenerateRunContainerOptions">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Container"/>
                </type>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="RunContainerOptions"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="FakeRuntime">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="slice" name="CalledFunctions">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Podlist">
            <elmtype type="pointer">
              <type type="ident" def="Pod"/>
            </elmtype>
          </field>
          <field type="slice" name="ContainerList">
            <elmtype type="pointer">
              <type type="ident" def="Container"/>
            </elmtype>
          </field>
          <field type="selector" name="PodStatus">
            <prefix value="api"/>
            <item value="PodStatus"/>
          </field>
          <field type="slice" name="StartedPods">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="KilledPods">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="StartedContainers">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="KilledContainers">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="map" name="VersionInfo">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="error" name="Err"/>
        </type>
        <type type="struct" name="FakeRuntimeCache">
          <field type="ident" def="podsGetter" name="getter"/>
        </type>
        <type type="struct" name="RefManager">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="containerIDToRef">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewRuntimeCache">
          <recvList/>
          <paramsList>
            <type type="ident" def="podsGetter"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="RuntimeCache"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtimeCache"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Pod"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ForceUpdateIfOlder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="runtimeCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="BuildContainerID">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ContainerID"/>
          </resultsList>
        </function>
        <function name="ParseString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ContainerID"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ContainerID"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ContainerID"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ContainerID"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FindPodByID">
          <recvList>
            <type type="ident" def="Pods"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Pod"/>
          </resultsList>
        </function>
        <function name="FindPodByFullName">
          <recvList>
            <type type="ident" def="Pods"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Pod"/>
          </resultsList>
        </function>
        <function name="FindPod">
          <recvList>
            <type type="ident" def="Pods"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Pod"/>
          </resultsList>
        </function>
        <function name="FindContainerByName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Pod"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Container"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPodFullName">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="BuildPodFullName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ParsePodFullName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GenerateContainerRef">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewReadinessManager">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ReadinessManager"/>
            </type>
          </resultsList>
        </function>
        <function name="GetReadiness">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReadinessManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetReadiness">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReadinessManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RemoveReadiness">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReadinessManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Mkdir">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileMode"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Symlink">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Mkdir">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileMode"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Symlink">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TrimRuntimePrefix">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ShouldContainerBeRestarted">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodStatus"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="ReadinessManager"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewFakeRuntimeCache">
          <recvList/>
          <paramsList>
            <type type="ident" def="podsGetter"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="RuntimeCache"/>
          </resultsList>
        </function>
        <function name="GetPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntimeCache"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Pod"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ForceUpdateIfOlder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntimeCache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ClearCalls">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="AssertCalls">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AssertStartedPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AssertKilledPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AssertStartedContainers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AssertKilledContainers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPods">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Pod"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SyncPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="Pod"/>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodStatus"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="KillPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RunContainerInPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Container"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </valtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="KillContainerInPod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Container"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPodStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Pod"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="PodStatus"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetContainers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeRuntime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Container"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewRefManager">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RefManager"/>
            </type>
          </resultsList>
        </function>
        <function name="SetRef">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RefManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ClearRef">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RefManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetRef">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RefManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta2">
      <types>
        <type type="struct" name="Volume">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="VolumeSource" name="Source"/>
        </type>
        <type type="struct" name="VolumeSource">
          <field type="pointer" name="HostDir">
            <type type="ident" def="HostPathVolumeSource"/>
          </field>
          <field type="pointer" name="EmptyDir">
            <type type="ident" def="EmptyDirVolumeSource"/>
          </field>
          <field type="pointer" name="GCEPersistentDisk">
            <type type="ident" def="GCEPersistentDiskVolumeSource"/>
          </field>
          <field type="pointer" name="AWSElasticBlockStore">
            <type type="ident" def="AWSElasticBlockStoreVolumeSource"/>
          </field>
          <field type="pointer" name="GitRepo">
            <type type="ident" def="GitRepoVolumeSource"/>
          </field>
          <field type="pointer" name="Secret">
            <type type="ident" def="SecretVolumeSource"/>
          </field>
          <field type="pointer" name="NFS">
            <type type="ident" def="NFSVolumeSource"/>
          </field>
          <field type="pointer" name="ISCSI">
            <type type="ident" def="ISCSIVolumeSource"/>
          </field>
          <field type="pointer" name="Glusterfs">
            <type type="ident" def="GlusterfsVolumeSource"/>
          </field>
          <field type="pointer" name="PersistentVolumeClaimVolumeSource">
            <type type="ident" def="PersistentVolumeClaimVolumeSource"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeSource">
          <field type="pointer" name="GCEPersistentDisk">
            <type type="ident" def="GCEPersistentDiskVolumeSource"/>
          </field>
          <field type="pointer" name="AWSElasticBlockStore">
            <type type="ident" def="AWSElasticBlockStoreVolumeSource"/>
          </field>
          <field type="pointer" name="HostPath">
            <type type="ident" def="HostPathVolumeSource"/>
          </field>
          <field type="pointer" name="Glusterfs">
            <type type="ident" def="GlusterfsVolumeSource"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaimVolumeSource">
          <field type="ident" def="string" name="ClaimName"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="PersistentVolume">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="PersistentVolumeSpec" name="Spec"/>
          <field type="ident" def="PersistentVolumeStatus" name="Status"/>
        </type>
        <type type="struct" name="PersistentVolumeSpec">
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="ident" def="PersistentVolumeSource" name=""/>
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="pointer" name="ClaimRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeStatus">
          <field type="ident" def="PersistentVolumePhase" name="Phase"/>
        </type>
        <type type="struct" name="PersistentVolumeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PersistentVolume"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaim">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="PersistentVolumeClaimSpec" name="Spec"/>
          <field type="ident" def="PersistentVolumeClaimStatus" name="Status"/>
        </type>
        <type type="struct" name="PersistentVolumeClaimList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="PersistentVolumeClaim"/>
          </field>
        </type>
        <type type="struct" name="PersistentVolumeClaimSpec">
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="ident" def="ResourceRequirements" name="Resources"/>
        </type>
        <type type="struct" name="PersistentVolumeClaimStatus">
          <field type="ident" def="PersistentVolumeClaimPhase" name="Phase"/>
          <field type="slice" name="AccessModes">
            <elmtype type="ident" def="AccessModeType"/>
          </field>
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="pointer" name="VolumeRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type name="AccessModeType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PersistentVolumePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PersistentVolumeClaimPhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="HostPathVolumeSource">
          <field type="ident" def="string" name="Path"/>
        </type>
        <type type="struct" name="EmptyDirVolumeSource">
          <field type="ident" def="StorageType" name="Medium"/>
        </type>
        <type name="StorageType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="SecretVolumeSource">
          <field type="ident" def="ObjectReference" name="Target"/>
        </type>
        <type name="Protocol" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ContainerPort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="HostPort"/>
          <field type="ident" def="int" name="ContainerPort"/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="ident" def="string" name="HostIP"/>
        </type>
        <type type="struct" name="GCEPersistentDiskVolumeSource">
          <field type="ident" def="string" name="PDName"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="int" name="Partition"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="AWSElasticBlockStoreVolumeSource">
          <field type="ident" def="string" name="VolumeID"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="int" name="Partition"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="GitRepoVolumeSource">
          <field type="ident" def="string" name="Repository"/>
          <field type="ident" def="string" name="Revision"/>
        </type>
        <type type="struct" name="ISCSIVolumeSource">
          <field type="ident" def="string" name="TargetPortal"/>
          <field type="ident" def="string" name="IQN"/>
          <field type="ident" def="int" name="Lun"/>
          <field type="ident" def="string" name="FSType"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="GlusterfsVolumeSource">
          <field type="ident" def="string" name="EndpointsName"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="VolumeMount">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="bool" name="ReadOnly"/>
          <field type="ident" def="string" name="MountPath"/>
        </type>
        <type type="struct" name="EnvVar">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Value"/>
          <field type="pointer" name="ValueFrom">
            <type type="ident" def="EnvVarSource"/>
          </field>
        </type>
        <type type="struct" name="EnvVarSource">
          <field type="pointer" name="FieldRef">
            <type type="ident" def="ObjectFieldSelector"/>
          </field>
        </type>
        <type type="struct" name="ObjectFieldSelector">
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="FieldPath"/>
        </type>
        <type type="struct" name="HTTPGetAction">
          <field type="ident" def="string" name="Path"/>
          <field type="selector" name="Port">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
          <field type="ident" def="string" name="Host"/>
        </type>
        <type type="struct" name="TCPSocketAction">
          <field type="selector" name="Port">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
        </type>
        <type type="struct" name="ExecAction">
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="LivenessProbe">
          <field type="pointer" name="HTTPGet">
            <type type="ident" def="HTTPGetAction"/>
          </field>
          <field type="pointer" name="TCPSocket">
            <type type="ident" def="TCPSocketAction"/>
          </field>
          <field type="pointer" name="Exec">
            <type type="ident" def="ExecAction"/>
          </field>
          <field type="ident" def="int64" name="InitialDelaySeconds"/>
          <field type="ident" def="int64" name="TimeoutSeconds"/>
        </type>
        <type name="PullPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="CapabilityType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Capabilities">
          <field type="slice" name="Add">
            <elmtype type="ident" def="CapabilityType"/>
          </field>
          <field type="slice" name="Drop">
            <elmtype type="ident" def="CapabilityType"/>
          </field>
        </type>
        <type type="struct" name="ResourceRequirements">
          <field type="ident" def="ResourceList" name="Limits"/>
          <field type="ident" def="ResourceList" name="Requests"/>
        </type>
        <type type="struct" name="Container">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Image"/>
          <field type="slice" name="Entrypoint">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="WorkingDir"/>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="ContainerPort"/>
          </field>
          <field type="slice" name="Env">
            <elmtype type="ident" def="EnvVar"/>
          </field>
          <field type="ident" def="ResourceRequirements" name="Resources"/>
          <field type="ident" def="int" name="CPU"/>
          <field type="ident" def="int64" name="Memory"/>
          <field type="slice" name="VolumeMounts">
            <elmtype type="ident" def="VolumeMount"/>
          </field>
          <field type="pointer" name="LivenessProbe">
            <type type="ident" def="LivenessProbe"/>
          </field>
          <field type="pointer" name="ReadinessProbe">
            <type type="ident" def="LivenessProbe"/>
          </field>
          <field type="pointer" name="Lifecycle">
            <type type="ident" def="Lifecycle"/>
          </field>
          <field type="ident" def="string" name="TerminationMessagePath"/>
          <field type="ident" def="bool" name="Privileged"/>
          <field type="ident" def="PullPolicy" name="ImagePullPolicy"/>
          <field type="ident" def="Capabilities" name="Capabilities"/>
          <field type="pointer" name="SecurityContext">
            <type type="ident" def="SecurityContext"/>
          </field>
        </type>
        <type type="struct" name="Handler">
          <field type="pointer" name="Exec">
            <type type="ident" def="ExecAction"/>
          </field>
          <field type="pointer" name="HTTPGet">
            <type type="ident" def="HTTPGetAction"/>
          </field>
          <field type="pointer" name="TCPSocket">
            <type type="ident" def="TCPSocketAction"/>
          </field>
        </type>
        <type type="struct" name="Lifecycle">
          <field type="pointer" name="PostStart">
            <type type="ident" def="Handler"/>
          </field>
          <field type="pointer" name="PreStop">
            <type type="ident" def="Handler"/>
          </field>
        </type>
        <type type="struct" name="TypeMeta">
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="ID"/>
          <field type="selector" name="UID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="selector" name="CreationTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="SelfLink"/>
          <field type="ident" def="uint64" name="ResourceVersion"/>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="pointer" name="DeletionTimestamp">
            <type type="selector">
              <prefix value="util"/>
              <item value="Time"/>
            </type>
          </field>
          <field type="ident" def="string" name="GenerateName"/>
          <field type="map" name="Annotations">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type name="ConditionStatus" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="PodStatus" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ContainerStateWaiting">
          <field type="ident" def="string" name="Reason"/>
        </type>
        <type type="struct" name="ContainerStateRunning">
          <field type="selector" name="StartedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="ContainerStateTerminated">
          <field type="ident" def="int" name="ExitCode"/>
          <field type="ident" def="int" name="Signal"/>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
          <field type="selector" name="StartedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="FinishedAt">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="ContainerID"/>
        </type>
        <type type="struct" name="ContainerState">
          <field type="pointer" name="Waiting">
            <type type="ident" def="ContainerStateWaiting"/>
          </field>
          <field type="pointer" name="Running">
            <type type="ident" def="ContainerStateRunning"/>
          </field>
          <field type="pointer" name="Termination">
            <type type="ident" def="ContainerStateTerminated"/>
          </field>
        </type>
        <type type="struct" name="ContainerStatus">
          <field type="ident" def="ContainerState" name="State"/>
          <field type="ident" def="ContainerState" name="LastTerminationState"/>
          <field type="ident" def="bool" name="Ready"/>
          <field type="ident" def="int" name="RestartCount"/>
          <field type="ident" def="string" name="Image"/>
          <field type="ident" def="string" name="ImageID"/>
          <field type="ident" def="string" name="ContainerID"/>
        </type>
        <type name="PodConditionKind" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="PodCondition">
          <field type="ident" def="PodConditionKind" name="Kind"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
        </type>
        <type name="PodInfo" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="ContainerStatus"/>
        </type>
        <type type="struct" name="PodContainerInfo">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="PodInfo" name="ContainerInfo"/>
        </type>
        <type type="struct" name="RestartPolicyAlways"/>
        <type type="struct" name="RestartPolicyOnFailure"/>
        <type type="struct" name="RestartPolicyNever"/>
        <type type="struct" name="RestartPolicy">
          <field type="pointer" name="Always">
            <type type="ident" def="RestartPolicyAlways"/>
          </field>
          <field type="pointer" name="OnFailure">
            <type type="ident" def="RestartPolicyOnFailure"/>
          </field>
          <field type="pointer" name="Never">
            <type type="ident" def="RestartPolicyNever"/>
          </field>
        </type>
        <type type="struct" name="PodState">
          <field type="ident" def="ContainerManifest" name="Manifest"/>
          <field type="ident" def="PodStatus" name="Status"/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="PodCondition"/>
          </field>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Host"/>
          <field type="ident" def="string" name="HostIP"/>
          <field type="ident" def="string" name="PodIP"/>
          <field type="ident" def="PodInfo" name="Info"/>
        </type>
        <type type="struct" name="PodStatusResult">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="PodState" name="State"/>
        </type>
        <type type="struct" name="PodList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Pod"/>
          </field>
        </type>
        <type type="struct" name="Pod">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="PodState" name="DesiredState"/>
          <field type="ident" def="PodState" name="CurrentState"/>
          <field type="map" name="NodeSelector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="ReplicationControllerState">
          <field type="ident" def="int" name="Replicas"/>
          <field type="map" name="ReplicaSelector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="PodTemplate" name="PodTemplate"/>
        </type>
        <type type="struct" name="ReplicationControllerList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ReplicationController"/>
          </field>
        </type>
        <type type="struct" name="ReplicationController">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ReplicationControllerState" name="DesiredState"/>
          <field type="ident" def="ReplicationControllerState" name="CurrentState"/>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="PodTemplate">
          <field type="ident" def="PodState" name="DesiredState"/>
          <field type="map" name="NodeSelector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Annotations">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type name="AffinityType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ServiceList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Service"/>
          </field>
        </type>
        <type type="struct" name="Service">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="string" name="PortName"/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="selector" name="ContainerPort">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Selector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="CreateExternalLoadBalancer"/>
          <field type="slice" name="PublicIPs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="PortalIP"/>
          <field type="ident" def="int" name="ProxyPort"/>
          <field type="ident" def="AffinityType" name="SessionAffinity"/>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="ServicePort"/>
          </field>
        </type>
        <type type="struct" name="ServicePort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="ident" def="int" name="Port"/>
          <field type="selector" name="ContainerPort">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </field>
        </type>
        <type type="struct" name="EndpointObjectReference">
          <field type="ident" def="string" name="Endpoint"/>
          <field type="ident" def="ObjectReference" name=""/>
        </type>
        <type type="struct" name="Endpoints">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="Protocol" name="Protocol"/>
          <field type="slice" name="Endpoints">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="TargetRefs">
            <elmtype type="ident" def="EndpointObjectReference"/>
          </field>
          <field type="slice" name="Subsets">
            <elmtype type="ident" def="EndpointSubset"/>
          </field>
        </type>
        <type type="struct" name="EndpointSubset">
          <field type="slice" name="Addresses">
            <elmtype type="ident" def="EndpointAddress"/>
          </field>
          <field type="slice" name="Ports">
            <elmtype type="ident" def="EndpointPort"/>
          </field>
        </type>
        <type type="struct" name="EndpointAddress">
          <field type="ident" def="string" name="IP"/>
          <field type="pointer" name="TargetRef">
            <type type="ident" def="ObjectReference"/>
          </field>
        </type>
        <type type="struct" name="EndpointPort">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="Protocol" name="Protocol"/>
        </type>
        <type type="struct" name="EndpointsList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Endpoints"/>
          </field>
        </type>
        <type type="struct" name="NodeSystemInfo">
          <field type="ident" def="string" name="MachineID"/>
          <field type="ident" def="string" name="SystemUUID"/>
          <field type="ident" def="string" name="BootID"/>
          <field type="ident" def="string" name="KernelVersion"/>
          <field type="ident" def="string" name="OsImage"/>
          <field type="ident" def="string" name="ContainerRuntimeVersion"/>
          <field type="ident" def="string" name="KubeletVersion"/>
          <field type="ident" def="string" name="KubeProxyVersion"/>
        </type>
        <type type="struct" name="NodeStatus">
          <field type="ident" def="NodePhase" name="Phase"/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="NodeCondition"/>
          </field>
          <field type="slice" name="Addresses">
            <elmtype type="ident" def="NodeAddress"/>
          </field>
          <field type="ident" def="NodeSystemInfo" name="NodeInfo"/>
        </type>
        <type type="struct" name="NodeInfo">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ResourceList" name="Capacity"/>
          <field type="ident" def="NodeSystemInfo" name=""/>
        </type>
        <type name="NodePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="NodeConditionKind" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NodeCondition">
          <field type="ident" def="NodeConditionKind" name="Kind"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
          <field type="selector" name="LastProbeTime">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="LastTransitionTime">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
        </type>
        <type name="NodeAddressType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NodeAddress">
          <field type="ident" def="NodeAddressType" name="Type"/>
          <field type="ident" def="string" name="Address"/>
        </type>
        <type type="struct" name="NodeResources">
          <field type="ident" def="ResourceList" name="Capacity"/>
        </type>
        <type name="ResourceName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ResourceList" type="map">
          <keytype type="ident" def="ResourceName"/>
          <valtype type="selector">
            <prefix value="util"/>
            <item value="IntOrString"/>
          </valtype>
        </type>
        <type type="struct" name="Minion">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="HostIP"/>
          <field type="ident" def="NodeResources" name="NodeResources"/>
          <field type="ident" def="string" name="PodCIDR"/>
          <field type="ident" def="bool" name="Unschedulable"/>
          <field type="ident" def="NodeStatus" name="Status"/>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="ExternalID"/>
        </type>
        <type type="struct" name="MinionList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Minion"/>
          </field>
        </type>
        <type name="FinalizerName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="NamespaceSpec">
          <field type="slice" name="Finalizers">
            <elmtype type="ident" def="FinalizerName"/>
          </field>
        </type>
        <type type="struct" name="NamespaceStatus">
          <field type="ident" def="NamespacePhase" name="Phase"/>
        </type>
        <type name="NamespacePhase" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Namespace">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="NamespaceSpec" name="Spec"/>
          <field type="ident" def="NamespaceStatus" name="Status"/>
        </type>
        <type type="struct" name="NamespaceList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Namespace"/>
          </field>
        </type>
        <type type="struct" name="Binding">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="PodID"/>
          <field type="ident" def="string" name="Host"/>
        </type>
        <type type="struct" name="DeleteOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="pointer" name="GracePeriodSeconds">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="ListOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="LabelSelector"/>
          <field type="ident" def="string" name="FieldSelector"/>
          <field type="ident" def="bool" name="Watch"/>
          <field type="ident" def="string" name="ResourceVersion"/>
        </type>
        <type type="struct" name="PodLogOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Container"/>
          <field type="ident" def="bool" name="Follow"/>
        </type>
        <type type="struct" name="PodExecOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="bool" name="Stdin"/>
          <field type="ident" def="bool" name="Stdout"/>
          <field type="ident" def="bool" name="Stderr"/>
          <field type="ident" def="bool" name="TTY"/>
          <field type="ident" def="string" name="Container"/>
          <field type="slice" name="Command">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="PodProxyOptions">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Path"/>
        </type>
        <type type="struct" name="Status">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="StatusReason" name="Reason"/>
          <field type="pointer" name="Details">
            <type type="ident" def="StatusDetails"/>
          </field>
          <field type="ident" def="int" name="Code"/>
        </type>
        <type type="struct" name="StatusDetails">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Kind"/>
          <field type="slice" name="Causes">
            <elmtype type="ident" def="StatusCause"/>
          </field>
          <field type="ident" def="int" name="RetryAfterSeconds"/>
        </type>
        <type name="StatusReason" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="StatusCause">
          <field type="ident" def="CauseType" name="Type"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Field"/>
        </type>
        <type name="CauseType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ObjectReference">
          <field type="ident" def="string" name="Kind"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="ID"/>
          <field type="selector" name="UID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="ident" def="string" name="APIVersion"/>
          <field type="ident" def="string" name="ResourceVersion"/>
          <field type="ident" def="string" name="FieldPath"/>
        </type>
        <type type="struct" name="SerializedReference">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectReference" name="Reference"/>
        </type>
        <type type="struct" name="Event">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="ObjectReference" name="InvolvedObject"/>
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="string" name="Reason"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Source"/>
          <field type="ident" def="string" name="Host"/>
          <field type="selector" name="Timestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="FirstTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="LastTimestamp">
            <prefix value="util"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="int" name="Count"/>
        </type>
        <type type="struct" name="EventList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Event"/>
          </field>
        </type>
        <type type="struct" name="ContainerManifest">
          <field type="ident" def="string" name="Version"/>
          <field type="ident" def="string" name="ID"/>
          <field type="selector" name="UUID">
            <prefix value="types"/>
            <item value="UID"/>
          </field>
          <field type="slice" name="Volumes">
            <elmtype type="ident" def="Volume"/>
          </field>
          <field type="slice" name="Containers">
            <elmtype type="ident" def="Container"/>
          </field>
          <field type="ident" def="RestartPolicy" name="RestartPolicy"/>
          <field type="pointer" name="TerminationGracePeriodSeconds">
            <type type="ident" def="int64"/>
          </field>
          <field type="ident" def="DNSPolicy" name="DNSPolicy"/>
          <field type="ident" def="bool" name="HostNetwork"/>
        </type>
        <type type="struct" name="ContainerManifestList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ContainerManifest"/>
          </field>
        </type>
        <type name="DNSPolicy" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="PodSpec">
          <field type="slice" name="Volumes">
            <elmtype type="ident" def="Volume"/>
          </field>
          <field type="slice" name="Containers">
            <elmtype type="ident" def="Container"/>
          </field>
          <field type="ident" def="RestartPolicy" name="RestartPolicy"/>
          <field type="ident" def="DNSPolicy" name="DNSPolicy"/>
          <field type="map" name="NodeSelector">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Host"/>
          <field type="ident" def="bool" name="HostNetwork"/>
        </type>
        <type type="struct" name="List">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="selector">
              <prefix value="runtime"/>
              <item value="RawExtension"/>
            </elmtype>
          </field>
        </type>
        <type name="LimitType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="LimitRangeItem">
          <field type="ident" def="LimitType" name="Type"/>
          <field type="ident" def="ResourceList" name="Max"/>
          <field type="ident" def="ResourceList" name="Min"/>
          <field type="ident" def="ResourceList" name="Default"/>
        </type>
        <type type="struct" name="LimitRangeSpec">
          <field type="slice" name="Limits">
            <elmtype type="ident" def="LimitRangeItem"/>
          </field>
        </type>
        <type type="struct" name="LimitRange">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="LimitRangeSpec" name="Spec"/>
        </type>
        <type type="struct" name="LimitRangeList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="LimitRange"/>
          </field>
        </type>
        <type type="struct" name="ResourceQuotaSpec">
          <field type="ident" def="ResourceList" name="Hard"/>
        </type>
        <type type="struct" name="ResourceQuotaStatus">
          <field type="ident" def="ResourceList" name="Hard"/>
          <field type="ident" def="ResourceList" name="Used"/>
        </type>
        <type type="struct" name="ResourceQuota">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="map" name="Labels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="ResourceQuotaSpec" name="Spec"/>
          <field type="ident" def="ResourceQuotaStatus" name="Status"/>
        </type>
        <type type="struct" name="ResourceQuotaList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ResourceQuota"/>
          </field>
        </type>
        <type type="struct" name="NFSVolumeSource">
          <field type="ident" def="string" name="Server"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="ReadOnly"/>
        </type>
        <type type="struct" name="Secret">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="map" name="Data">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="ident" def="byte"/>
            </valtype>
          </field>
          <field type="ident" def="SecretType" name="Type"/>
        </type>
        <type name="SecretType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="SecretList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="Secret"/>
          </field>
        </type>
        <type name="ComponentConditionType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="ComponentCondition">
          <field type="ident" def="ComponentConditionType" name="Type"/>
          <field type="ident" def="ConditionStatus" name="Status"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Error"/>
        </type>
        <type type="struct" name="ComponentStatus">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Conditions">
            <elmtype type="ident" def="ComponentCondition"/>
          </field>
        </type>
        <type type="struct" name="ComponentStatusList">
          <field type="ident" def="TypeMeta" name=""/>
          <field type="slice" name="Items">
            <elmtype type="ident" def="ComponentStatus"/>
          </field>
        </type>
        <type type="struct" name="SecurityContext">
          <field type="pointer" name="Capabilities">
            <type type="ident" def="Capabilities"/>
          </field>
          <field type="pointer" name="Privileged">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="SELinuxOptions">
            <type type="ident" def="SELinuxOptions"/>
          </field>
          <field type="pointer" name="RunAsUser">
            <type type="ident" def="int64"/>
          </field>
        </type>
        <type type="struct" name="SELinuxOptions">
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="Role"/>
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="Level"/>
        </type>
      </types>
      <functions>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="IsAnAPIObject">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="ReadWriteOnce"/>
        <name value="ReadOnlyMany"/>
        <name value="ReadWriteMany"/>
        <name value="VolumePending"/>
        <name value="VolumeAvailable"/>
        <name value="VolumeBound"/>
        <name value="VolumeReleased"/>
        <name value="ClaimPending"/>
        <name value="ClaimBound"/>
        <name value="StorageTypeDefault"/>
        <name value="StorageTypeMemory"/>
        <name value="ProtocolTCP"/>
        <name value="ProtocolUDP"/>
        <name value="PullAlways"/>
        <name value="PullNever"/>
        <name value="PullIfNotPresent"/>
        <name value="TerminationMessagePathDefault"/>
        <name value="ConditionFull"/>
        <name value="ConditionNone"/>
        <name value="ConditionUnknown"/>
        <name value="PodWaiting"/>
        <name value="PodRunning"/>
        <name value="PodTerminated"/>
        <name value="PodUnknown"/>
        <name value="PodSucceeded"/>
        <name value="PodReady"/>
        <name value="AffinityTypeClientIP"/>
        <name value="AffinityTypeNone"/>
        <name value="PortalIPNone"/>
        <name value="NodePending"/>
        <name value="NodeRunning"/>
        <name value="NodeTerminated"/>
        <name value="NodeReachable"/>
        <name value="NodeReady"/>
        <name value="NodeSchedulable"/>
        <name value="NodeHostName"/>
        <name value="NodeExternalIP"/>
        <name value="NodeInternalIP"/>
        <name value="ResourceCPU"/>
        <name value="ResourceMemory"/>
        <name value="ResourceStorage"/>
        <name value="FinalizerKubernetes"/>
        <name value="NamespaceActive"/>
        <name value="NamespaceTerminating"/>
        <name value="StatusSuccess"/>
        <name value="StatusFailure"/>
        <name value="StatusReasonUnknown"/>
        <name value="StatusReasonNotFound"/>
        <name value="StatusReasonAlreadyExists"/>
        <name value="StatusReasonConflict"/>
        <name value="StatusReasonInvalid"/>
        <name value="StatusReasonServerTimeout"/>
        <name value="CauseTypeFieldValueNotFound"/>
        <name value="CauseTypeFieldValueRequired"/>
        <name value="CauseTypeFieldValueDuplicate"/>
        <name value="CauseTypeFieldValueInvalid"/>
        <name value="CauseTypeFieldValueNotSupported"/>
        <name value="DNSClusterFirst"/>
        <name value="DNSDefault"/>
        <name value="LimitTypePod"/>
        <name value="LimitTypeContainer"/>
        <name value="ResourcePods"/>
        <name value="ResourceServices"/>
        <name value="ResourceReplicationControllers"/>
        <name value="ResourceQuotas"/>
        <name value="ResourceSecrets"/>
        <name value="ResourcePersistentVolumeClaims"/>
        <name value="MaxSecretSize"/>
        <name value="SecretTypeOpaque"/>
        <name value="ComponentHealthy"/>
        <name value="Codec"/>
        <name value="Dependency"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/auth/handlers">
      <types/>
      <functions>
        <function name="NewRequestAuthenticator">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="RequestContextMapper"/>
            </type>
            <type type="selector">
              <prefix value="authenticator"/>
              <item value="Request"/>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unauthorized">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/validation">
      <types>
        <type name="ValidateNameFunc" type="func">
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </type>
        <type type="struct" name="InvalidTypeError">
          <field type="selector" name="ExpectedKind">
            <prefix value="reflect"/>
            <item value="Kind"/>
          </field>
          <field type="selector" name="ObservedKind">
            <prefix value="reflect"/>
            <item value="Kind"/>
          </field>
          <field type="ident" def="string" name="FieldName"/>
        </type>
        <type name="Schema" type="interface">
          <method name="ValidateBytes">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="NullSchema"/>
        <type type="struct" name="SwaggerSchema">
          <field type="selector" name="api">
            <prefix value="swagger"/>
            <item value="ApiDeclaration"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="ValidateLabels">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateAnnotations">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePodName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ValidateReplicationControllerName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ValidateServiceName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ValidateNodeName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ValidateNamespaceName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ValidateLimitRangeName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ValidateResourceQuotaName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ValidateSecretName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ValidateEndpointsName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ValidateObjectMeta">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectMeta"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="ValidateNameFunc"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateObjectMetaUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectMeta"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectMeta"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePersistentVolumeName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ValidatePersistentVolume">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePersistentVolumeUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePersistentVolumeStatusUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePersistentVolumeClaim">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePersistentVolumeClaimUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePersistentVolumeClaimStatusUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PersistentVolumeClaim"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="AccumulateUniquePorts">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="Container"/>
              </elmtype>
            </type>
            <type type="map">
              <keytype type="ident" def="int"/>
              <valtype type="ident" def="bool"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="api"/>
                    <item value="ContainerPort"/>
                  </type>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="int"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateManifest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ContainerManifest"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePod">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePodSpec">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodSpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePodUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePodStatusUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePodTemplate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodTemplate"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePodTemplateUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodTemplate"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodTemplate"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateService">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateServiceUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateReplicationController">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateReplicationControllerUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationController"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateReplicationControllerSpec">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ReplicationControllerSpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidatePodTemplateSpec">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="PodTemplateSpec"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateReadOnlyPersistentDisks">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="Volume"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateNode">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateNodeUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateLimitRange">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="LimitRange"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateSecret">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateSecretUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Secret"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateResourceRequirements">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceRequirements"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateResourceQuota">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateResourceQuotaUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateResourceQuotaStatusUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ResourceQuota"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateNamespace">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateNamespaceUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateNamespaceStatusUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateNamespaceFinalizeUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Namespace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateEndpoints">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateEndpointsUpdate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Endpoints"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="ValidateSecurityContext">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="SecurityContext"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InvalidTypeError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewInvalidTypeError">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Kind"/>
            </type>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Kind"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ValidateBytes">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSwaggerSchemaFromBytes">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Schema"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ValidateBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SwaggerSchema"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ValidateObject">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SwaggerSchema"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ValidateEvent">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Event"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="errs"/>
              <item value="ValidationErrorList"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/gce_pd">
      <types>
        <type type="struct" name="GCEDiskUtil"/>
      </types>
      <functions>
        <function name="AttachAndMountDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCEDiskUtil"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDisk"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DetachDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GCEDiskUtil"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDisk"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Mount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gceSafeFormatAndMount"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ProbeVolumePlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDiskPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeHost"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDiskPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CanSupport">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDiskPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetAccessModes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDiskPlugin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="AccessModeType"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewBuilder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDiskPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="volume"/>
                <item value="Spec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="ObjectReference"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="volume"/>
              <item value="VolumeOptions"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Builder"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCleaner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDiskPlugin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="UID"/>
            </type>
            <type type="selector">
              <prefix value="mount"/>
              <item value="Interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="volume"/>
              <item value="Cleaner"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDisk"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetUpAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDisk"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDisk"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TearDown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDisk"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TearDownAt">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gcePersistentDisk"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/scheduler">
      <types>
        <type name="FitPredicate" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="HostPriority">
          <field type="ident" def="string" name="host"/>
          <field type="ident" def="int" name="score"/>
        </type>
        <type name="HostPriorityList" type="slice">
          <elmtype type="ident" def="HostPriority"/>
        </type>
        <type name="PriorityFunction" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="PodLister"/>
            <type type="ident" def="MinionLister"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="HostPriorityList"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="PriorityConfig">
          <field type="ident" def="PriorityFunction" name="Function"/>
          <field type="ident" def="int" name="Weight"/>
        </type>
        <type type="struct" name="ServiceSpread">
          <field type="ident" def="ServiceLister" name="serviceLister"/>
        </type>
        <type type="struct" name="ServiceAntiAffinity">
          <field type="ident" def="ServiceLister" name="serviceLister"/>
          <field type="ident" def="string" name="label"/>
        </type>
        <type name="Scheduler" type="interface">
          <method name="Schedule">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
              <type type="ident" def="MinionLister"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="NodeLabelPrioritizer">
          <field type="ident" def="string" name="label"/>
          <field type="ident" def="bool" name="presence"/>
        </type>
        <type name="NodeInfo" type="interface">
          <method name="GetNodeInfo">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Node"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="StaticNodeInfo">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="api"/>
              <item value="NodeList"/>
            </type>
          </field>
        </type>
        <type type="struct" name="ClientNodeInfo">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="client"/>
              <item value="Client"/>
            </type>
          </field>
        </type>
        <type type="struct" name="ResourceFit">
          <field type="ident" def="NodeInfo" name="info"/>
        </type>
        <type type="struct" name="NodeSelector">
          <field type="ident" def="NodeInfo" name="info"/>
        </type>
        <type type="struct" name="NodeLabelChecker">
          <field type="ident" def="NodeInfo" name="info"/>
          <field type="slice" name="labels">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="presence"/>
        </type>
        <type type="struct" name="ServiceAffinity">
          <field type="ident" def="PodLister" name="podLister"/>
          <field type="ident" def="ServiceLister" name="serviceLister"/>
          <field type="ident" def="NodeInfo" name="nodeInfo"/>
          <field type="slice" name="labels">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type name="MinionLister" type="interface">
          <method name="List">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeList"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="FakeMinionLister" type="selector">
          <prefix value="api"/>
          <item value="NodeList"/>
        </type>
        <type name="PodLister" type="interface">
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="api"/>
                    <item value="Pod"/>
                  </type>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="FakePodLister" type="slice">
          <elmtype type="pointer">
            <type type="selector">
              <prefix value="api"/>
              <item value="Pod"/>
            </type>
          </elmtype>
        </type>
        <type name="ServiceLister" type="interface">
          <method name="List">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="ServiceList"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetPodServices">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="api"/>
                  <item value="Service"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="FakeServiceLister" type="slice">
          <elmtype type="selector">
            <prefix value="api"/>
            <item value="Service"/>
          </elmtype>
        </type>
        <type name="FailedPredicateMap" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="selector">
            <prefix value="util"/>
            <item value="StringSet"/>
          </valtype>
        </type>
        <type type="struct" name="FitError">
          <field type="pointer" name="Pod">
            <type type="selector">
              <prefix value="api"/>
              <item value="Pod"/>
            </type>
          </field>
          <field type="ident" def="FailedPredicateMap" name="FailedPredicates"/>
        </type>
      </types>
      <functions>
        <function name="Len">
          <recvList>
            <type type="ident" def="HostPriorityList"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="HostPriorityList"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="HostPriorityList"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewServiceSpreadPriority">
          <recvList/>
          <paramsList>
            <type type="ident" def="ServiceLister"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="PriorityFunction"/>
          </resultsList>
        </function>
        <function name="CalculateSpreadPriority">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceSpread"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="PodLister"/>
            <type type="ident" def="MinionLister"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="HostPriorityList"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewServiceAntiAffinityPriority">
          <recvList/>
          <paramsList>
            <type type="ident" def="ServiceLister"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="PriorityFunction"/>
          </resultsList>
        </function>
        <function name="CalculateAntiAffinityPriority">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceAntiAffinity"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="PodLister"/>
            <type type="ident" def="MinionLister"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="HostPriorityList"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LeastRequestedPriority">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="PodLister"/>
            <type type="ident" def="MinionLister"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="HostPriorityList"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewNodeLabelPriority">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="PriorityFunction"/>
          </resultsList>
        </function>
        <function name="CalculateNodeLabelPriority">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NodeLabelPrioritizer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="PodLister"/>
            <type type="ident" def="MinionLister"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="HostPriorityList"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="BalancedResourceAllocation">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="PodLister"/>
            <type type="ident" def="MinionLister"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="HostPriorityList"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNodeInfo">
          <recvList>
            <type type="ident" def="StaticNodeInfo"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNodeInfo">
          <recvList>
            <type type="ident" def="ClientNodeInfo"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NoDiskConflict">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckPodsExceedingCapacity">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="ResourceList"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="PodFitsResources">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResourceFit"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewResourceFitPredicate">
          <recvList/>
          <paramsList>
            <type type="ident" def="NodeInfo"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="FitPredicate"/>
          </resultsList>
        </function>
        <function name="NewSelectorMatchPredicate">
          <recvList/>
          <paramsList>
            <type type="ident" def="NodeInfo"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="FitPredicate"/>
          </resultsList>
        </function>
        <function name="PodMatchesNodeLabels">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PodSelectorMatches">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NodeSelector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PodFitsHost">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewNodeLabelPredicate">
          <recvList/>
          <paramsList>
            <type type="ident" def="NodeInfo"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="FitPredicate"/>
          </resultsList>
        </function>
        <function name="CheckNodeLabelPresence">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NodeLabelChecker"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewServiceAffinityPredicate">
          <recvList/>
          <paramsList>
            <type type="ident" def="PodLister"/>
            <type type="ident" def="ServiceLister"/>
            <type type="ident" def="NodeInfo"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="FitPredicate"/>
          </resultsList>
        </function>
        <function name="CheckServiceAffinity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceAffinity"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PodFitsPorts">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MapPodsToMachines">
          <recvList/>
          <paramsList>
            <type type="ident" def="PodLister"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="api"/>
                    <item value="Pod"/>
                  </type>
                </elmtype>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="ident" def="FakeMinionLister"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="NodeList"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="ident" def="FakePodLister"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Pod"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="ident" def="FakeServiceLister"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="ServiceList"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPodServices">
          <recvList>
            <type type="ident" def="FakeServiceLister"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="Service"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FitError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Schedule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericScheduler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="MinionLister"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EqualPriority">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="Pod"/>
              </type>
            </type>
            <type type="ident" def="PodLister"/>
            <type type="ident" def="MinionLister"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="HostPriorityList"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewGenericScheduler">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="FitPredicate"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="PriorityConfig"/>
            </type>
            <type type="ident" def="PodLister"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="rand"/>
                <item value="Rand"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Scheduler"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/password">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/types">
      <types>
        <type name="DockerID" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="HttpGetter" type="interface">
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/client/portforward">
      <types>
        <type type="struct" name="PortForwarder">
          <field type="pointer" name="req">
            <type type="selector">
              <prefix value="client"/>
              <item value="Request"/>
            </type>
          </field>
          <field type="pointer" name="config">
            <type type="selector">
              <prefix value="client"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="slice" name="ports">
            <elmtype type="ident" def="ForwardedPort"/>
          </field>
          <field type="channel" dir="2" name="stopChan">
            <type type="struct" name=""/>
          </field>
          <field type="selector" name="streamConn">
            <prefix value="httpstream"/>
            <item value="Connection"/>
          </field>
          <field type="slice" name="listeners">
            <elmtype type="selector">
              <prefix value="io"/>
              <item value="Closer"/>
            </elmtype>
          </field>
          <field type="ident" def="upgrader" name="upgrader"/>
          <field type="channel" dir="3" name="Ready">
            <type type="struct" name=""/>
          </field>
        </type>
        <type type="struct" name="ForwardedPort">
          <field type="ident" def="uint16" name="Local"/>
          <field type="ident" def="uint16" name="Remote"/>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PortForwarder"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ForwardPorts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PortForwarder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PortForwarder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/proxy">
      <types>
        <type type="struct" name="Transport">
          <field type="ident" def="string" name="Scheme"/>
          <field type="ident" def="string" name="Host"/>
          <field type="ident" def="string" name="PathPrepend"/>
        </type>
      </types>
      <functions>
        <function name="RoundTrip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/service">
      <types>
        <type type="struct" name="REST">
          <field type="ident" def="Registry" name="registry"/>
          <field type="selector" name="machines">
            <prefix value="minion"/>
            <item value="Registry"/>
          </field>
          <field type="selector" name="endpoints">
            <prefix value="endpoint"/>
            <item value="Registry"/>
          </field>
          <field type="pointer" name="portalMgr">
            <type type="ident" def="ipAllocator"/>
          </field>
          <field type="ident" def="string" name="clusterName"/>
        </type>
        <type name="Registry" type="interface">
          <method name="ListServices">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="ServiceList"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateService">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Service"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Service"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetService">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Service"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteService">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateService">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Service"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="api"/>
                  <item value="Service"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WatchServices">
            <paramsList>
              <type type="selector">
                <prefix value="api"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="labels"/>
                <item value="Selector"/>
              </type>
              <type type="selector">
                <prefix value="fields"/>
                <item value="Selector"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="ident" def="Registry"/>
            <type type="selector">
              <prefix value="minion"/>
              <item value="Registry"/>
            </type>
            <type type="selector">
              <prefix value="endpoint"/>
              <item value="Registry"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="NewList">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResourceLocation">
          <recvList>
            <type type="pointer">
              <type type="ident" def="REST"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="api"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ipAddrSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ipAddrSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Contains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ipAddrSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ipAddrSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ipAddrSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Allocate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ipAllocator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AllocateNext">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ipAllocator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetIndexedIP">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ipAllocator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/examples">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/token/tokentest">
      <types>
        <type type="struct" name="TokenAuthenticator">
          <field type="map" name="Tokens">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="user"/>
                <item value="DefaultInfo"/>
              </type>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TokenAuthenticator"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthenticateToken">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TokenAuthenticator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="user"/>
              <item value="Info"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/cmd/kube-scheduler/app">
      <types>
        <type type="struct" name="SchedulerServer">
          <field type="ident" def="int" name="Port"/>
          <field type="selector" name="Address">
            <prefix value="util"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="string" name="AlgorithmProvider"/>
          <field type="ident" def="string" name="PolicyConfigFile"/>
          <field type="ident" def="bool" name="EnableProfiling"/>
          <field type="ident" def="string" name="Master"/>
          <field type="ident" def="string" name="Kubeconfig"/>
        </type>
      </types>
      <functions>
        <function name="NewSchedulerServer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SchedulerServer"/>
            </type>
          </resultsList>
        </function>
        <function name="AddFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SchedulerServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SchedulerServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/api/endpoints">
      <types/>
      <functions>
        <function name="RepackSubsets">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="EndpointSubset"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="EndpointSubset"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Insert">
          <recvList>
            <type type="ident" def="addressSet"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="EndpointAddress"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="addrPtrsByIP"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="addrPtrsByIP"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="addrPtrsByIP"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SortSubsets">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="EndpointSubset"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="EndpointSubset"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="subsetsByHash"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="subsetsByHash"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="subsetsByHash"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="addrsByIP"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="addrsByIP"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="addrsByIP"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="portsByHash"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="portsByHash"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="portsByHash"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/cmd/kube-proxy/app">
      <types>
        <type type="struct" name="ProxyServer">
          <field type="selector" name="BindAddress">
            <prefix value="util"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="int" name="HealthzPort"/>
          <field type="selector" name="HealthzBindAddress">
            <prefix value="util"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="int" name="OOMScoreAdj"/>
          <field type="ident" def="string" name="ResourceContainer"/>
          <field type="ident" def="string" name="Master"/>
          <field type="ident" def="string" name="Kubeconfig"/>
        </type>
      </types>
      <functions>
        <function name="NewProxyServer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ProxyServer"/>
            </type>
          </resultsList>
        </function>
        <function name="AddFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProxyServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProxyServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/watch/json">
      <types>
        <type type="struct" name="WatchEvent">
          <field type="selector" name="Type">
            <prefix value="watch"/>
            <item value="EventType"/>
          </field>
          <field type="selector" name="Object">
            <prefix value="runtime"/>
            <item value="RawExtension"/>
          </field>
        </type>
        <type type="struct" name="Encoder">
          <field type="selector" name="w">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="pointer" name="encoder">
            <type type="selector">
              <prefix value="json"/>
              <item value="Encoder"/>
            </type>
          </field>
          <field type="selector" name="codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
        </type>
        <type type="struct" name="Decoder">
          <field type="selector" name="r">
            <prefix value="io"/>
            <item value="ReadCloser"/>
          </field>
          <field type="pointer" name="decoder">
            <type type="selector">
              <prefix value="json"/>
              <item value="Decoder"/>
            </type>
          </field>
          <field type="selector" name="codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Object">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Codec"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="watch"/>
                <item value="Event"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewEncoder">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Codec"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Encoder"/>
            </type>
          </resultsList>
        </function>
        <function name="Encode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Encoder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="watch"/>
                <item value="Event"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewDecoder">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Codec"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Decoder"/>
            </type>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Decoder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="EventType"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Decoder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/rackspace">
      <types>
        <type type="struct" name="MyDuration">
          <field type="selector" name="">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="LoadBalancerOpts">
          <field type="ident" def="string" name="SubnetId"/>
          <field type="ident" def="bool" name="CreateMonitor"/>
          <field type="ident" def="MyDuration" name="MonitorDelay"/>
          <field type="ident" def="MyDuration" name="MonitorTimeout"/>
          <field type="ident" def="uint" name="MonitorMaxRetries"/>
        </type>
        <type type="struct" name="Rackspace">
          <field type="pointer" name="provider">
            <type type="selector">
              <prefix value="gophercloud"/>
              <item value="ProviderClient"/>
            </type>
          </field>
          <field type="ident" def="string" name="region"/>
          <field type="ident" def="LoadBalancerOpts" name="lbOpts"/>
        </type>
        <type type="struct" name="Config">
          <field type="struct" name="Global">
            <field type="ident" def="string" name="AuthUrl"/>
            <field type="ident" def="string" name="Username"/>
            <field type="ident" def="string" name="UserId"/>
            <field type="ident" def="string" name="Password"/>
            <field type="ident" def="string" name="ApiKey"/>
            <field type="ident" def="string" name="TenantId"/>
            <field type="ident" def="string" name="TenantName"/>
            <field type="ident" def="string" name="DomainId"/>
            <field type="ident" def="string" name="DomainName"/>
            <field type="ident" def="string" name="Region"/>
          </field>
          <field type="ident" def="LoadBalancerOpts" name="LoadBalancer"/>
        </type>
        <type type="struct" name="Instances">
          <field type="pointer" name="compute">
            <type type="selector">
              <prefix value="gophercloud"/>
              <item value="ServiceClient"/>
            </type>
          </field>
          <field type="map" name="flavor_to_resource">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeResources"/>
              </type>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="UnmarshalText">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyDuration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Instances">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Rackspace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Instances"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Instances"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NodeAddresses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Instances"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="NodeAddress"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExternalID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Instances"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNodeResources">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Instances"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeResources"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Configure">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Instances"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeSpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Instances"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Clusters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Rackspace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Clusters"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="TCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Rackspace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="TCPLoadBalancer"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Zones">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Rackspace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Zones"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetZone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Rackspace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Zone"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrNotFound"/>
        <name value="ErrMultipleResults"/>
        <name value="ErrNoAddressFound"/>
        <name value="ErrAttrNotFound"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/httpstream/spdy">
      <types>
        <type type="struct" name="SpdyRoundTripper">
          <field type="pointer" name="tlsConfig">
            <type type="selector">
              <prefix value="tls"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="selector" name="conn">
            <prefix value="net"/>
            <item value="Conn"/>
          </field>
          <field type="pointer" name="Dialer">
            <type type="selector">
              <prefix value="net"/>
              <item value="Dialer"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewResponseUpgrader">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="httpstream"/>
              <item value="ResponseUpgrader"/>
            </type>
          </resultsList>
        </function>
        <function name="UpgradeResponse">
          <recvList>
            <type type="ident" def="responseUpgrader"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="httpstream"/>
              <item value="NewStreamHandler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="httpstream"/>
              <item value="Connection"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRoundTripper">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tls"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="httpstream"/>
              <item value="UpgradeRoundTripper"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSpdyRoundTripper">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tls"/>
                <item value="Config"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SpdyRoundTripper"/>
            </type>
          </resultsList>
        </function>
        <function name="RoundTrip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SpdyRoundTripper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewConnection">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SpdyRoundTripper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="httpstream"/>
              <item value="Connection"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewClientConnection">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="httpstream"/>
              <item value="Connection"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewServerConnection">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="selector">
              <prefix value="httpstream"/>
              <item value="NewStreamHandler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="httpstream"/>
              <item value="Connection"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="connection"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateStream">
          <recvList>
            <type type="pointer">
              <type type="ident" def="connection"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Header"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="httpstream"/>
              <item value="Stream"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CloseChan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="connection"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="SetIdleTimeout">
          <recvList>
            <type type="pointer">
              <type type="ident" def="connection"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="HeaderSpdy31"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/cmd/kube-apiserver/app">
      <types>
        <type type="struct" name="APIServer">
          <field type="selector" name="InsecureBindAddress">
            <prefix value="util"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="int" name="InsecurePort"/>
          <field type="selector" name="BindAddress">
            <prefix value="util"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="int" name="ReadOnlyPort"/>
          <field type="ident" def="int" name="SecurePort"/>
          <field type="ident" def="string" name="ExternalHost"/>
          <field type="ident" def="float32" name="APIRate"/>
          <field type="ident" def="int" name="APIBurst"/>
          <field type="ident" def="string" name="TLSCertFile"/>
          <field type="ident" def="string" name="TLSPrivateKeyFile"/>
          <field type="ident" def="string" name="CertDirectory"/>
          <field type="ident" def="string" name="APIPrefix"/>
          <field type="ident" def="string" name="StorageVersion"/>
          <field type="ident" def="string" name="CloudProvider"/>
          <field type="ident" def="string" name="CloudConfigFile"/>
          <field type="selector" name="EventTTL">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="BasicAuthFile"/>
          <field type="ident" def="string" name="ClientCAFile"/>
          <field type="ident" def="string" name="TokenAuthFile"/>
          <field type="ident" def="string" name="AuthorizationMode"/>
          <field type="ident" def="string" name="AuthorizationPolicyFile"/>
          <field type="ident" def="string" name="AdmissionControl"/>
          <field type="ident" def="string" name="AdmissionControlConfigFile"/>
          <field type="selector" name="EtcdServerList">
            <prefix value="util"/>
            <item value="StringList"/>
          </field>
          <field type="ident" def="string" name="EtcdConfigFile"/>
          <field type="ident" def="string" name="EtcdPathPrefix"/>
          <field type="selector" name="CorsAllowedOriginList">
            <prefix value="util"/>
            <item value="StringList"/>
          </field>
          <field type="ident" def="bool" name="AllowPrivileged"/>
          <field type="selector" name="PortalNet">
            <prefix value="util"/>
            <item value="IPNet"/>
          </field>
          <field type="ident" def="bool" name="EnableLogsSupport"/>
          <field type="ident" def="string" name="MasterServiceNamespace"/>
          <field type="selector" name="RuntimeConfig">
            <prefix value="util"/>
            <item value="ConfigurationMap"/>
          </field>
          <field type="selector" name="KubeletConfig">
            <prefix value="client"/>
            <item value="KubeletConfig"/>
          </field>
          <field type="ident" def="string" name="ClusterName"/>
          <field type="ident" def="bool" name="EnableProfiling"/>
          <field type="ident" def="int" name="MaxRequestsInFlight"/>
          <field type="ident" def="string" name="LongRunningRequestRE"/>
        </type>
      </types>
      <functions>
        <function name="NewAPIServer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="APIServer"/>
            </type>
          </resultsList>
        </function>
        <function name="AddFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="APIServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="APIServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/client/chaosclient">
      <types>
        <type name="Chaos" type="interface">
          <method name="Intercept">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ChaosNotifier" type="interface">
          <method name="OnChaos">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
              <type type="ident" def="Chaos"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="ChaosFunc" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="Seed">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="rand"/>
              <item value="Rand"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Error">
          <field type="ident" def="error" name=""/>
        </type>
      </types>
      <functions>
        <function name="Intercept">
          <recvList>
            <type type="ident" def="ChaosFunc"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ChaosFunc"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewChaosRoundTripper">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="ident" def="ChaosNotifier"/>
            <type type="ellipsis">
              <type type="ident" def="Chaos"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
          </resultsList>
        </function>
        <function name="RoundTrip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="chaosrt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSeed">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Seed"/>
          </resultsList>
        </function>
        <function name="P">
          <recvList>
            <type type="ident" def="Seed"/>
          </recvList>
          <paramsList>
            <type type="ident" def="float64"/>
            <type type="ident" def="Chaos"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Chaos"/>
          </resultsList>
        </function>
        <function name="Intercept">
          <recvList>
            <type type="ident" def="pIntercept"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="pIntercept"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Intercept">
          <recvList>
            <type type="ident" def="Error"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="OnChaos">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="Chaos"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="ErrSimulatedConnectionResetByPeer"/>
        <name value="LogChaos"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/api/latest">
      <types/>
      <functions/>
      <names>
        <name value="Version"/>
        <name value="OldestVersion"/>
        <name value="Versions"/>
        <name value="Codec"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/config">
      <types>
        <type name="RESTClientPoster" type="interface">
          <method name="Post">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="client"/>
                  <item value="Request"/>
                </type>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="ClientPosterFunc" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapping"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="RESTClientPoster"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
      </types>
      <functions>
        <function name="CreateObjects">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="ObjectTyper"/>
            </type>
            <type type="selector">
              <prefix value="meta"/>
              <item value="RESTMapper"/>
            </type>
            <type type="ident" def="ClientPosterFunc"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="runtime"/>
                <item value="Object"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="error"/>
            </type>
          </resultsList>
        </function>
        <function name="CreateObject">
          <recvList/>
          <paramsList>
            <type type="ident" def="RESTClientPoster"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapping"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="errs"/>
                <item value="ValidationError"/>
              </type>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/algorithmprovider">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/cmd/kubelet/app">
      <types>
        <type type="struct" name="KubeletServer">
          <field type="ident" def="string" name="Config"/>
          <field type="selector" name="SyncFrequency">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="FileCheckFrequency">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="HTTPCheckFrequency">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="ManifestURL"/>
          <field type="ident" def="bool" name="EnableServer"/>
          <field type="selector" name="Address">
            <prefix value="util"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="uint" name="Port"/>
          <field type="ident" def="uint" name="ReadOnlyPort"/>
          <field type="ident" def="string" name="HostnameOverride"/>
          <field type="ident" def="string" name="PodInfraContainerImage"/>
          <field type="ident" def="string" name="DockerEndpoint"/>
          <field type="ident" def="string" name="RootDirectory"/>
          <field type="ident" def="bool" name="AllowPrivileged"/>
          <field type="ident" def="string" name="HostNetworkSources"/>
          <field type="ident" def="float64" name="RegistryPullQPS"/>
          <field type="ident" def="int" name="RegistryBurst"/>
          <field type="ident" def="bool" name="RunOnce"/>
          <field type="ident" def="bool" name="EnableDebuggingHandlers"/>
          <field type="selector" name="MinimumGCAge">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="int" name="MaxPerPodContainerCount"/>
          <field type="ident" def="int" name="MaxContainerCount"/>
          <field type="ident" def="string" name="AuthPath"/>
          <field type="ident" def="uint" name="CadvisorPort"/>
          <field type="ident" def="int" name="HealthzPort"/>
          <field type="selector" name="HealthzBindAddress">
            <prefix value="util"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="int" name="OOMScoreAdj"/>
          <field type="selector" name="APIServerList">
            <prefix value="util"/>
            <item value="StringList"/>
          </field>
          <field type="ident" def="string" name="ClusterDomain"/>
          <field type="ident" def="string" name="MasterServiceNamespace"/>
          <field type="selector" name="ClusterDNS">
            <prefix value="util"/>
            <item value="IP"/>
          </field>
          <field type="selector" name="StreamingConnectionIdleTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="int" name="ImageGCHighThresholdPercent"/>
          <field type="ident" def="int" name="ImageGCLowThresholdPercent"/>
          <field type="ident" def="string" name="NetworkPluginName"/>
          <field type="ident" def="string" name="CloudProvider"/>
          <field type="ident" def="string" name="CloudConfigFile"/>
          <field type="ident" def="string" name="TLSCertFile"/>
          <field type="ident" def="string" name="TLSPrivateKeyFile"/>
          <field type="ident" def="string" name="CertDirectory"/>
          <field type="selector" name="NodeStatusUpdateFrequency">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="ResourceContainer"/>
          <field type="ident" def="string" name="CgroupRoot"/>
          <field type="ident" def="string" name="ContainerRuntime"/>
          <field type="ident" def="bool" name="ReallyCrashForTesting"/>
          <field type="ident" def="float64" name="ChaosChance"/>
          <field type="ident" def="bool" name="Containerized"/>
        </type>
        <type name="KubeletBootstrap" type="interface">
          <method name="BirthCry">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="StartGarbageCollection">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="ListenAndServe">
            <paramsList>
              <type type="selector">
                <prefix value="net"/>
                <item value="IP"/>
              </type>
              <type type="ident" def="uint"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="kubelet"/>
                  <item value="TLSOptions"/>
                </type>
              </type>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ListenAndServeReadOnly">
            <paramsList>
              <type type="selector">
                <prefix value="net"/>
                <item value="IP"/>
              </type>
              <type type="ident" def="uint"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Run">
            <paramsList>
              <type type="channel" dir="2">
                <type type="selector">
                  <prefix value="kubelet"/>
                  <item value="PodUpdate"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="RunOnce">
            <paramsList>
              <type type="channel" dir="2">
                <type type="selector">
                  <prefix value="kubelet"/>
                  <item value="PodUpdate"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="kubelet"/>
                  <item value="RunPodResult"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="KubeletBuilder" type="func">
          <paramsList>
            <type type="pointer">
              <type type="ident" def="KubeletConfig"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="KubeletBootstrap"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="config"/>
                <item value="PodConfig"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="KubeletConfig">
          <field type="pointer" name="KubeClient">
            <type type="selector">
              <prefix value="client"/>
              <item value="Client"/>
            </type>
          </field>
          <field type="selector" name="DockerClient">
            <prefix value="dockertools"/>
            <item value="DockerInterface"/>
          </field>
          <field type="selector" name="CadvisorInterface">
            <prefix value="cadvisor"/>
            <item value="Interface"/>
          </field>
          <field type="selector" name="Address">
            <prefix value="util"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="bool" name="AllowPrivileged"/>
          <field type="slice" name="HostNetworkSources">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="HostnameOverride"/>
          <field type="ident" def="string" name="RootDirectory"/>
          <field type="ident" def="string" name="ConfigFile"/>
          <field type="ident" def="string" name="ManifestURL"/>
          <field type="selector" name="FileCheckFrequency">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="HTTPCheckFrequency">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="Hostname"/>
          <field type="ident" def="string" name="PodInfraContainerImage"/>
          <field type="selector" name="SyncFrequency">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="float64" name="RegistryPullQPS"/>
          <field type="ident" def="int" name="RegistryBurst"/>
          <field type="selector" name="MinimumGCAge">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="int" name="MaxPerPodContainerCount"/>
          <field type="ident" def="int" name="MaxContainerCount"/>
          <field type="ident" def="string" name="ClusterDomain"/>
          <field type="selector" name="ClusterDNS">
            <prefix value="util"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="bool" name="EnableServer"/>
          <field type="ident" def="bool" name="EnableDebuggingHandlers"/>
          <field type="ident" def="uint" name="Port"/>
          <field type="ident" def="uint" name="ReadOnlyPort"/>
          <field type="ident" def="bool" name="Runonce"/>
          <field type="ident" def="string" name="MasterServiceNamespace"/>
          <field type="slice" name="VolumePlugins">
            <elmtype type="selector">
              <prefix value="volume"/>
              <item value="VolumePlugin"/>
            </elmtype>
          </field>
          <field type="slice" name="NetworkPlugins">
            <elmtype type="selector">
              <prefix value="network"/>
              <item value="NetworkPlugin"/>
            </elmtype>
          </field>
          <field type="ident" def="string" name="NetworkPluginName"/>
          <field type="selector" name="StreamingConnectionIdleTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="Recorder">
            <prefix value="record"/>
            <item value="EventRecorder"/>
          </field>
          <field type="pointer" name="TLSOptions">
            <type type="selector">
              <prefix value="kubelet"/>
              <item value="TLSOptions"/>
            </type>
          </field>
          <field type="selector" name="ImageGCPolicy">
            <prefix value="kubelet"/>
            <item value="ImageGCPolicy"/>
          </field>
          <field type="selector" name="Cloud">
            <prefix value="cloudprovider"/>
            <item value="Interface"/>
          </field>
          <field type="selector" name="NodeStatusUpdateFrequency">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="ResourceContainer"/>
          <field type="selector" name="OSInterface">
            <prefix value="kubecontainer"/>
            <item value="OSInterface"/>
          </field>
          <field type="ident" def="string" name="CgroupRoot"/>
          <field type="ident" def="string" name="ContainerRuntime"/>
          <field type="selector" name="Mounter">
            <prefix value="mount"/>
            <item value="Interface"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewKubeletServer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="KubeletServer"/>
            </type>
          </resultsList>
        </function>
        <function name="AddFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KubeletServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="pflag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KubeletServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SimpleKubelet">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="dockertools"/>
              <item value="DockerInterface"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="kubelet"/>
                <item value="TLSOptions"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="cadvisor"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Interface"/>
            </type>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="OSInterface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="KubeletConfig"/>
            </type>
          </resultsList>
        </function>
        <function name="RunKubelet">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="KubeletConfig"/>
            </type>
            <type type="ident" def="KubeletBuilder"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ProbeVolumePlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="volume"/>
                <item value="VolumePlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ProbeNetworkPlugins">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="network"/>
                <item value="NetworkPlugin"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubectl/resource">
      <types>
        <type name="Visitor" type="interface">
          <method name="Visit">
            <paramsList>
              <type type="ident" def="VisitorFunc"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="VisitorFunc" type="func">
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="Watchable" type="interface">
          <method name="Watch">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="watch"/>
                <item value="Interface"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ResourceMapping" type="interface">
          <method name="ResourceMapping">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="meta"/>
                  <item value="RESTMapping"/>
                </type>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Info">
          <field type="ident" def="RESTClient" name="Client"/>
          <field type="pointer" name="Mapping">
            <type type="selector">
              <prefix value="meta"/>
              <item value="RESTMapping"/>
            </type>
          </field>
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="">
            <prefix value="runtime"/>
            <item value="Object"/>
          </field>
          <field type="ident" def="string" name="ResourceVersion"/>
        </type>
        <type name="VisitorList" type="slice">
          <elmtype type="ident" def="Visitor"/>
        </type>
        <type name="EagerVisitorList" type="slice">
          <elmtype type="ident" def="Visitor"/>
        </type>
        <type type="struct" name="PathVisitor">
          <field type="pointer" name="">
            <type type="ident" def="Mapper"/>
          </field>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="IgnoreErrors"/>
        </type>
        <type type="struct" name="DirectoryVisitor">
          <field type="pointer" name="">
            <type type="ident" def="Mapper"/>
          </field>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="Recursive"/>
          <field type="slice" name="Extensions">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="IgnoreErrors"/>
        </type>
        <type type="struct" name="URLVisitor">
          <field type="pointer" name="">
            <type type="ident" def="Mapper"/>
          </field>
          <field type="pointer" name="URL">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
        </type>
        <type type="struct" name="DecoratedVisitor">
          <field type="ident" def="Visitor" name="visitor"/>
          <field type="slice" name="decorators">
            <elmtype type="ident" def="VisitorFunc"/>
          </field>
        </type>
        <type type="struct" name="FlattenListVisitor">
          <field type="ident" def="Visitor" name=""/>
          <field type="pointer" name="">
            <type type="ident" def="Mapper"/>
          </field>
        </type>
        <type type="struct" name="StreamVisitor">
          <field type="selector" name="">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="pointer" name="">
            <type type="ident" def="Mapper"/>
          </field>
          <field type="ident" def="string" name="Source"/>
          <field type="ident" def="bool" name="IgnoreErrors"/>
        </type>
        <type type="struct" name="Selector">
          <field type="ident" def="RESTClient" name="Client"/>
          <field type="pointer" name="Mapping">
            <type type="selector">
              <prefix value="meta"/>
              <item value="RESTMapping"/>
            </type>
          </field>
          <field type="ident" def="string" name="Namespace"/>
          <field type="selector" name="Selector">
            <prefix value="labels"/>
            <item value="Selector"/>
          </field>
        </type>
        <type name="ErrMatchFunc" type="func">
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </type>
        <type type="struct" name="Result">
          <field type="ident" def="error" name="err"/>
          <field type="ident" def="Visitor" name="visitor"/>
          <field type="slice" name="sources">
            <elmtype type="ident" def="Visitor"/>
          </field>
          <field type="ident" def="bool" name="singular"/>
          <field type="slice" name="ignoreErrors">
            <elmtype type="selector">
              <prefix value="errors"/>
              <item value="Matcher"/>
            </elmtype>
          </field>
          <field type="slice" name="info">
            <elmtype type="pointer">
              <type type="ident" def="Info"/>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="Mapper">
          <field type="selector" name="">
            <prefix value="runtime"/>
            <item value="ObjectTyper"/>
          </field>
          <field type="selector" name="">
            <prefix value="meta"/>
            <item value="RESTMapper"/>
          </field>
          <field type="ident" def="ClientMapper" name=""/>
        </type>
        <type name="RESTClient" type="interface">
          <method name="Get">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="client"/>
                  <item value="Request"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="Post">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="client"/>
                  <item value="Request"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="client"/>
                  <item value="Request"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="Put">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="client"/>
                  <item value="Request"/>
                </type>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="ClientMapper" type="interface">
          <method name="ClientForMapping">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="meta"/>
                  <item value="RESTMapping"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="RESTClient"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ClientMapperFunc" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapping"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="RESTClient"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="Helper">
          <field type="ident" def="string" name="Resource"/>
          <field type="ident" def="RESTClient" name="RESTClient"/>
          <field type="selector" name="Codec">
            <prefix value="runtime"/>
            <item value="Codec"/>
          </field>
          <field type="selector" name="Versioner">
            <prefix value="runtime"/>
            <item value="ResourceVersioner"/>
          </field>
          <field type="ident" def="bool" name="NamespaceScoped"/>
        </type>
        <type type="struct" name="Builder">
          <field type="pointer" name="mapper">
            <type type="ident" def="Mapper"/>
          </field>
          <field type="slice" name="errs">
            <elmtype type="ident" def="error"/>
          </field>
          <field type="slice" name="paths">
            <elmtype type="ident" def="Visitor"/>
          </field>
          <field type="ident" def="bool" name="stream"/>
          <field type="ident" def="bool" name="dir"/>
          <field type="selector" name="selector">
            <prefix value="labels"/>
            <item value="Selector"/>
          </field>
          <field type="ident" def="bool" name="selectAll"/>
          <field type="slice" name="resources">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="namespace"/>
          <field type="slice" name="names">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="resourceTuples">
            <elmtype type="ident" def="resourceTuple"/>
          </field>
          <field type="ident" def="bool" name="defaultNamespace"/>
          <field type="ident" def="bool" name="requireNamespace"/>
          <field type="ident" def="bool" name="flatten"/>
          <field type="ident" def="bool" name="latest"/>
          <field type="ident" def="bool" name="requireObject"/>
          <field type="ident" def="bool" name="singleResourceType"/>
          <field type="ident" def="bool" name="continueOnError"/>
        </type>
      </types>
      <functions>
        <function name="NewInfo">
          <recvList/>
          <paramsList>
            <type type="ident" def="RESTClient"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapping"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
          </resultsList>
        </function>
        <function name="Visit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="VisitorFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Refresh">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Namespaced">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResourceMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapping"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Visit">
          <recvList>
            <type type="ident" def="VisitorList"/>
          </recvList>
          <paramsList>
            <type type="ident" def="VisitorFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Visit">
          <recvList>
            <type type="ident" def="EagerVisitorList"/>
          </recvList>
          <paramsList>
            <type type="ident" def="VisitorFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Visit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PathVisitor"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="VisitorFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Visit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DirectoryVisitor"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="VisitorFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Visit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLVisitor"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="VisitorFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewDecoratedVisitor">
          <recvList/>
          <paramsList>
            <type type="ident" def="Visitor"/>
            <type type="ellipsis">
              <type type="ident" def="VisitorFunc"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Visitor"/>
          </resultsList>
        </function>
        <function name="Visit">
          <recvList>
            <type type="ident" def="DecoratedVisitor"/>
          </recvList>
          <paramsList>
            <type type="ident" def="VisitorFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFlattenListVisitor">
          <recvList/>
          <paramsList>
            <type type="ident" def="Visitor"/>
            <type type="pointer">
              <type type="ident" def="Mapper"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Visitor"/>
          </resultsList>
        </function>
        <function name="Visit">
          <recvList>
            <type type="ident" def="FlattenListVisitor"/>
          </recvList>
          <paramsList>
            <type type="ident" def="VisitorFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewStreamVisitor">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Mapper"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Visitor"/>
          </resultsList>
        </function>
        <function name="Visit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StreamVisitor"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="VisitorFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateObjectNamespace">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FilterNamespace">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetNamespace">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="VisitorFunc"/>
          </resultsList>
        </function>
        <function name="RequireNamespace">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="VisitorFunc"/>
          </resultsList>
        </function>
        <function name="RetrieveLatest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RetrieveLazy">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSelector">
          <recvList/>
          <paramsList>
            <type type="ident" def="RESTClient"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapping"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Selector"/>
            </type>
          </resultsList>
        </function>
        <function name="Visit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Selector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="VisitorFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Selector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResourceMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Selector"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapping"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="IgnoreErrors">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="ErrMatchFunc"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </resultsList>
        </function>
        <function name="Err">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Visit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="VisitorFunc"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IntoSingular">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </resultsList>
        </function>
        <function name="Infos">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Info"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Object">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResourceMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapping"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AsVersionedObject">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Info"/>
              </elmtype>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InfoForData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InfoForObject">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Info"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ClientForMapping">
          <recvList>
            <type type="ident" def="ClientMapperFunc"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapping"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="RESTClient"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewHelper">
          <recvList/>
          <paramsList>
            <type type="ident" def="RESTClient"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="meta"/>
                <item value="RESTMapping"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Helper"/>
            </type>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Helper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Helper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Helper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
            <type type="selector">
              <prefix value="fields"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WatchSingle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Helper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="watch"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Helper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Helper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Helper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewBuilder">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="meta"/>
              <item value="RESTMapper"/>
            </type>
            <type type="selector">
              <prefix value="runtime"/>
              <item value="ObjectTyper"/>
            </type>
            <type type="ident" def="ClientMapper"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="FilenameParam">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="URL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="pointer">
                <type type="selector">
                  <prefix value="url"/>
                  <item value="URL"/>
                </type>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="Stdin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="Stream">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="Path">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="ResourceTypes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="SelectorParam">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="Selector">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="labels"/>
              <item value="Selector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="NamespaceParam">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="DefaultNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="RequireNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="SelectAllParam">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="ResourceTypeOrNameArgs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="ResourceTypeAndNameArgs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="Flatten">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="Latest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="RequireObject">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="ContinueOnError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="SingleResourceType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </resultsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Builder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </resultsList>
        </function>
        <function name="SplitResourceArgument">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/util/flushwriter">
      <types/>
      <functions>
        <function name="Wrap">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="flushWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/credentialprovider/gcp">
      <types/>
      <functions>
        <function name="Enabled">
          <recvList>
            <type type="pointer">
              <type type="ident" def="metadataProvider"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Provide">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dockerConfigKeyProvider"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="credentialprovider"/>
              <item value="DockerConfig"/>
            </type>
          </resultsList>
        </function>
        <function name="Provide">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dockerConfigUrlKeyProvider"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="credentialprovider"/>
              <item value="DockerConfig"/>
            </type>
          </resultsList>
        </function>
        <function name="Enabled">
          <recvList>
            <type type="pointer">
              <type type="ident" def="containerRegistryProvider"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Provide">
          <recvList>
            <type type="pointer">
              <type type="ident" def="containerRegistryProvider"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="credentialprovider"/>
              <item value="DockerConfig"/>
            </type>
          </resultsList>
        </function>
        <function name="Enabled">
          <recvList>
            <type type="pointer">
              <type type="ident" def="jwtProvider"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Provide">
          <recvList>
            <type type="pointer">
              <type type="ident" def="jwtProvider"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="credentialprovider"/>
              <item value="DockerConfig"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/aws">
      <types>
        <type name="EC2" type="interface">
          <method name="Instances">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="pointer">
                <type type="ident" def="ec2InstanceFilter"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="ec2"/>
                  <item value="InstancesResp"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="AttachVolume">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="ec2"/>
                  <item value="AttachVolumeResp"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DetachVolume">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="ec2"/>
                  <item value="SimpleResp"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Volumes">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="ec2"/>
                  <item value="Filter"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="ec2"/>
                  <item value="VolumesResp"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateVolume">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="ec2"/>
                  <item value="CreateVolume"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="ec2"/>
                  <item value="CreateVolumeResp"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteVolume">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="ec2"/>
                  <item value="SimpleResp"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="AWSMetadata" type="interface">
          <method name="GetMetaData">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="VolumeOptions">
          <field type="ident" def="int" name="CapacityMB"/>
        </type>
        <type name="Volumes" type="interface">
          <method name="AttachDisk">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DetachDisk">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateVolume">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="VolumeOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteVolume">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="AWSCloud">
          <field type="ident" def="EC2" name="ec2"/>
          <field type="ident" def="AWSMetadata" name="metadata"/>
          <field type="pointer" name="cfg">
            <type type="ident" def="AWSCloudConfig"/>
          </field>
          <field type="ident" def="string" name="availabilityZone"/>
          <field type="selector" name="region">
            <prefix value="aws"/>
            <item value="Region"/>
          </field>
          <field type="pointer" name="selfAWSInstance">
            <type type="ident" def="awsInstance"/>
          </field>
          <field type="selector" name="mutex">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="AWSCloudConfig">
          <field type="struct" name="Global">
            <field type="ident" def="string" name="Zone"/>
          </field>
        </type>
        <type name="AuthFunc" type="func">
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="aws"/>
              <item value="Auth"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
      </types>
      <functions>
        <function name="Matches">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ec2InstanceFilter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="ec2"/>
              <item value="Instance"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Instances">
          <recvList>
            <type type="pointer">
              <type type="ident" def="goamzEC2"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ec2InstanceFilter"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="ec2"/>
                <item value="InstancesResp"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMetaData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="goamzMetadata"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AttachVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="goamzEC2"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="ec2"/>
                <item value="AttachVolumeResp"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DetachVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="goamzEC2"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="ec2"/>
                <item value="SimpleResp"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Volumes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="goamzEC2"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="ec2"/>
                <item value="Filter"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="ec2"/>
                <item value="VolumesResp"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="goamzEC2"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="ec2"/>
                <item value="CreateVolume"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="ec2"/>
                <item value="CreateVolumeResp"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="goamzEC2"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="ec2"/>
                <item value="SimpleResp"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Clusters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Clusters"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="TCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="TCPLoadBalancer"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Instances">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Instances"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Zones">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Zones"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NodeAddresses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="NodeAddress"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExternalID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNodeResources">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeResources"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetZone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Zone"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AttachDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DetachDisk">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="VolumeOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteVolume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Configure">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeSpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AWSCloud"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/servicecontroller">
      <types>
        <type type="struct" name="ServiceController">
          <field type="selector" name="cloud">
            <prefix value="cloudprovider"/>
            <item value="Interface"/>
          </field>
          <field type="selector" name="kubeClient">
            <prefix value="client"/>
            <item value="Interface"/>
          </field>
          <field type="ident" def="string" name="clusterName"/>
          <field type="selector" name="balancer">
            <prefix value="cloudprovider"/>
            <item value="TCPLoadBalancer"/>
          </field>
          <field type="selector" name="zone">
            <prefix value="cloudprovider"/>
            <item value="Zone"/>
          </field>
          <field type="pointer" name="cache">
            <type type="ident" def="serviceCache"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Interface"/>
            </type>
            <type type="selector">
              <prefix value="client"/>
              <item value="Interface"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ServiceController"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceController"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="serviceCache"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/metrics">
      <types>
        <type name="SyncPodType" type="ident">
          <type type="ident" def="int"/>
        </type>
      </types>
      <functions>
        <function name="Register">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="kubecontainer"/>
              <item value="RuntimeCache"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="SyncPodType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SinceInMicroseconds">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="podAndContainerCollector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="selector">
                  <prefix value="prometheus"/>
                  <item value="Desc"/>
                </type>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Collect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="podAndContainerCollector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="selector">
                <prefix value="prometheus"/>
                <item value="Metric"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="ContainersPerPodCount"/>
        <name value="SyncPodLatency"/>
        <name value="SyncPodsLatency"/>
        <name value="DockerOperationsLatency"/>
        <name value="SyncPodCreate"/>
        <name value="SyncPodUpdate"/>
        <name value="SyncPodSync"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/openstack">
      <types>
        <type type="struct" name="MyDuration">
          <field type="selector" name="">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="LoadBalancerOpts">
          <field type="ident" def="string" name="SubnetId"/>
          <field type="ident" def="string" name="LBMethod"/>
          <field type="ident" def="bool" name="CreateMonitor"/>
          <field type="ident" def="MyDuration" name="MonitorDelay"/>
          <field type="ident" def="MyDuration" name="MonitorTimeout"/>
          <field type="ident" def="uint" name="MonitorMaxRetries"/>
        </type>
        <type type="struct" name="OpenStack">
          <field type="pointer" name="provider">
            <type type="selector">
              <prefix value="gophercloud"/>
              <item value="ProviderClient"/>
            </type>
          </field>
          <field type="ident" def="string" name="region"/>
          <field type="ident" def="LoadBalancerOpts" name="lbOpts"/>
        </type>
        <type type="struct" name="Config">
          <field type="struct" name="Global">
            <field type="ident" def="string" name="AuthUrl"/>
            <field type="ident" def="string" name="Username"/>
            <field type="ident" def="string" name="UserId"/>
            <field type="ident" def="string" name="Password"/>
            <field type="ident" def="string" name="ApiKey"/>
            <field type="ident" def="string" name="TenantId"/>
            <field type="ident" def="string" name="TenantName"/>
            <field type="ident" def="string" name="DomainId"/>
            <field type="ident" def="string" name="DomainName"/>
            <field type="ident" def="string" name="Region"/>
          </field>
          <field type="ident" def="LoadBalancerOpts" name="LoadBalancer"/>
        </type>
        <type type="struct" name="Instances">
          <field type="pointer" name="compute">
            <type type="selector">
              <prefix value="gophercloud"/>
              <item value="ServiceClient"/>
            </type>
          </field>
          <field type="map" name="flavor_to_resource">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeResources"/>
              </type>
            </valtype>
          </field>
        </type>
        <type type="struct" name="LoadBalancer">
          <field type="pointer" name="network">
            <type type="selector">
              <prefix value="gophercloud"/>
              <item value="ServiceClient"/>
            </type>
          </field>
          <field type="pointer" name="compute">
            <type type="selector">
              <prefix value="gophercloud"/>
              <item value="ServiceClient"/>
            </type>
          </field>
          <field type="ident" def="LoadBalancerOpts" name="opts"/>
        </type>
      </types>
      <functions>
        <function name="UnmarshalText">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyDuration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Instances">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OpenStack"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Instances"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Instances"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NodeAddresses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Instances"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="api"/>
                <item value="NodeAddress"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExternalID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Instances"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNodeResources">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Instances"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeResources"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Configure">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Instances"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="api"/>
                <item value="NodeSpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Release">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Instances"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Clusters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OpenStack"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Clusters"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="TCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OpenStack"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="TCPLoadBalancer"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetTCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LoadBalancer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateTCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LoadBalancer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="int"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="AffinityType"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateTCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LoadBalancer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteTCPLoadBalancer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LoadBalancer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Zones">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OpenStack"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Zones"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetZone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OpenStack"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cloudprovider"/>
              <item value="Zone"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrNotFound"/>
        <name value="ErrMultipleResults"/>
        <name value="ErrNoAddressFound"/>
        <name value="ErrAttrNotFound"/>
        <name value="MiB"/>
        <name value="GB"/>
      </names>
    </package>
    <package importpath="github.com/GoogleCloudPlatform/kubernetes/pkg/probe/http">
      <types>
        <type name="HTTPProber" type="interface">
          <method name="Probe">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="int"/>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="probe"/>
                <item value="Result"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="HTTPGetInterface" type="interface">
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Response"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="HTTPProber"/>
          </resultsList>
        </function>
        <function name="Probe">
          <recvList>
            <type type="ident" def="httpProber"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="probe"/>
              <item value="Result"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DoHTTPProbe">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="HTTPGetInterface"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="probe"/>
              <item value="Result"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="flag"/>
    <import path="fmt"/>
    <import path="math/rand"/>
    <import path="os"/>
    <import path="path/filepath"/>
    <import path="strconv"/>
    <import path="time"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/client"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/client/clientcmd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/fields"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/labels"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util"/>
    <import path="github.com/golang/glog"/>
    <import path="net/http"/>
    <import path="net/http/httptest"/>
    <import path="testing"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/testapi"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/apiserver"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/master"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/tools/etcdtest"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/admit"/>
    <import path="github.com/coreos/go-etcd/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/errors"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/client/record"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/wait"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/algorithmprovider"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/factory"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/resource"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volumeclaimbinder"/>
    <import path="bufio"/>
    <import path="github.com/golang/protobuf/proto"/>
    <import path="github.com/prometheus/client_model/go"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/runtime"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/tools"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/watch"/>
    <import path="log"/>
    <import path="reflect"/>
    <import path="runtime"/>
    <import path="sync"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/version"/>
    <import path="bytes"/>
    <import path="encoding/json"/>
    <import path="errors"/>
    <import path="io/ioutil"/>
    <import path="net/url"/>
    <import path="strings"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/auth/authenticator"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/auth/authenticator/bearertoken"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/auth/authorizer"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/auth/authorizer/abac"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/auth/user"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/token/tokentest"/>
    <import path="os/exec"/>
    <import path="code.google.com/p/go-uuid/uuid"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/clientauth"/>
    <import path="golang.org/x/crypto/ssh"/>
    <import path="github.com/onsi/ginkgo"/>
    <import path="github.com/onsi/gomega"/>
    <import path="path"/>
    <import path="sort"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/latest"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubectl"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/types"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/aws"/>
    <import path="github.com/influxdb/influxdb/client"/>
    <import path="regexp"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider"/>
    <import path="github.com/onsi/ginkgo/config"/>
    <import path="github.com/onsi/ginkgo/reporters"/>
    <import path="math"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/client/cache"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/controller/framework"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/scheduler"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/metrics"/>
    <import path="github.com/prometheus/client_golang/prometheus"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/api"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/api/latest"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/api/validation"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/errors"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/api/v1"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/scheduler/algorithmprovider/defaults"/>
    <import path="encoding/csv"/>
    <import path="io"/>
    <import path="crypto/tls"/>
    <import path="crypto/x509"/>
    <import path="encoding/pem"/>
    <import path="encoding/base64"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/admission"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/client/testclient"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/resourcequota"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/meta"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/healthz"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/version/verflag"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/cmd/kube-scheduler/app"/>
    <import path="github.com/spf13/pflag"/>
    <import path="net"/>
    <import path="net/http/pprof"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/client/clientcmd/api"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/master/ports"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volume"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/mount"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/empty_dir"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/util"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/gce_pd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/host_path"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/exec"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/gce"/>
    <import path="syscall"/>
    <import path="github.com/ghodss/yaml"/>
    <import path="encoding/hex"/>
    <import path="github.com/google/gofuzz"/>
    <import path="github.com/stretchr/testify/assert"/>
    <import path="go/doc"/>
    <import path="text/template"/>
    <import path="github.com/docker/libcontainer/cgroups/fs"/>
    <import path="github.com/docker/libcontainer/configs"/>
    <import path="hash/adler32"/>
    <import path="github.com/davecgh/go-spew/spew"/>
    <import path="hash"/>
    <import path="text/tabwriter"/>
    <import path="crypto/rand"/>
    <import path="crypto/rsa"/>
    <import path="crypto/x509/pkix"/>
    <import path="math/big"/>
    <import path="unicode"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/workqueue"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/third_party/forked/json"/>
    <import path="golang.org/x/net/html"/>
    <import path="compress/gzip"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/httpstream"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/third_party/golang/netutil"/>
    <import path="github.com/docker/spdystream"/>
    <import path="mime"/>
    <import path="github.com/elazarl/go-bindata-assetfs"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/fielderrors"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/conversion"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/endpoints"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta2"/>
    <import path="github.com/fsouza/go-dockerclient"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/yaml"/>
    <import path="encoding/gob"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/rest"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/rest/resttest"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/registrytest"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/validation"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/endpoint"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/minion"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/generic"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/generic/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/secret"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/resourcequota"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/podtemplate"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/errors/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/pod"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/securitycontext"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/generic/rest"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/persistentvolumeclaim"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/persistentvolume"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/namespace"/>
    <import path="golang.org/x/net/websocket"/>
    <import path="net/http/httputil"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/proxy"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/endpoint/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/pod/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/controller"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/probe"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/slice"/>
    <import path="sync/atomic"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/iptables"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/proxy/config"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/config"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/auth/handlers"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/componentstatus"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/controller/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/event"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/limitrange"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/minion/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/namespace/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/persistentvolume/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/persistentvolumeclaim/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/podtemplate/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/resourcequota/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/secret/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/registry/service"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/ui"/>
    <import path="github.com/emicklei/go-restful"/>
    <import path="github.com/emicklei/go-restful/swagger"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/capabilities"/>
    <import path="github.com/google/cadvisor/info/v1"/>
    <import path="github.com/stretchr/testify/require"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/container"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/dockertools"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/httpstream/spdy"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/httplog"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/flushwriter"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/cadvisor"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/network"/>
    <import path="github.com/docker/libcontainer/selinux"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/metrics"/>
    <import path="github.com/google/cadvisor/events"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/fieldpath"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/envvars"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/prober"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/types"/>
    <import path="github.com/google/cadvisor/info/v2"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/credentialprovider"/>
    <import path="github.com/appc/spec/schema"/>
    <import path="github.com/appc/spec/schema/types"/>
    <import path="github.com/coreos/go-systemd/dbus"/>
    <import path="github.com/coreos/go-systemd/unit"/>
    <import path="github.com/coreos/rkt/store"/>
    <import path="github.com/docker/docker/pkg/parsers"/>
    <import path="github.com/kr/pty"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/probe/exec"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/probe/http"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/probe/tcp"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/lifecycle"/>
    <import path="github.com/golang/groupcache/lru"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/leaky"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet"/>
    <import path="crypto/md5"/>
    <import path="github.com/stretchr/testify/mock"/>
    <import path="github.com/google/cadvisor/fs"/>
    <import path="github.com/google/cadvisor/http"/>
    <import path="github.com/google/cadvisor/manager"/>
    <import path="github.com/google/cadvisor/storage/memory"/>
    <import path="github.com/google/cadvisor/utils/sysfs"/>
    <import path="os/signal"/>
    <import path="github.com/docker/docker/pkg/units"/>
    <import path="github.com/spf13/cobra"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/watch/json"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubectl/cmd/util"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubectl/resource"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/client/portforward"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/client/remotecommand"/>
    <import path="github.com/docker/docker/pkg/term"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubectl/cmd/config"/>
    <import path="github.com/daviddengcn/go-colortext"/>
    <import path="github.com/evanphx/json-patch"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/client/clientcmd/api/latest"/>
    <import path="golang.org/x/oauth2"/>
    <import path="golang.org/x/oauth2/google"/>
    <import path="golang.org/x/oauth2/jwt"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/third_party/forked/reflect"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/fake"/>
    <import path="github.com/rackspace/gophercloud"/>
    <import path="code.google.com/p/gcfg"/>
    <import path="github.com/rackspace/gophercloud/openstack/compute/v2/servers"/>
    <import path="github.com/rackspace/gophercloud/pagination"/>
    <import path="github.com/rackspace/gophercloud/rackspace"/>
    <import path="github.com/rackspace/gophercloud/rackspace/compute/v2/flavors"/>
    <import path="github.com/rackspace/gophercloud/rackspace/compute/v2/servers"/>
    <import path="encoding/xml"/>
    <import path="github.com/rackspace/gophercloud/openstack"/>
    <import path="github.com/rackspace/gophercloud/openstack/compute/v2/flavors"/>
    <import path="github.com/rackspace/gophercloud/openstack/networking/v2/extensions/lbaas/members"/>
    <import path="github.com/rackspace/gophercloud/openstack/networking/v2/extensions/lbaas/monitors"/>
    <import path="github.com/rackspace/gophercloud/openstack/networking/v2/extensions/lbaas/pools"/>
    <import path="github.com/rackspace/gophercloud/openstack/networking/v2/extensions/lbaas/vips"/>
    <import path="code.google.com/p/google-api-go-client/googleapi"/>
    <import path="code.google.com/p/google-api-go-client/compute/v1"/>
    <import path="code.google.com/p/google-api-go-client/container/v1beta1"/>
    <import path="google.golang.org/cloud/compute/metadata"/>
    <import path="github.com/mitchellh/goamz/aws"/>
    <import path="github.com/mitchellh/goamz/ec2"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/client/metrics"/>
    <import path="github.com/google/cadvisor/info/v1/test"/>
    <import path="github.com/imdario/mergo"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/client/clientcmd/api/v1"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/util/strategicpatch"/>
    <import path="runtime/debug"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/password/passwordfile"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/request/basicauth"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/request/union"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/request/x509"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/auth/authenticator/token/tokenfile"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/deny"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/api/testing"/>
    <import path="speter.net/go/exp/math/dec/inf"/>
    <import path="golang.org/x/net/context"/>
    <import path="github.com/codegangsta/negroni"/>
    <import path="github.com/gorilla/mux"/>
    <import path="github.com/xyproto/simpleredis"/>
    <import path="gopkg.in/yaml.v2"/>
    <import path="archive/tar"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/cmd/kubelet/app"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/nodecontroller"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/servicecontroller"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/controller"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/service"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/client/chaosclient"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/config"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/credentialprovider/gcp"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/network/exec"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/aws_ebs"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/git_repo"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/glusterfs"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/iscsi"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/nfs"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/persistent_claim"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/volume/secret"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/openstack"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/ovirt"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/rackspace"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/cloudprovider/vagrant"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/kubectl/cmd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/cmd/kube-proxy/app"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/proxy"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/cmd/kube-controller-manager/app"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/pkg/namespace"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/cmd/kube-apiserver/app"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/third_party/forked/coreos/go-etcd/etcd"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/limitranger"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/namespace/autoprovision"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/namespace/exists"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/namespace/lifecycle"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/resourcequota"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/plugin/pkg/admission/securitycontext/scdeny"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/cmd/genutils"/>
    <import path="github.com/cpuguy83/go-md2man/mangen"/>
    <import path="github.com/russross/blackfriday"/>
    <import path="github.com/GoogleCloudPlatform/kubernetes/test/e2e"/>
    <import path="github.com/skynetservices/skydns/msg"/>
  </imports>
</project>

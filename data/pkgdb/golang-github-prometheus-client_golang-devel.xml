<?xml version='1.0' encoding='ASCII'?>
<project url="" commit="commit" nvr="golang-github-prometheus-client_golang-0.4.0-1.fc23">
  <packages>
    <package importpath="github.com/prometheus/client_golang/text">
      <types>
        <type type="struct" name="ParseError">
          <field type="ident" def="int" name="Line"/>
          <field type="ident" def="string" name="Msg"/>
        </type>
        <type type="struct" name="Parser">
          <field type="map" name="metricFamiliesByName">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="MetricFamily"/>
              </type>
            </valtype>
          </field>
          <field type="pointer" name="buf">
            <type type="selector">
              <prefix value="bufio"/>
              <item value="Reader"/>
            </type>
          </field>
          <field type="ident" def="error" name="err"/>
          <field type="ident" def="int" name="lineCount"/>
          <field type="ident" def="byte" name="currentByte"/>
          <field type="selector" name="currentToken">
            <prefix value="bytes"/>
            <item value="Buffer"/>
          </field>
          <field type="pointer" name="currentMF">
            <type type="selector">
              <prefix value="dto"/>
              <item value="MetricFamily"/>
            </type>
          </field>
          <field type="pointer" name="currentMetric">
            <type type="selector">
              <prefix value="dto"/>
              <item value="Metric"/>
            </type>
          </field>
          <field type="pointer" name="currentLabelPair">
            <type type="selector">
              <prefix value="dto"/>
              <item value="LabelPair"/>
            </type>
          </field>
          <field type="map" name="currentLabels">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="summaries">
            <keytype type="ident" def="uint64"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="Metric"/>
              </type>
            </valtype>
          </field>
          <field type="ident" def="float64" name="currentQuantile"/>
          <field type="map" name="histograms">
            <keytype type="ident" def="uint64"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="Metric"/>
              </type>
            </valtype>
          </field>
          <field type="ident" def="float64" name="currentBucket"/>
          <field type="ident" def="bool" name="currentIsSummaryCount"/>
          <field type="ident" def="bool" name="currentIsSummarySum"/>
          <field type="ident" def="bool" name="currentIsHistogramCount"/>
          <field type="ident" def="bool" name="currentIsHistogramSum"/>
        </type>
      </types>
      <functions>
        <function name="WriteProtoDelimited">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="MetricFamily"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteProtoText">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="MetricFamily"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteProtoCompactText">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="MetricFamily"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="ParseError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TextToMetricFamilies">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Parser"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="dto"/>
                  <item value="MetricFamily"/>
                </type>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MetricFamilyToText">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="MetricFamily"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/prometheus/client_golang/extraction">
      <types>
        <type type="struct" name="ProcessOptions">
          <field type="selector" name="Timestamp">
            <prefix value="model"/>
            <item value="Timestamp"/>
          </field>
        </type>
        <type name="Ingester" type="interface">
          <method name="Ingest">
            <paramsList>
              <type type="selector">
                <prefix value="model"/>
                <item value="Samples"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Processor" type="interface">
          <method name="ProcessSingle">
            <paramsList>
              <type type="selector">
                <prefix value="io"/>
                <item value="Reader"/>
              </type>
              <type type="ident" def="Ingester"/>
              <type type="pointer">
                <type type="ident" def="ProcessOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="ProcessSingle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="processor004"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="Ingester"/>
            <type type="pointer">
              <type type="ident" def="ProcessOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ProcessSingle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="processor002"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="Ingester"/>
            <type type="pointer">
              <type type="ident" def="ProcessOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ProcessSingle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="processor001"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="Ingester"/>
            <type type="pointer">
              <type type="ident" def="ProcessOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Now">
          <recvList>
            <type type="pointer">
              <type type="ident" def="clock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="ProcessSingle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="metricFamilyProcessor"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="Ingester"/>
            <type type="pointer">
              <type type="ident" def="ProcessOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ProcessorForRequestHeader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Header"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Processor"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Processor004"/>
        <name value="Processor002"/>
        <name value="Processor001"/>
        <name value="MetricFamilyProcessor"/>
      </names>
    </package>
    <package importpath="github.com/prometheus/client_golang/prometheus">
      <types>
        <type type="struct" name="MetricVec">
          <field type="selector" name="mtx">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="children">
            <keytype type="ident" def="uint64"/>
            <valtype type="ident" def="Metric"/>
          </field>
          <field type="pointer" name="desc">
            <type type="ident" def="Desc"/>
          </field>
          <field type="selector" name="hash">
            <prefix value="hash"/>
            <item value="Hash64"/>
          </field>
          <field type="selector" name="buf">
            <prefix value="bytes"/>
            <item value="Buffer"/>
          </field>
          <field type="func" name="newMetric">
            <paramsList>
              <type type="ellipsis">
                <type type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Metric"/>
            </resultsList>
          </field>
        </type>
        <type name="ValueType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="Untyped" type="interface">
          <method name="Set">
            <paramsList>
              <type type="ident" def="float64"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Inc">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Dec">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Add">
            <paramsList>
              <type type="ident" def="float64"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Sub">
            <paramsList>
              <type type="ident" def="float64"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="UntypedOpts" type="ident">
          <type type="ident" def="Opts"/>
        </type>
        <type type="struct" name="UntypedVec">
          <field type="ident" def="MetricVec" name=""/>
        </type>
        <type name="UntypedFunc" type="interface"/>
        <type name="Summary" type="interface">
          <method name="Observe">
            <paramsList>
              <type type="ident" def="float64"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="SummaryOpts">
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="Subsystem"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Help"/>
          <field type="ident" def="Labels" name="ConstLabels"/>
          <field type="map" name="Objectives">
            <keytype type="ident" def="float64"/>
            <valtype type="ident" def="float64"/>
          </field>
          <field type="selector" name="MaxAge">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="uint32" name="AgeBuckets"/>
          <field type="ident" def="uint32" name="BufCap"/>
        </type>
        <type type="struct" name="SummaryVec">
          <field type="ident" def="MetricVec" name=""/>
        </type>
        <type name="Metric" type="interface">
          <method name="Desc">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Desc"/>
              </type>
            </resultsList>
          </method>
          <method name="Write">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="dto"/>
                  <item value="Metric"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Opts">
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="Subsystem"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Help"/>
          <field type="ident" def="Labels" name="ConstLabels"/>
        </type>
        <type name="LabelPairSorter" type="slice">
          <elmtype type="pointer">
            <type type="selector">
              <prefix value="dto"/>
              <item value="LabelPair"/>
            </type>
          </elmtype>
        </type>
        <type name="Histogram" type="interface">
          <method name="Observe">
            <paramsList>
              <type type="ident" def="float64"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="HistogramOpts">
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="Subsystem"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Help"/>
          <field type="ident" def="Labels" name="ConstLabels"/>
          <field type="slice" name="Buckets">
            <elmtype type="ident" def="float64"/>
          </field>
        </type>
        <type type="struct" name="HistogramVec">
          <field type="ident" def="MetricVec" name=""/>
        </type>
        <type name="Gauge" type="interface">
          <method name="Set">
            <paramsList>
              <type type="ident" def="float64"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Inc">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Dec">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Add">
            <paramsList>
              <type type="ident" def="float64"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Sub">
            <paramsList>
              <type type="ident" def="float64"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="GaugeOpts" type="ident">
          <type type="ident" def="Opts"/>
        </type>
        <type type="struct" name="GaugeVec">
          <field type="ident" def="MetricVec" name=""/>
        </type>
        <type name="GaugeFunc" type="interface"/>
        <type type="struct" name="ExpvarCollector">
          <field type="map" name="exports">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="Desc"/>
            </valtype>
          </field>
        </type>
        <type name="Labels" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="string"/>
        </type>
        <type type="struct" name="Desc">
          <field type="ident" def="string" name="fqName"/>
          <field type="ident" def="string" name="help"/>
          <field type="slice" name="constLabelPairs">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="LabelPair"/>
              </type>
            </elmtype>
          </field>
          <field type="slice" name="variableLabels">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="uint64" name="id"/>
          <field type="ident" def="uint64" name="dimHash"/>
          <field type="ident" def="error" name="err"/>
        </type>
        <type name="Counter" type="interface">
          <method name="Set">
            <paramsList>
              <type type="ident" def="float64"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Inc">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Add">
            <paramsList>
              <type type="ident" def="float64"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="CounterOpts" type="ident">
          <type type="ident" def="Opts"/>
        </type>
        <type type="struct" name="CounterVec">
          <field type="ident" def="MetricVec" name=""/>
        </type>
        <type name="CounterFunc" type="interface"/>
        <type name="Collector" type="interface">
          <method name="Describe">
            <paramsList>
              <type type="channel" dir="1">
                <type type="pointer">
                  <type type="ident" def="Desc"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Collect">
            <paramsList>
              <type type="channel" dir="1">
                <type type="ident" def="Metric"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="SelfCollector">
          <field type="ident" def="Metric" name="self"/>
        </type>
      </types>
      <functions>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MetricVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="ident" def="Desc"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Collect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MetricVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="ident" def="Metric"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetMetricWithLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MetricVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Metric"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMetricWith">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MetricVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Metric"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WithLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MetricVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Metric"/>
          </resultsList>
        </function>
        <function name="With">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MetricVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Metric"/>
          </resultsList>
        </function>
        <function name="DeleteLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MetricVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MetricVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MetricVec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Desc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="value"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Desc"/>
            </type>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="value"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Inc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="value"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Dec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="value"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="value"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Sub">
          <recvList>
            <type type="pointer">
              <type type="ident" def="value"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="value"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="Metric"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Desc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="valueFunc"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Desc"/>
            </type>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="valueFunc"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="Metric"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewConstMetric">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Desc"/>
            </type>
            <type type="ident" def="ValueType"/>
            <type type="ident" def="float64"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Metric"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MustNewConstMetric">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Desc"/>
            </type>
            <type type="ident" def="ValueType"/>
            <type type="ident" def="float64"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Metric"/>
          </resultsList>
        </function>
        <function name="Desc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="constMetric"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Desc"/>
            </type>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="constMetric"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="Metric"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewUntyped">
          <recvList/>
          <paramsList>
            <type type="ident" def="UntypedOpts"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Untyped"/>
          </resultsList>
        </function>
        <function name="NewUntypedVec">
          <recvList/>
          <paramsList>
            <type type="ident" def="UntypedOpts"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="UntypedVec"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMetricWithLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UntypedVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Untyped"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMetricWith">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UntypedVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Untyped"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WithLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UntypedVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Untyped"/>
          </resultsList>
        </function>
        <function name="With">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UntypedVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Untyped"/>
          </resultsList>
        </function>
        <function name="NewUntypedFunc">
          <recvList/>
          <paramsList>
            <type type="ident" def="UntypedOpts"/>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="float64"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="UntypedFunc"/>
          </resultsList>
        </function>
        <function name="NewSummary">
          <recvList/>
          <paramsList>
            <type type="ident" def="SummaryOpts"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Summary"/>
          </resultsList>
        </function>
        <function name="Desc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="summary"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Desc"/>
            </type>
          </resultsList>
        </function>
        <function name="Observe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="summary"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="summary"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="Metric"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="quantSort"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="quantSort"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="quantSort"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewSummaryVec">
          <recvList/>
          <paramsList>
            <type type="ident" def="SummaryOpts"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SummaryVec"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMetricWithLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SummaryVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Summary"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMetricWith">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SummaryVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Summary"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WithLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SummaryVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Summary"/>
          </resultsList>
        </function>
        <function name="With">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SummaryVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Summary"/>
          </resultsList>
        </function>
        <function name="Handler">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="UninstrumentedHandler">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="Register">
          <recvList/>
          <paramsList>
            <type type="ident" def="Collector"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MustRegister">
          <recvList/>
          <paramsList>
            <type type="ident" def="Collector"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RegisterOrGet">
          <recvList/>
          <paramsList>
            <type type="ident" def="Collector"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Collector"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MustRegisterOrGet">
          <recvList/>
          <paramsList>
            <type type="ident" def="Collector"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Collector"/>
          </resultsList>
        </function>
        <function name="Unregister">
          <recvList/>
          <paramsList>
            <type type="ident" def="Collector"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetMetricFamilyInjectionHook">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="slice">
                  <elmtype type="pointer">
                    <type type="selector">
                      <prefix value="dto"/>
                      <item value="MetricFamily"/>
                    </type>
                  </elmtype>
                </type>
              </resultsList>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PanicOnCollectError">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="EnableCollectChecks">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Register">
          <recvList>
            <type type="pointer">
              <type type="ident" def="registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Collector"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Collector"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterOrGet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Collector"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Collector"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unregister">
          <recvList>
            <type type="pointer">
              <type type="ident" def="registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Collector"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Push">
          <recvList>
            <type type="pointer">
              <type type="ident" def="registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="registry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="metricSorter"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="metricSorter"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="metricSorter"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Push">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PushAdd">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PushCollectors">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="Collector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PushAddCollectors">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="Collector"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewProcessCollector">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="processCollector"/>
            </type>
          </resultsList>
        </function>
        <function name="NewProcessCollectorPIDFn">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="int"/>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="processCollector"/>
            </type>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="processCollector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="ident" def="Desc"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Collect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="processCollector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="ident" def="Metric"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="BuildFQName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="LabelPairSorter"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="LabelPairSorter"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="LabelPairSorter"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="hashSorter"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="hashSorter"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="hashSorter"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewInvalidMetric">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Desc"/>
            </type>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Metric"/>
          </resultsList>
        </function>
        <function name="Desc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="invalidMetric"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Desc"/>
            </type>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="invalidMetric"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="Metric"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Now">
          <recvList>
            <type type="ident" def="nowFunc"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="InstrumentHandler">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
          </resultsList>
        </function>
        <function name="InstrumentHandlerFunc">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="http"/>
                  <item value="ResponseWriter"/>
                </type>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="Request"/>
                  </type>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
          </resultsList>
        </function>
        <function name="InstrumentHandlerWithOpts">
          <recvList/>
          <paramsList>
            <type type="ident" def="SummaryOpts"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
          </resultsList>
        </function>
        <function name="InstrumentHandlerFuncWithOpts">
          <recvList/>
          <paramsList>
            <type type="ident" def="SummaryOpts"/>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="http"/>
                  <item value="ResponseWriter"/>
                </type>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="Request"/>
                  </type>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
          </resultsList>
        </function>
        <function name="WriteHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="responseWriterDelegator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="responseWriterDelegator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LinearBuckets">
          <recvList/>
          <paramsList>
            <type type="ident" def="float64"/>
            <type type="ident" def="float64"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="ExponentialBuckets">
          <recvList/>
          <paramsList>
            <type type="ident" def="float64"/>
            <type type="ident" def="float64"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="NewHistogram">
          <recvList/>
          <paramsList>
            <type type="ident" def="HistogramOpts"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Histogram"/>
          </resultsList>
        </function>
        <function name="Desc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="histogram"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Desc"/>
            </type>
          </resultsList>
        </function>
        <function name="Observe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="histogram"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="histogram"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dto"/>
                <item value="Metric"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewHistogramVec">
          <recvList/>
          <paramsList>
            <type type="ident" def="HistogramOpts"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="HistogramVec"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMetricWithLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HistogramVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Histogram"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMetricWith">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HistogramVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Histogram"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WithLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HistogramVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Histogram"/>
          </resultsList>
        </function>
        <function name="With">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HistogramVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Histogram"/>
          </resultsList>
        </function>
        <function name="NewGoCollector">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="goCollector"/>
            </type>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="goCollector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="ident" def="Desc"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Collect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="goCollector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="ident" def="Metric"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewGauge">
          <recvList/>
          <paramsList>
            <type type="ident" def="GaugeOpts"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Gauge"/>
          </resultsList>
        </function>
        <function name="NewGaugeVec">
          <recvList/>
          <paramsList>
            <type type="ident" def="GaugeOpts"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GaugeVec"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMetricWithLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GaugeVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Gauge"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMetricWith">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GaugeVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Gauge"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WithLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GaugeVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Gauge"/>
          </resultsList>
        </function>
        <function name="With">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GaugeVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Gauge"/>
          </resultsList>
        </function>
        <function name="NewGaugeFunc">
          <recvList/>
          <paramsList>
            <type type="ident" def="GaugeOpts"/>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="float64"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="GaugeFunc"/>
          </resultsList>
        </function>
        <function name="NewExpvarCollector">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="ident" def="Desc"/>
              </valtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ExpvarCollector"/>
            </type>
          </resultsList>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExpvarCollector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="ident" def="Desc"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Collect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExpvarCollector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="ident" def="Metric"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewDesc">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Desc"/>
            </type>
          </resultsList>
        </function>
        <function name="NewInvalidDesc">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Desc"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Desc"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewCounter">
          <recvList/>
          <paramsList>
            <type type="ident" def="CounterOpts"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Counter"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="counter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewCounterVec">
          <recvList/>
          <paramsList>
            <type type="ident" def="CounterOpts"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CounterVec"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMetricWithLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CounterVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Counter"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMetricWith">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CounterVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Counter"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WithLabelValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CounterVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Counter"/>
          </resultsList>
        </function>
        <function name="With">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CounterVec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Labels"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Counter"/>
          </resultsList>
        </function>
        <function name="NewCounterFunc">
          <recvList/>
          <paramsList>
            <type type="ident" def="CounterOpts"/>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="float64"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="CounterFunc"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelfCollector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Metric"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Describe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelfCollector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="ident" def="Desc"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Collect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelfCollector"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="ident" def="Metric"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="CounterValue"/>
        <name value="GaugeValue"/>
        <name value="UntypedValue"/>
        <name value="DefObjectives"/>
        <name value="DefMaxAge"/>
        <name value="DefAgeBuckets"/>
        <name value="DefBufCap"/>
        <name value="APIVersion"/>
        <name value="DelimitedTelemetryContentType"/>
        <name value="TextTelemetryContentType"/>
        <name value="ProtoTextTelemetryContentType"/>
        <name value="ProtoCompactTextTelemetryContentType"/>
        <name value="DefBuckets"/>
      </names>
    </package>
    <package importpath="github.com/prometheus/client_golang/model">
      <types>
        <type name="Timestamp" type="ident">
          <type type="ident" def="int64"/>
        </type>
        <type name="SampleValue" type="ident">
          <type type="ident" def="float64"/>
        </type>
        <type type="struct" name="Sample">
          <field type="ident" def="Metric" name="Metric"/>
          <field type="ident" def="SampleValue" name="Value"/>
          <field type="ident" def="Timestamp" name="Timestamp"/>
        </type>
        <type name="Samples" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="Sample"/>
          </elmtype>
        </type>
        <type name="Metric" type="map">
          <keytype type="ident" def="LabelName"/>
          <valtype type="ident" def="LabelValue"/>
        </type>
        <type type="struct" name="COWMetric">
          <field type="ident" def="bool" name="Copied"/>
          <field type="ident" def="Metric" name="Metric"/>
        </type>
        <type name="LabelValue" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="LabelValues" type="slice">
          <elmtype type="ident" def="LabelValue"/>
        </type>
        <type name="LabelSet" type="map">
          <keytype type="ident" def="LabelName"/>
          <valtype type="ident" def="LabelValue"/>
        </type>
        <type name="LabelName" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="LabelNames" type="slice">
          <elmtype type="ident" def="LabelName"/>
        </type>
        <type name="Fingerprint" type="ident">
          <type type="ident" def="uint64"/>
        </type>
        <type name="Fingerprints" type="slice">
          <elmtype type="ident" def="Fingerprint"/>
        </type>
        <type name="FingerprintSet" type="map">
          <keytype type="ident" def="Fingerprint"/>
          <valtype type="struct" name=""/>
        </type>
      </types>
      <functions>
        <function name="Equal">
          <recvList>
            <type type="ident" def="Timestamp"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Timestamp"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Before">
          <recvList>
            <type type="ident" def="Timestamp"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Timestamp"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="After">
          <recvList>
            <type type="ident" def="Timestamp"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Timestamp"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="ident" def="Timestamp"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="native_time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Timestamp"/>
          </resultsList>
        </function>
        <function name="Sub">
          <recvList>
            <type type="ident" def="Timestamp"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Timestamp"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="native_time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="Time">
          <recvList>
            <type type="ident" def="Timestamp"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="native_time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="Unix">
          <recvList>
            <type type="ident" def="Timestamp"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="UnixNano">
          <recvList>
            <type type="ident" def="Timestamp"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Timestamp"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Timestamp"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Now">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Timestamp"/>
          </resultsList>
        </function>
        <function name="TimestampFromTime">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="native_time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Timestamp"/>
          </resultsList>
        </function>
        <function name="TimestampFromUnix">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Timestamp"/>
          </resultsList>
        </function>
        <function name="TimestampFromUnixNano">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Timestamp"/>
          </resultsList>
        </function>
        <function name="LabelsToSignature">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="SignatureForLabels">
          <recvList/>
          <paramsList>
            <type type="ident" def="Metric"/>
            <type type="ident" def="LabelNames"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="SignatureWithoutLabels">
          <recvList/>
          <paramsList>
            <type type="ident" def="Metric"/>
            <type type="map">
              <keytype type="ident" def="LabelName"/>
              <valtype type="struct" name=""/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="ident" def="SampleValue"/>
          </recvList>
          <paramsList>
            <type type="ident" def="SampleValue"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="SampleValue"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="SampleValue"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Sample"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Sample"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="Samples"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="Samples"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="Samples"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Equal">
          <recvList>
            <type type="ident" def="Samples"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Samples"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="ident" def="Metric"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Metric"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Before">
          <recvList>
            <type type="ident" def="Metric"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Metric"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Metric"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Fingerprint">
          <recvList>
            <type type="ident" def="Metric"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Fingerprint"/>
          </resultsList>
        </function>
        <function name="Clone">
          <recvList>
            <type type="ident" def="Metric"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Metric"/>
          </resultsList>
        </function>
        <function name="MergeFromLabelSet">
          <recvList>
            <type type="ident" def="Metric"/>
          </recvList>
          <paramsList>
            <type type="ident" def="LabelSet"/>
            <type type="ident" def="LabelName"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="COWMetric"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="LabelName"/>
            <type type="ident" def="LabelValue"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="COWMetric"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="LabelName"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="COWMetric"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="COWMetric"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="LabelValues"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="LabelValues"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="LabelValues"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Merge">
          <recvList>
            <type type="ident" def="LabelSet"/>
          </recvList>
          <paramsList>
            <type type="ident" def="LabelSet"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="LabelSet"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="LabelSet"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="MergeFromMetric">
          <recvList>
            <type type="ident" def="LabelSet"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Metric"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="LabelNames"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="LabelNames"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="LabelNames"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="LabelNames"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Fingerprint"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="Fingerprint"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Fingerprint"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="ident" def="Fingerprint"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Fingerprint"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="LoadFromString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Fingerprint"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="Fingerprints"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="Fingerprints"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="Fingerprints"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Equal">
          <recvList>
            <type type="ident" def="FingerprintSet"/>
          </recvList>
          <paramsList>
            <type type="ident" def="FingerprintSet"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Intersection">
          <recvList>
            <type type="ident" def="FingerprintSet"/>
          </recvList>
          <paramsList>
            <type type="ident" def="FingerprintSet"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="FingerprintSet"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="MinimumTick"/>
        <name value="Earliest"/>
        <name value="Latest"/>
        <name value="SeparatorByte"/>
        <name value="ExporterLabelPrefix"/>
        <name value="MetricNameLabel"/>
        <name value="AddressLabel"/>
        <name value="ReservedLabelPrefix"/>
        <name value="MetaLabelPrefix"/>
        <name value="JobLabel"/>
        <name value="InstanceLabel"/>
        <name value="BucketLabel"/>
        <name value="QuantileLabel"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="fmt"/>
    <import path="io"/>
    <import path="github.com/golang/protobuf/proto"/>
    <import path="github.com/matttproud/golang_protobuf_extensions/pbutil"/>
    <import path="github.com/prometheus/client_model/go"/>
    <import path="math"/>
    <import path="strings"/>
    <import path="testing"/>
    <import path="bufio"/>
    <import path="bytes"/>
    <import path="strconv"/>
    <import path="github.com/prometheus/client_golang/model"/>
    <import path="compress/gzip"/>
    <import path="io/ioutil"/>
    <import path="hash/fnv"/>
    <import path="hash"/>
    <import path="sync"/>
    <import path="errors"/>
    <import path="sort"/>
    <import path="sync/atomic"/>
    <import path="math/rand"/>
    <import path="testing/quick"/>
    <import path="time"/>
    <import path="github.com/beorn7/perks/quantile"/>
    <import path="encoding/binary"/>
    <import path="net/http"/>
    <import path="net/url"/>
    <import path="os"/>
    <import path="bitbucket.org/ww/goautoneg"/>
    <import path="github.com/prometheus/client_golang/text"/>
    <import path="net/http/httptest"/>
    <import path="regexp"/>
    <import path="github.com/prometheus/procfs"/>
    <import path="reflect"/>
    <import path="runtime"/>
    <import path="expvar"/>
    <import path="github.com/prometheus/client_golang/prometheus"/>
    <import path="encoding/json"/>
    <import path="flag"/>
    <import path="path"/>
    <import path="mime"/>
  </imports>
</project>
